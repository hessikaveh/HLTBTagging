# hltGetConfiguration /users/hkaveh/Tutorial/BTagHLTtest/V3 --setup /dev/CMSSW_9_2_0/GRun/V140 --data --globaltag 94X_dataRun2_ReReco_EOY17_v1 --input root://cms-xrd-global.cern.ch//store/data/Run2017C/MuonEG/RAW/v1/000/299/368/00000/00E9C4F1-E76B-E711-8952-02163E01A27B.root --process MYHLT --full --offline --unprescale --max-events 10 --output none

# /users/hkaveh/Tutorial/BTagHLTtest/V3 (CMSSW_9_2_10)

import FWCore.ParameterSet.Config as cms

process = cms.Process( "MYHLT" )
process.load("setup_dev_CMSSW_9_2_0_GRun_V140_cff")

process.HLTConfigVersion = cms.PSet(
  tableName = cms.string('/users/hkaveh/Tutorial/BTagHLTtest/V3')
)

process.hltGetConditions = cms.EDAnalyzer( "EventSetupRecordDataGetter",
    toGet = cms.VPSet( 
    ),
    verbose = cms.untracked.bool( False )
)
process.hltGetRaw = cms.EDAnalyzer( "HLTGetRaw",
    RawDataCollection = cms.InputTag( "rawDataCollector" )
)
process.hltBoolFalse = cms.EDFilter( "HLTBool",
    result = cms.bool( False )
)
process.hltTriggerType = cms.EDFilter( "HLTTriggerTypeFilter",
    SelectedTriggerType = cms.int32( 1 )
)
process.hltGtStage2Digis = cms.EDProducer( "L1TRawToDigi",
    lenSlinkTrailer = cms.untracked.int32( 8 ),
    lenAMC13Header = cms.untracked.int32( 8 ),
    CTP7 = cms.untracked.bool( False ),
    lenAMC13Trailer = cms.untracked.int32( 8 ),
    Setup = cms.string( "stage2::GTSetup" ),
    MinFeds = cms.uint32( 0 ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    lenSlinkHeader = cms.untracked.int32( 8 ),
    MTF7 = cms.untracked.bool( False ),
    FWId = cms.uint32( 0 ),
    TMTCheck = cms.bool( True ),
    debug = cms.untracked.bool( False ),
    FedIds = cms.vint32( 1404 ),
    lenAMCHeader = cms.untracked.int32( 8 ),
    lenAMCTrailer = cms.untracked.int32( 0 ),
    FWOverride = cms.bool( False )
)
process.hltGtStage2ObjectMap = cms.EDProducer( "L1TGlobalProducer",
    L1DataBxInEvent = cms.int32( 5 ),
    JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    AlgorithmTriggersUnmasked = cms.bool( True ),
    EmulateBxInEvent = cms.int32( 1 ),
    AlgorithmTriggersUnprescaled = cms.bool( True ),
    PrintL1Menu = cms.untracked.bool( False ),
    Verbosity = cms.untracked.int32( 0 ),
    EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    ProduceL1GtDaqRecord = cms.bool( True ),
    PrescaleSet = cms.uint32( 1 ),
    ExtInputTag = cms.InputTag( "hltGtStage2Digis" ),
    EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    TriggerMenuLuminosity = cms.string( "startup" ),
    ProduceL1GtObjectMapRecord = cms.bool( True ),
    AlternativeNrBxBoardDaq = cms.uint32( 0 ),
    PrescaleCSVFile = cms.string( "prescale_L1TGlobal.csv" ),
    TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    BstLengthBytes = cms.int32( -1 ),
    MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' )
)
process.hltScalersRawToDigi = cms.EDProducer( "ScalersRawToDigi",
    scalersInputTag = cms.InputTag( "rawDataCollector" )
)
process.hltOnlineBeamSpot = cms.EDProducer( "BeamSpotOnlineProducer",
    maxZ = cms.double( 40.0 ),
    src = cms.InputTag( "hltScalersRawToDigi" ),
    gtEvmLabel = cms.InputTag( "" ),
    changeToCMSCoordinates = cms.bool( False ),
    setSigmaZ = cms.double( 0.0 ),
    maxRadius = cms.double( 2.0 )
)
process.hltL1sMu23EG10IorMu20EG17 = cms.EDFilter( "HLTL1TSeed",
    L1SeedsLogicalExpression = cms.string( "L1_Mu23_EG10 OR  L1_Mu20_EG17" ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    saveTags = cms.bool( True ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVL = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    PreviousCandTag = cms.InputTag( "hltL1sMu23EG10IorMu20EG17" ),
    MinPt = cms.double( 0.0 ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' )
)
process.hltMuonDTDigis = cms.EDProducer( "DTUnpackingModule",
    useStandardFEDid = cms.bool( True ),
    maxFEDid = cms.untracked.int32( 779 ),
    inputLabel = cms.InputTag( "rawDataCollector" ),
    minFEDid = cms.untracked.int32( 770 ),
    dataType = cms.string( "DDU" ),
    readOutParameters = cms.PSet( 
      localDAQ = cms.untracked.bool( False ),
      debug = cms.untracked.bool( False ),
      rosParameters = cms.PSet( 
        localDAQ = cms.untracked.bool( False ),
        debug = cms.untracked.bool( False ),
        writeSC = cms.untracked.bool( True ),
        readDDUIDfromDDU = cms.untracked.bool( True ),
        readingDDU = cms.untracked.bool( True ),
        performDataIntegrityMonitor = cms.untracked.bool( False )
      ),
      performDataIntegrityMonitor = cms.untracked.bool( False )
    ),
    dqmOnly = cms.bool( False )
)
process.hltDt1DRecHits = cms.EDProducer( "DTRecHitProducer",
    debug = cms.untracked.bool( False ),
    recAlgoConfig = cms.PSet( 
      maxTime = cms.double( 420.0 ),
      debug = cms.untracked.bool( False ),
      stepTwoFromDigi = cms.bool( False ),
      tTrigModeConfig = cms.PSet( 
        debug = cms.untracked.bool( False ),
        tofCorrType = cms.int32( 0 ),
        tTrigLabel = cms.string( "" ),
        wirePropCorrType = cms.int32( 0 ),
        doTOFCorrection = cms.bool( True ),
        vPropWire = cms.double( 24.4 ),
        doT0Correction = cms.bool( True ),
        doWirePropCorrection = cms.bool( True )
      ),
      useUncertDB = cms.bool( True ),
      doVdriftCorr = cms.bool( True ),
      minTime = cms.double( -3.0 ),
      tTrigMode = cms.string( "DTTTrigSyncFromDB" )
    ),
    dtDigiLabel = cms.InputTag( "hltMuonDTDigis" ),
    recAlgo = cms.string( "DTLinearDriftFromDBAlgo" )
)
process.hltDt4DSegments = cms.EDProducer( "DTRecSegment4DProducer",
    debug = cms.untracked.bool( False ),
    Reco4DAlgoName = cms.string( "DTCombinatorialPatternReco4D" ),
    recHits2DLabel = cms.InputTag( "dt2DSegments" ),
    recHits1DLabel = cms.InputTag( "hltDt1DRecHits" ),
    Reco4DAlgoConfig = cms.PSet( 
      Reco2DAlgoConfig = cms.PSet( 
        AlphaMaxPhi = cms.double( 1.0 ),
        debug = cms.untracked.bool( False ),
        segmCleanerMode = cms.int32( 2 ),
        AlphaMaxTheta = cms.double( 0.9 ),
        hit_afterT0_resolution = cms.double( 0.03 ),
        performT0_vdriftSegCorrection = cms.bool( False ),
        recAlgo = cms.string( "DTLinearDriftFromDBAlgo" ),
        recAlgoConfig = cms.PSet( 
          maxTime = cms.double( 420.0 ),
          debug = cms.untracked.bool( False ),
          stepTwoFromDigi = cms.bool( False ),
          tTrigModeConfig = cms.PSet( 
            debug = cms.untracked.bool( False ),
            tofCorrType = cms.int32( 0 ),
            tTrigLabel = cms.string( "" ),
            wirePropCorrType = cms.int32( 0 ),
            doTOFCorrection = cms.bool( True ),
            vPropWire = cms.double( 24.4 ),
            doT0Correction = cms.bool( True ),
            doWirePropCorrection = cms.bool( True )
          ),
          useUncertDB = cms.bool( True ),
          doVdriftCorr = cms.bool( True ),
          minTime = cms.double( -3.0 ),
          tTrigMode = cms.string( "DTTTrigSyncFromDB" )
        ),
        MaxAllowedHits = cms.uint32( 50 ),
        nUnSharedHitsMin = cms.int32( 2 ),
        nSharedHitsMax = cms.int32( 2 ),
        performT0SegCorrection = cms.bool( False ),
        perform_delta_rejecting = cms.bool( False )
      ),
      Reco2DAlgoName = cms.string( "DTCombinatorialPatternReco" ),
      debug = cms.untracked.bool( False ),
      segmCleanerMode = cms.int32( 2 ),
      AllDTRecHits = cms.bool( True ),
      hit_afterT0_resolution = cms.double( 0.03 ),
      performT0_vdriftSegCorrection = cms.bool( False ),
      recAlgo = cms.string( "DTLinearDriftFromDBAlgo" ),
      recAlgoConfig = cms.PSet( 
        maxTime = cms.double( 420.0 ),
        debug = cms.untracked.bool( False ),
        stepTwoFromDigi = cms.bool( False ),
        tTrigModeConfig = cms.PSet( 
          debug = cms.untracked.bool( False ),
          tofCorrType = cms.int32( 0 ),
          tTrigLabel = cms.string( "" ),
          wirePropCorrType = cms.int32( 0 ),
          doTOFCorrection = cms.bool( True ),
          vPropWire = cms.double( 24.4 ),
          doT0Correction = cms.bool( True ),
          doWirePropCorrection = cms.bool( True )
        ),
        useUncertDB = cms.bool( True ),
        doVdriftCorr = cms.bool( True ),
        minTime = cms.double( -3.0 ),
        tTrigMode = cms.string( "DTTTrigSyncFromDB" )
      ),
      nUnSharedHitsMin = cms.int32( 2 ),
      nSharedHitsMax = cms.int32( 2 ),
      performT0SegCorrection = cms.bool( False ),
      perform_delta_rejecting = cms.bool( False )
    )
)
process.hltMuonCSCDigis = cms.EDProducer( "CSCDCCUnpacker",
    PrintEventNumber = cms.untracked.bool( False ),
    SuppressZeroLCT = cms.untracked.bool( True ),
    UseExaminer = cms.bool( True ),
    Debug = cms.untracked.bool( False ),
    ErrorMask = cms.uint32( 0 ),
    InputObjects = cms.InputTag( "rawDataCollector" ),
    ExaminerMask = cms.uint32( 535557110 ),
    runDQM = cms.untracked.bool( False ),
    UnpackStatusDigis = cms.bool( False ),
    VisualFEDInspect = cms.untracked.bool( False ),
    FormatedEventDump = cms.untracked.bool( False ),
    UseFormatStatus = cms.bool( True ),
    UseSelectiveUnpacking = cms.bool( True ),
    VisualFEDShort = cms.untracked.bool( False )
)
process.hltCsc2DRecHits = cms.EDProducer( "CSCRecHitDProducer",
    XTasymmetry_ME1b = cms.double( 0.0 ),
    XTasymmetry_ME1a = cms.double( 0.0 ),
    ConstSyst_ME1a = cms.double( 0.022 ),
    ConstSyst_ME41 = cms.double( 0.0 ),
    CSCWireTimeWindowHigh = cms.int32( 15 ),
    CSCStripxtalksOffset = cms.double( 0.03 ),
    CSCUseCalibrations = cms.bool( True ),
    CSCUseTimingCorrections = cms.bool( True ),
    CSCNoOfTimeBinsForDynamicPedestal = cms.int32( 2 ),
    XTasymmetry_ME22 = cms.double( 0.0 ),
    UseFivePoleFit = cms.bool( True ),
    XTasymmetry_ME21 = cms.double( 0.0 ),
    ConstSyst_ME21 = cms.double( 0.0 ),
    ConstSyst_ME12 = cms.double( 0.0 ),
    ConstSyst_ME31 = cms.double( 0.0 ),
    ConstSyst_ME22 = cms.double( 0.0 ),
    ConstSyst_ME13 = cms.double( 0.0 ),
    ConstSyst_ME32 = cms.double( 0.0 ),
    readBadChambers = cms.bool( True ),
    CSCWireTimeWindowLow = cms.int32( 0 ),
    NoiseLevel_ME13 = cms.double( 8.0 ),
    XTasymmetry_ME41 = cms.double( 0.0 ),
    NoiseLevel_ME32 = cms.double( 9.0 ),
    NoiseLevel_ME31 = cms.double( 9.0 ),
    CSCStripClusterChargeCut = cms.double( 25.0 ),
    ConstSyst_ME1b = cms.double( 0.007 ),
    CSCStripClusterSize = cms.untracked.int32( 3 ),
    CSCStripPeakThreshold = cms.double( 10.0 ),
    readBadChannels = cms.bool( False ),
    NoiseLevel_ME12 = cms.double( 9.0 ),
    UseParabolaFit = cms.bool( False ),
    CSCUseReducedWireTimeWindow = cms.bool( False ),
    XTasymmetry_ME13 = cms.double( 0.0 ),
    XTasymmetry_ME12 = cms.double( 0.0 ),
    wireDigiTag = cms.InputTag( 'hltMuonCSCDigis','MuonCSCWireDigi' ),
    CSCDebug = cms.untracked.bool( False ),
    CSCUseGasGainCorrections = cms.bool( False ),
    XTasymmetry_ME31 = cms.double( 0.0 ),
    XTasymmetry_ME32 = cms.double( 0.0 ),
    UseAverageTime = cms.bool( False ),
    NoiseLevel_ME1a = cms.double( 7.0 ),
    NoiseLevel_ME1b = cms.double( 8.0 ),
    CSCWireClusterDeltaT = cms.int32( 1 ),
    CSCUseStaticPedestals = cms.bool( False ),
    stripDigiTag = cms.InputTag( 'hltMuonCSCDigis','MuonCSCStripDigi' ),
    CSCstripWireDeltaTime = cms.int32( 8 ),
    NoiseLevel_ME21 = cms.double( 9.0 ),
    NoiseLevel_ME22 = cms.double( 9.0 ),
    NoiseLevel_ME41 = cms.double( 9.0 )
)
process.hltCscSegments = cms.EDProducer( "CSCSegmentProducer",
    inputObjects = cms.InputTag( "hltCsc2DRecHits" ),
    algo_psets = cms.VPSet( 
      cms.PSet(  parameters_per_chamber_type = cms.vint32( 2, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
        algo_psets = cms.VPSet( 
          cms.PSet(  dYclusBoxMax = cms.double( 8.0 ),
            hitDropLimit4Hits = cms.double( 0.6 ),
            maxRatioResidualPrune = cms.double( 3.0 ),
            curvePenaltyThreshold = cms.double( 0.85 ),
            maxRecHitsInCluster = cms.int32( 20 ),
            useShowering = cms.bool( False ),
            BPMinImprovement = cms.double( 10000.0 ),
            curvePenalty = cms.double( 2.0 ),
            ForceCovariance = cms.bool( False ),
            yweightPenalty = cms.double( 1.5 ),
            dPhiFineMax = cms.double( 0.025 ),
            SeedBig = cms.double( 0.0015 ),
            NormChi2Cut3D = cms.double( 10.0 ),
            Covariance = cms.double( 0.0 ),
            CSCDebug = cms.untracked.bool( False ),
            tanThetaMax = cms.double( 1.2 ),
            Pruning = cms.bool( True ),
            tanPhiMax = cms.double( 0.5 ),
            onlyBestSegment = cms.bool( False ),
            dXclusBoxMax = cms.double( 4.0 ),
            maxDTheta = cms.double( 999.0 ),
            preClustering = cms.bool( True ),
            preClusteringUseChaining = cms.bool( True ),
            yweightPenaltyThreshold = cms.double( 1.0 ),
            hitDropLimit6Hits = cms.double( 0.3333 ),
            prePrun = cms.bool( True ),
            CorrectTheErrors = cms.bool( True ),
            ForceCovarianceAll = cms.bool( False ),
            NormChi2Cut2D = cms.double( 20.0 ),
            SeedSmall = cms.double( 2.0E-4 ),
            minHitsPerSegment = cms.int32( 3 ),
            dRPhiFineMax = cms.double( 8.0 ),
            maxDPhi = cms.double( 999.0 ),
            hitDropLimit5Hits = cms.double( 0.8 ),
            BrutePruning = cms.bool( True ),
            prePrunLimit = cms.double( 3.17 )
          ),
          cms.PSet(  dYclusBoxMax = cms.double( 8.0 ),
            hitDropLimit4Hits = cms.double( 0.6 ),
            maxRatioResidualPrune = cms.double( 3.0 ),
            curvePenaltyThreshold = cms.double( 0.85 ),
            maxRecHitsInCluster = cms.int32( 24 ),
            useShowering = cms.bool( False ),
            BPMinImprovement = cms.double( 10000.0 ),
            curvePenalty = cms.double( 2.0 ),
            ForceCovariance = cms.bool( False ),
            yweightPenalty = cms.double( 1.5 ),
            dPhiFineMax = cms.double( 0.025 ),
            SeedBig = cms.double( 0.0015 ),
            NormChi2Cut3D = cms.double( 10.0 ),
            Covariance = cms.double( 0.0 ),
            CSCDebug = cms.untracked.bool( False ),
            tanThetaMax = cms.double( 1.2 ),
            Pruning = cms.bool( True ),
            tanPhiMax = cms.double( 0.5 ),
            onlyBestSegment = cms.bool( False ),
            dXclusBoxMax = cms.double( 4.0 ),
            maxDTheta = cms.double( 999.0 ),
            preClustering = cms.bool( True ),
            preClusteringUseChaining = cms.bool( True ),
            yweightPenaltyThreshold = cms.double( 1.0 ),
            hitDropLimit6Hits = cms.double( 0.3333 ),
            prePrun = cms.bool( True ),
            CorrectTheErrors = cms.bool( True ),
            ForceCovarianceAll = cms.bool( False ),
            NormChi2Cut2D = cms.double( 20.0 ),
            SeedSmall = cms.double( 2.0E-4 ),
            minHitsPerSegment = cms.int32( 3 ),
            dRPhiFineMax = cms.double( 8.0 ),
            maxDPhi = cms.double( 999.0 ),
            hitDropLimit5Hits = cms.double( 0.8 ),
            BrutePruning = cms.bool( True ),
            prePrunLimit = cms.double( 3.17 )
          )
        ),
        algo_name = cms.string( "CSCSegAlgoST" ),
        chamber_types = cms.vstring( 'ME1/a',
          'ME1/b',
          'ME1/2',
          'ME1/3',
          'ME2/1',
          'ME2/2',
          'ME3/1',
          'ME3/2',
          'ME4/1',
          'ME4/2' )
      )
    ),
    algo_type = cms.int32( 1 )
)
process.hltMuonRPCDigis = cms.EDProducer( "RPCUnpackingModule",
    InputLabel = cms.InputTag( "rawDataCollector" ),
    doSynchro = cms.bool( False )
)
process.hltRpcRecHits = cms.EDProducer( "RPCRecHitProducer",
    recAlgoConfig = cms.PSet(  ),
    deadvecfile = cms.FileInPath( "RecoLocalMuon/RPCRecHit/data/RPCDeadVec.dat" ),
    rpcDigiLabel = cms.InputTag( "hltMuonRPCDigis" ),
    maskvecfile = cms.FileInPath( "RecoLocalMuon/RPCRecHit/data/RPCMaskVec.dat" ),
    recAlgo = cms.string( "RPCRecHitStandardAlgo" ),
    deadSource = cms.string( "File" ),
    maskSource = cms.string( "File" )
)
process.hltL2OfflineMuonSeeds = cms.EDProducer( "MuonSeedGenerator",
    EnableDTMeasurement = cms.bool( True ),
    EnableCSCMeasurement = cms.bool( True ),
    EnableME0Measurement = cms.bool( False ),
    SMB_21 = cms.vdouble( 1.043, -0.124, 0.0, 0.183, 0.0, 0.0 ),
    SMB_20 = cms.vdouble( 1.011, -0.052, 0.0, 0.188, 0.0, 0.0 ),
    SMB_22 = cms.vdouble( 1.474, -0.758, 0.0, 0.185, 0.0, 0.0 ),
    OL_2213 = cms.vdouble( 0.117, 0.0, 0.0, 0.044, 0.0, 0.0 ),
    SME_11 = cms.vdouble( 3.295, -1.527, 0.112, 0.378, 0.02, 0.0 ),
    SME_13 = cms.vdouble( -1.286, 1.711, 0.0, 0.356, 0.0, 0.0 ),
    SME_12 = cms.vdouble( 0.102, 0.599, 0.0, 0.38, 0.0, 0.0 ),
    DT_34_2_scale = cms.vdouble( -11.901897, 0.0 ),
    OL_1213_0_scale = cms.vdouble( -4.488158, 0.0 ),
    OL_1222_0_scale = cms.vdouble( -5.810449, 0.0 ),
    DT_13 = cms.vdouble( 0.315, 0.068, -0.127, 0.051, -0.002, 0.0 ),
    DT_12 = cms.vdouble( 0.183, 0.054, -0.087, 0.028, 0.002, 0.0 ),
    DT_14 = cms.vdouble( 0.359, 0.052, -0.107, 0.072, -0.004, 0.0 ),
    CSC_13_3_scale = cms.vdouble( -1.701268, 0.0 ),
    DT_24_2_scale = cms.vdouble( -6.63094, 0.0 ),
    CSC_23 = cms.vdouble( -0.081, 0.113, -0.029, 0.015, 0.008, 0.0 ),
    CSC_24 = cms.vdouble( 0.004, 0.021, -0.002, 0.053, 0.0, 0.0 ),
    OL_2222 = cms.vdouble( 0.107, 0.0, 0.0, 0.04, 0.0, 0.0 ),
    DT_14_2_scale = cms.vdouble( -4.808546, 0.0 ),
    SMB_10 = cms.vdouble( 1.387, -0.038, 0.0, 0.19, 0.0, 0.0 ),
    SMB_11 = cms.vdouble( 1.247, 0.72, -0.802, 0.229, -0.075, 0.0 ),
    SMB_12 = cms.vdouble( 2.128, -0.956, 0.0, 0.199, 0.0, 0.0 ),
    SME_21 = cms.vdouble( -0.529, 1.194, -0.358, 0.472, 0.086, 0.0 ),
    SME_22 = cms.vdouble( -1.207, 1.491, -0.251, 0.189, 0.243, 0.0 ),
    DT_13_2_scale = cms.vdouble( -4.257687, 0.0 ),
    CSC_34 = cms.vdouble( 0.062, -0.067, 0.019, 0.021, 0.003, 0.0 ),
    SME_22_0_scale = cms.vdouble( -3.457901, 0.0 ),
    DT_24_1_scale = cms.vdouble( -7.490909, 0.0 ),
    OL_1232_0_scale = cms.vdouble( -5.964634, 0.0 ),
    SMB_32 = cms.vdouble( 0.67, -0.327, 0.0, 0.22, 0.0, 0.0 ),
    SME_13_0_scale = cms.vdouble( 0.104905, 0.0 ),
    SMB_22_0_scale = cms.vdouble( 1.346681, 0.0 ),
    CSC_12_1_scale = cms.vdouble( -6.434242, 0.0 ),
    DT_34 = cms.vdouble( 0.044, 0.004, -0.013, 0.029, 0.003, 0.0 ),
    ME0RecSegmentLabel = cms.InputTag( "me0Segments" ),
    SME_32 = cms.vdouble( -0.901, 1.333, -0.47, 0.41, 0.073, 0.0 ),
    SME_31 = cms.vdouble( -1.594, 1.482, -0.317, 0.487, 0.097, 0.0 ),
    SMB_32_0_scale = cms.vdouble( -3.054156, 0.0 ),
    crackEtas = cms.vdouble( 0.2, 1.6, 1.7 ),
    SME_11_0_scale = cms.vdouble( 1.325085, 0.0 ),
    SMB_20_0_scale = cms.vdouble( 1.486168, 0.0 ),
    DT_13_1_scale = cms.vdouble( -4.520923, 0.0 ),
    CSC_24_1_scale = cms.vdouble( -6.055701, 0.0 ),
    CSC_01_1_scale = cms.vdouble( -1.915329, 0.0 ),
    DT_23 = cms.vdouble( 0.13, 0.023, -0.057, 0.028, 0.004, 0.0 ),
    DT_24 = cms.vdouble( 0.176, 0.014, -0.051, 0.051, 0.003, 0.0 ),
    SMB_12_0_scale = cms.vdouble( 2.283221, 0.0 ),
    deltaPhiSearchWindow = cms.double( 0.25 ),
    SMB_30_0_scale = cms.vdouble( -3.629838, 0.0 ),
    SME_42 = cms.vdouble( -0.003, 0.005, 0.005, 0.608, 0.076, 0.0 ),
    SME_41 = cms.vdouble( -0.003, 0.005, 0.005, 0.608, 0.076, 0.0 ),
    deltaEtaSearchWindow = cms.double( 0.2 ),
    CSC_12_2_scale = cms.vdouble( -1.63622, 0.0 ),
    DT_34_1_scale = cms.vdouble( -13.783765, 0.0 ),
    CSC_34_1_scale = cms.vdouble( -11.520507, 0.0 ),
    OL_2213_0_scale = cms.vdouble( -7.239789, 0.0 ),
    CSC_13_2_scale = cms.vdouble( -6.077936, 0.0 ),
    CSC_12_3_scale = cms.vdouble( -1.63622, 0.0 ),
    deltaEtaCrackSearchWindow = cms.double( 0.25 ),
    SME_21_0_scale = cms.vdouble( -0.040862, 0.0 ),
    OL_1232 = cms.vdouble( 0.184, 0.0, 0.0, 0.066, 0.0, 0.0 ),
    DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
    SMB_10_0_scale = cms.vdouble( 2.448566, 0.0 ),
    CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
    CSC_23_2_scale = cms.vdouble( -6.079917, 0.0 ),
    scaleDT = cms.bool( True ),
    DT_12_2_scale = cms.vdouble( -3.518165, 0.0 ),
    OL_1222 = cms.vdouble( 0.848, -0.591, 0.0, 0.062, 0.0, 0.0 ),
    CSC_23_1_scale = cms.vdouble( -19.084285, 0.0 ),
    OL_1213 = cms.vdouble( 0.96, -0.737, 0.0, 0.052, 0.0, 0.0 ),
    CSC_02 = cms.vdouble( 0.612, -0.207, 0.0, 0.067, -0.001, 0.0 ),
    CSC_03 = cms.vdouble( 0.787, -0.338, 0.029, 0.101, -0.008, 0.0 ),
    CSC_01 = cms.vdouble( 0.166, 0.0, 0.0, 0.031, 0.0, 0.0 ),
    DT_23_1_scale = cms.vdouble( -5.320346, 0.0 ),
    SMB_30 = cms.vdouble( 0.505, -0.022, 0.0, 0.215, 0.0, 0.0 ),
    SMB_31 = cms.vdouble( 0.549, -0.145, 0.0, 0.207, 0.0, 0.0 ),
    crackWindow = cms.double( 0.04 ),
    CSC_14_3_scale = cms.vdouble( -1.969563, 0.0 ),
    SMB_31_0_scale = cms.vdouble( -3.323768, 0.0 ),
    DT_12_1_scale = cms.vdouble( -3.692398, 0.0 ),
    SMB_21_0_scale = cms.vdouble( 1.58384, 0.0 ),
    DT_23_2_scale = cms.vdouble( -5.117625, 0.0 ),
    SME_12_0_scale = cms.vdouble( 2.279181, 0.0 ),
    DT_14_1_scale = cms.vdouble( -5.644816, 0.0 ),
    beamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    SMB_11_0_scale = cms.vdouble( 2.56363, 0.0 ),
    CSC_13 = cms.vdouble( 0.901, -1.302, 0.533, 0.045, 0.005, 0.0 ),
    CSC_14 = cms.vdouble( 0.606, -0.181, -0.002, 0.111, -0.003, 0.0 ),
    OL_2222_0_scale = cms.vdouble( -7.667231, 0.0 ),
    CSC_12 = cms.vdouble( -0.161, 0.254, -0.047, 0.042, -0.007, 0.0 )
)
process.hltL2MuonSeeds = cms.EDProducer( "L2MuonSeedGeneratorFromL1T",
    OfflineSeedLabel = cms.untracked.InputTag( "hltL2OfflineMuonSeeds" ),
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'SteppingHelixPropagatorAny' )
    ),
    CentralBxOnly = cms.bool( True ),
    InputObjects = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MaxEta = cms.double( 2.5 ),
    EtaMatchingBins = cms.vdouble( 0.0, 2.5 ),
    L1MinPt = cms.double( 0.0 ),
    L1MinQuality = cms.uint32( 7 ),
    GMTReadoutCollection = cms.InputTag( "" ),
    UseUnassociatedL1 = cms.bool( False ),
    UseOfflineSeed = cms.untracked.bool( True ),
    MatchDR = cms.vdouble( 0.3 ),
    Propagator = cms.string( "SteppingHelixPropagatorAny" )
)
process.hltL2Muons = cms.EDProducer( "L2MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny',
        'hltESPFastSteppingHelixPropagatorOpposite' )
    ),
    InputObjects = cms.InputTag( "hltL2MuonSeeds" ),
    SeedTransformerParameters = cms.PSet( 
      Fitter = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
      NMinRecHits = cms.uint32( 2 ),
      RescaleError = cms.double( 100.0 ),
      Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      UseSubRecHits = cms.bool( False ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
    ),
    L2TrajBuilderParameters = cms.PSet( 
      BWFilterParameters = cms.PSet( 
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        BWSeedType = cms.string( "fromGenerator" ),
        RPCRecSegmentLabel = cms.InputTag( "hltRpcRecHits" ),
        EnableRPCMeasurement = cms.bool( True ),
        MuonTrajectoryUpdatorParameters = cms.PSet( 
          ExcludeRPCFromFit = cms.bool( False ),
          Granularity = cms.int32( 0 ),
          MaxChi2 = cms.double( 25.0 ),
          RescaleError = cms.bool( False ),
          RescaleErrorFactor = cms.double( 100.0 ),
          UseInvalidHits = cms.bool( True )
        ),
        EnableCSCMeasurement = cms.bool( True ),
        MaxChi2 = cms.double( 100.0 ),
        FitDirection = cms.string( "outsideIn" ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
        NumberOfSigma = cms.double( 3.0 ),
        EnableDTMeasurement = cms.bool( True )
      ),
      DoSeedRefit = cms.bool( False ),
      FilterParameters = cms.PSet( 
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        RPCRecSegmentLabel = cms.InputTag( "hltRpcRecHits" ),
        EnableRPCMeasurement = cms.bool( True ),
        MuonTrajectoryUpdatorParameters = cms.PSet( 
          ExcludeRPCFromFit = cms.bool( False ),
          Granularity = cms.int32( 0 ),
          MaxChi2 = cms.double( 25.0 ),
          RescaleError = cms.bool( False ),
          RescaleErrorFactor = cms.double( 100.0 ),
          UseInvalidHits = cms.bool( True )
        ),
        EnableCSCMeasurement = cms.bool( True ),
        MaxChi2 = cms.double( 1000.0 ),
        FitDirection = cms.string( "insideOut" ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
        NumberOfSigma = cms.double( 3.0 ),
        EnableDTMeasurement = cms.bool( True )
      ),
      SeedPosition = cms.string( "in" ),
      DoBackwardFilter = cms.bool( True ),
      DoRefit = cms.bool( False ),
      NavigationType = cms.string( "Standard" ),
      SeedTransformerParameters = cms.PSet( 
        Fitter = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
        NMinRecHits = cms.uint32( 2 ),
        RescaleError = cms.double( 100.0 ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
        UseSubRecHits = cms.bool( False ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      SeedPropagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" )
    ),
    DoSeedRefit = cms.bool( False ),
    TrackLoaderParameters = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( False ),
      VertexConstraint = cms.bool( True ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        BeamSpotPosition = cms.vdouble( 0.0, 0.0, 0.0 ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" )
      ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    MuonTrajectoryBuilder = cms.string( "Exhaustive" )
)
process.hltL2MuonCandidates = cms.EDProducer( "L2MuonCandidateProducer",
    InputObjects = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL2Filtered10 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    MaxDr = cms.double( 9999.0 ),
    CutOnChambers = cms.bool( False ),
    PreviousCandTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL1Filtered0" ),
    MinPt = cms.double( 0.0 ),
    MinN = cms.int32( 0 ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.vint32( 0 ),
    MinDxySig = cms.double( -1.0 ),
    MinNchambers = cms.vint32( 0 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MaxDz = cms.double( 9999.0 ),
    MatchToPreviousCand = cms.bool( True ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    MinDr = cms.double( -1.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MinNstations = cms.vint32( 0 )
)
process.hltSiPixelDigis = cms.EDProducer( "SiPixelRawToDigi",
    UseQualityInfo = cms.bool( False ),
    UsePilotBlade = cms.bool( False ),
    UsePhase1 = cms.bool( True ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    IncludeErrors = cms.bool( False ),
    ErrorList = cms.vint32(  ),
    Regions = cms.PSet(  ),
    Timing = cms.untracked.bool( False ),
    CablingMapLabel = cms.string( "" ),
    UserErrorList = cms.vint32(  )
)
process.hltSiPixelClusters = cms.EDProducer( "SiPixelClusterProducer",
    src = cms.InputTag( "hltSiPixelDigis" ),
    ChannelThreshold = cms.int32( 1000 ),
    maxNumberOfClusters = cms.int32( 40000 ),
    ClusterThreshold_L1 = cms.int32( 2000 ),
    MissCalibrate = cms.untracked.bool( True ),
    VCaltoElectronGain = cms.int32( 47 ),
    VCaltoElectronGain_L1 = cms.int32( 50 ),
    VCaltoElectronOffset = cms.int32( -60 ),
    SplitClusters = cms.bool( False ),
    payloadType = cms.string( "HLT" ),
    SeedThreshold = cms.int32( 1000 ),
    VCaltoElectronOffset_L1 = cms.int32( -670 ),
    ClusterThreshold = cms.int32( 4000 )
)
process.hltSiPixelClustersCache = cms.EDProducer( "SiPixelClusterShapeCacheProducer",
    src = cms.InputTag( "hltSiPixelClusters" ),
    onDemand = cms.bool( False )
)
process.hltSiPixelRecHits = cms.EDProducer( "SiPixelRecHitConverter",
    VerboseLevel = cms.untracked.int32( 0 ),
    src = cms.InputTag( "hltSiPixelClusters" ),
    CPE = cms.string( "hltESPPixelCPEGeneric" )
)
process.hltSiStripExcludedFEDListProducer = cms.EDProducer( "SiStripExcludedFEDListProducer",
    ProductLabel = cms.InputTag( "rawDataCollector" )
)
process.hltSiStripRawToClustersFacility = cms.EDProducer( "SiStripClusterizerFromRaw",
    ProductLabel = cms.InputTag( "rawDataCollector" ),
    DoAPVEmulatorCheck = cms.bool( False ),
    Algorithms = cms.PSet( 
      CommonModeNoiseSubtractionMode = cms.string( "Median" ),
      useCMMeanMap = cms.bool( False ),
      TruncateInSuppressor = cms.bool( True ),
      doAPVRestore = cms.bool( False ),
      SiStripFedZeroSuppressionMode = cms.uint32( 4 ),
      PedestalSubtractionFedMode = cms.bool( True )
    ),
    Clusterizer = cms.PSet( 
      QualityLabel = cms.string( "" ),
      ClusterThreshold = cms.double( 5.0 ),
      SeedThreshold = cms.double( 3.0 ),
      Algorithm = cms.string( "ThreeThresholdAlgorithm" ),
      ChannelThreshold = cms.double( 2.0 ),
      MaxAdjacentBad = cms.uint32( 0 ),
      setDetId = cms.bool( True ),
      MaxSequentialHoles = cms.uint32( 0 ),
      RemoveApvShots = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      MaxSequentialBad = cms.uint32( 1 )
    ),
    onDemand = cms.bool( True )
)
process.hltSiStripClusters = cms.EDProducer( "MeasurementTrackerEventProducer",
    inactivePixelDetectorLabels = cms.VInputTag(  ),
    stripClusterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
    pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
    switchOffPixelsIfEmpty = cms.bool( True ),
    inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
    skipClusters = cms.InputTag( "" ),
    measurementTracker = cms.string( "hltESPMeasurementTracker" )
)
process.hltIterL3OISeedsFromL2Muons = cms.EDProducer( "TSGForOI",
    hitsToTry = cms.int32( 3 ),
    adjustErrorsDynamicallyForHitless = cms.bool( True ),
    SF4 = cms.double( 7.0 ),
    SF5 = cms.double( 10.0 ),
    SF2 = cms.double( 4.0 ),
    SF3 = cms.double( 5.0 ),
    SF1 = cms.double( 3.0 ),
    minEtaForTEC = cms.double( 0.7 ),
    fixedErrorRescaleFactorForHits = cms.double( 3.0 ),
    maxSeeds = cms.uint32( 5 ),
    maxEtaForTOB = cms.double( 1.8 ),
    pT3 = cms.double( 70.0 ),
    pT2 = cms.double( 30.0 ),
    pT1 = cms.double( 13.0 ),
    layersToTry = cms.int32( 2 ),
    fixedErrorRescaleFactorForHitless = cms.double( 10.0 ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    adjustErrorsDynamicallyForHits = cms.bool( True ),
    src = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
    tsosDiff = cms.double( 0.03 ),
    eta1 = cms.double( 1.0 ),
    eta2 = cms.double( 1.4 ),
    UseHitLessSeeds = cms.bool( True ),
    UseStereoLayersInTEC = cms.bool( False ),
    estimator = cms.string( "hltESPChi2MeasurementEstimator100" ),
    debug = cms.untracked.bool( False )
)
process.hltIterL3OITrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIterL3OISeedsFromL2Muons" ),
    maxSeedsBeforeCleaning = cms.uint32( 5000 ),
    SimpleMagneticField = cms.string( "" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    TrajectoryCleaner = cms.string( "muonSeededTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 500000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryBuilder" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "CkfTrajectoryBuilder" )
)
process.hltIterL3OIMuCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIterL3OITrackCandidates" ),
    SimpleMagneticField = cms.string( "" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    Fitter = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "hltESPMeasurementTracker" ),
    AlgorithmName = cms.string( "iter10" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( False ),
    Propagator = cms.string( "PropagatorWithMaterial" )
)
process.hltIterL3OIMuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIterL3OIMuCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "Notused" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 1 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 4, 3, 2 ),
      min3DLayers = cms.vint32( 1, 2, 1 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 10.0, 1.0, 0.4 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 5, 5 )
    ),
    ignoreVertices = cms.bool( True ),
    GBRForestFileName = cms.string( "" )
)
process.hltIterL3OIMuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIterL3OIMuCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltIterL3OIMuonTrackCutClassifier','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIterL3OIMuonTrackCutClassifier','MVAValues' )
)
process.hltL3MuonsIterL3OI = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet( 
        Rescale_Dz = cms.double( 4.0 ),
        Pt_fixed = cms.bool( False ),
        Eta_fixed = cms.bool( True ),
        Eta_min = cms.double( 0.1 ),
        DeltaZ = cms.double( 24.2 ),
        maxRegions = cms.int32( 2 ),
        EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
        UseVertex = cms.bool( False ),
        Z_fixed = cms.bool( False ),
        PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
        PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
        Rescale_phi = cms.double( 3.0 ),
        DeltaEta = cms.double( 0.2 ),
        precise = cms.bool( True ),
        OnDemand = cms.int32( -1 ),
        EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
        MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
        vertexCollection = cms.InputTag( "pixelVertices" ),
        Pt_min = cms.double( 3.0 ),
        beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
        Phi_fixed = cms.bool( True ),
        DeltaR = cms.double( 0.025 ),
        input = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
        DeltaPhi = cms.double( 0.15 ),
        Phi_min = cms.double( 0.1 ),
        Rescale_eta = cms.double( 3.0 )
      ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "Notused" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        RefitFlag = cms.bool( True ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        HitThreshold = cms.int32( 1 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 9999.0 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      tkTrajMaxChi2 = cms.double( 9999.0 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltIterL3OIMuonTrackSelectionHighPurity" )
    ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( True ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    MuonCollectionLabel = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' )
)
process.hltIterL3OIL3MuonsLinksCombination = cms.EDProducer( "L3TrackLinksCombiner",
    labels = cms.VInputTag( 'hltL3MuonsIterL3OI' )
)
process.hltIterL3OIL3Muons = cms.EDProducer( "L3TrackCombiner",
    labels = cms.VInputTag( 'hltL3MuonsIterL3OI' )
)
process.hltIterL3OIL3MuonCandidates = cms.EDProducer( "L3MuonCandidateProducer",
    InputLinksObjects = cms.InputTag( "hltIterL3OIL3MuonsLinksCombination" ),
    InputObjects = cms.InputTag( "hltIterL3OIL3Muons" ),
    MuonPtOption = cms.string( "Tracker" )
)
process.hltL2SelectorForL3IO = cms.EDProducer( "HLTMuonL2SelectorForL3IO",
    MaxNormalizedChi2 = cms.double( 20.0 ),
    MinNmuonHits = cms.int32( 1 ),
    MinNhits = cms.int32( 1 ),
    applyL3Filters = cms.bool( False ),
    MaxPtDifference = cms.double( 0.3 ),
    l3OISrc = cms.InputTag( "hltIterL3OIL3MuonCandidates" ),
    InputLinks = cms.InputTag( "hltIterL3OIL3MuonsLinksCombination" ),
    l2Src = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' )
)
process.hltIterL3MuonPixelTracksFilter = cms.EDProducer( "PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double( 1000.0 ),
    nSigmaTipMaxTolerance = cms.double( 0.0 ),
    ptMin = cms.double( 0.1 ),
    nSigmaInvPtTolerance = cms.double( 0.0 ),
    tipMax = cms.double( 1.0 )
)
process.hltIterL3MuonPixelTracksFitter = cms.EDProducer( "PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool( False ),
    scaleFactor = cms.double( 0.65 )
)
process.hltIterL3MuonPixelTracksTrackingRegions = cms.EDProducer( "MuonTrackingRegionEDProducer",
    precise = cms.bool( True ),
    Eta_fixed = cms.bool( True ),
    Eta_min = cms.double( 0.0 ),
    Z_fixed = cms.bool( True ),
    MeasurementTrackerName = cms.InputTag( "" ),
    maxRegions = cms.int32( 5 ),
    Pt_min = cms.double( 2.0 ),
    Rescale_Dz = cms.double( 4.0 ),
    PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
    PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
    vertexCollection = cms.InputTag( "notUsed" ),
    Phi_fixed = cms.bool( True ),
    input = cms.InputTag( "hltL2SelectorForL3IO" ),
    DeltaR = cms.double( 0.025 ),
    OnDemand = cms.int32( -1 ),
    DeltaZ = cms.double( 24.2 ),
    Rescale_phi = cms.double( 3.0 ),
    Rescale_eta = cms.double( 3.0 ),
    DeltaEta = cms.double( 0.2 ),
    Phi_min = cms.double( 0.0 ),
    DeltaPhi = cms.double( 0.15 ),
    UseVertex = cms.bool( False ),
    EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
    EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Pt_fixed = cms.bool( True )
)
process.hltIterL3MuonPixelLayerQuadruplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3+BPix4',
      'BPix1+BPix2+BPix3+FPix1_pos',
      'BPix1+BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos+FPix2_pos',
      'BPix1+BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_neg+FPix2_neg+FPix3_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltIterL3MuonPixelTracksHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltIterL3MuonPixelTracksTrackingRegions" ),
    layerPairs = cms.vuint32( 0, 1, 2 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltIterL3MuonPixelLayerQuadruplets" )
)
process.hltIterL3MuonPixelTracksHitQuadruplets = cms.EDProducer( "CAHitQuadrupletEDProducer",
    CAThetaCut = cms.double( 0.005 ),
    SeedComparitorPSet = cms.PSet( 
      clusterShapeHitFilter = cms.string( "ClusterShapeHitFilter" ),
      ComponentName = cms.string( "LowPtClusterShapeSeedComparitor" ),
      clusterShapeCacheSrc = cms.InputTag( "hltSiPixelClustersCache" )
    ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltIterL3MuonPixelTracksHitDoublets" ),
    fitFastCircle = cms.bool( True ),
    CAHardPtCut = cms.double( 0.0 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 50.0 ),
      value1 = cms.double( 200.0 ),
      pt1 = cms.double( 0.7 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 2.0 )
    ),
    CAOnlyOneLastHitPerLayerFilter = cms.bool( False ),
    CAPhiCut = cms.double( 0.2 ),
    useBendingCorrection = cms.bool( True ),
    fitFastCircleChi2Cut = cms.bool( True )
)
process.hltIterL3MuonPixelTracks = cms.EDProducer( "PixelTrackProducer",
    Filter = cms.InputTag( "hltIterL3MuonPixelTracksFilter" ),
    Cleaner = cms.string( "hltPixelTracksCleanerBySharedHits" ),
    passLabel = cms.string( "" ),
    Fitter = cms.InputTag( "hltIterL3MuonPixelTracksFitter" ),
    SeedingHitSets = cms.InputTag( "hltIterL3MuonPixelTracksHitQuadruplets" )
)
process.hltIterL3MuonPixelVertices = cms.EDProducer( "PixelVertexProducer",
    WtAverage = cms.bool( True ),
    Method2 = cms.bool( True ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparerForIT" ) ),
    Verbosity = cms.int32( 0 ),
    UseError = cms.bool( True ),
    TrackCollection = cms.InputTag( "hltIterL3MuonPixelTracks" ),
    PtMin = cms.double( 1.0 ),
    NTrkMin = cms.int32( 2 ),
    ZOffset = cms.double( 5.0 ),
    Finder = cms.string( "DivisiveVertexFinder" ),
    ZSeparation = cms.double( 0.05 )
)
process.hltIterL3MuonTrimmedPixelVertices = cms.EDProducer( "PixelVertexCollectionTrimmer",
    minSumPt2 = cms.double( 0.0 ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparerForIT" ) ),
    maxVtx = cms.uint32( 100 ),
    fractionSumPt2 = cms.double( 0.3 ),
    src = cms.InputTag( "hltIterL3MuonPixelVertices" )
)
process.hltIter0IterL3MuonPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    useEventsWithNoVertex = cms.bool( True ),
    originHalfLength = cms.double( 0.3 ),
    useProtoTrackKinematics = cms.bool( False ),
    usePV = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) ),
    InputVertexCollection = cms.InputTag( "hltIterL3MuonTrimmedPixelVertices" ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    InputCollection = cms.InputTag( "hltIterL3MuonPixelTracks" ),
    originRadius = cms.double( 0.1 )
)
process.hltIter0IterL3MuonCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter0IterL3MuonPixelSeedsFromPixelTracks" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( True ),
    RedundantSeedCleaner = cms.string( "none" ),
    doSeedingRegionRebuilding = cms.bool( True ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "GroupedCkfTrajectoryBuilder" )
)
process.hltIter0IterL3MuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter0IterL3MuonCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIter0" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter0IterL3MuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0IterL3MuonCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltIterL3MuonTrimmedPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 3, 4 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 3, 4 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter0IterL3MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter0IterL3MuonCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltIter0IterL3MuonTrackCutClassifier','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter0IterL3MuonTrackCutClassifier','MVAValues' )
)
process.hltIter2IterL3MuonClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 16.0 ),
    trajectories = cms.InputTag( "hltIter0IterL3MuonTrackSelectionHighPurity" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    TrackQuality = cms.string( "highPurity" )
)
process.hltIter2IterL3MuonMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    clustersToSkip = cms.InputTag( "hltIter2IterL3MuonClustersRefRemoval" ),
    OnDemand = cms.bool( False ),
    src = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter2IterL3MuonPixelLayerTriplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3',
      'BPix2+BPix3+BPix4',
      'BPix1+BPix3+BPix4',
      'BPix1+BPix2+BPix4',
      'BPix2+BPix3+FPix1_pos',
      'BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos',
      'BPix1+BPix2+FPix1_neg',
      'BPix2+FPix1_pos+FPix2_pos',
      'BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos',
      'BPix1+FPix1_neg+FPix2_neg',
      'FPix1_pos+FPix2_pos+FPix3_pos',
      'FPix1_neg+FPix2_neg+FPix3_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter2IterL3MuonClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter2IterL3MuonClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltIter2IterL3MuonPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False ),
    MaxNumberOfCosmicClusters = cms.uint32( 50000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    doClusterCheck = cms.bool( False ),
    MaxNumberOfPixelClusters = cms.uint32( 10000 ),
    ClusterCollectionLabel = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter2IterL3MuonPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltIterL3MuonPixelTracksTrackingRegions" ),
    layerPairs = cms.vuint32( 0, 1 ),
    clusterCheck = cms.InputTag( "hltIter2IterL3MuonPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltIter2IterL3MuonPixelLayerTriplets" )
)
process.hltIter2IterL3MuonPixelHitTriplets = cms.EDProducer( "CAHitTripletEDProducer",
    CAHardPtCut = cms.double( 0.3 ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltIter2IterL3MuonPixelHitDoublets" ),
    CAThetaCut = cms.double( 0.015 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 6.0 ),
      value1 = cms.double( 100.0 ),
      pt1 = cms.double( 0.8 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 8.0 )
    ),
    CAPhiCut = cms.double( 0.1 ),
    useBendingCorrection = cms.bool( True )
)
process.hltIter2IterL3MuonPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltIter2IterL3MuonPixelHitTriplets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltIter2IterL3MuonCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter2IterL3MuonPixelSeeds" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter2IterL3MuonMaskedMeasurementTrackerEvent" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2IterL3MuonPSetGroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter2IterL3MuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter2IterL3MuonCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter2IterL3MuonMaskedMeasurementTrackerEvent" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIter2" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter2IterL3MuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter2IterL3MuonCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltIterL3MuonTrimmedPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter2IterL3MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter2IterL3MuonCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltIter2IterL3MuonTrackCutClassifier','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter2IterL3MuonTrackCutClassifier','MVAValues' )
)
process.hltIter2IterL3MuonMerged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0IterL3MuonTrackSelectionHighPurity','hltIter2IterL3MuonTrackSelectionHighPurity' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIter0IterL3MuonTrackSelectionHighPurity','hltIter2IterL3MuonTrackSelectionHighPurity' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltL3MuonsIterL3IO = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet( 
        Rescale_Dz = cms.double( 4.0 ),
        Pt_fixed = cms.bool( True ),
        Eta_fixed = cms.bool( True ),
        Eta_min = cms.double( 0.1 ),
        DeltaZ = cms.double( 24.2 ),
        maxRegions = cms.int32( 2 ),
        EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
        UseVertex = cms.bool( False ),
        Z_fixed = cms.bool( True ),
        PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
        PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
        Rescale_phi = cms.double( 3.0 ),
        DeltaEta = cms.double( 0.04 ),
        precise = cms.bool( True ),
        OnDemand = cms.int32( -1 ),
        EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
        MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
        vertexCollection = cms.InputTag( "pixelVertices" ),
        Pt_min = cms.double( 3.0 ),
        beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
        Phi_fixed = cms.bool( True ),
        DeltaR = cms.double( 0.025 ),
        input = cms.InputTag( "hltL2SelectorForL3IO" ),
        DeltaPhi = cms.double( 0.15 ),
        Phi_min = cms.double( 0.1 ),
        Rescale_eta = cms.double( 3.0 )
      ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "hltIterL3MuonPixelVertices" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        RefitFlag = cms.bool( True ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        HitThreshold = cms.int32( 1 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 9999.0 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      matchToSeeds = cms.bool( True ),
      tkTrajMaxChi2 = cms.double( 9999.0 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltIter2IterL3MuonMerged" )
    ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( False ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    MuonCollectionLabel = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' )
)
process.hltIterL3MuonsFromL2LinksCombination = cms.EDProducer( "L3TrackLinksCombiner",
    labels = cms.VInputTag( 'hltL3MuonsIterL3OI','hltL3MuonsIterL3IO' )
)
process.hltIterL3MuonsFromL2 = cms.EDProducer( "L3TrackCombiner",
    labels = cms.VInputTag( 'hltL3MuonsIterL3OI','hltL3MuonsIterL3IO' )
)
process.hltIterL3MuonL1MuonNoL2Selector = cms.EDProducer( "HLTL1MuonNoL2Selector",
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    L1MinPt = cms.double( -1.0 ),
    CentralBxOnly = cms.bool( True ),
    InputObjects = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L2CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    L1MaxEta = cms.double( 5.0 ),
    L1MinQuality = cms.uint32( 7 )
)
process.hltIterL3FromL1MuonPixelTracksTrackingRegions = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "notUsed" ),
      zErrorVetex = cms.double( 0.2 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      maxNVertices = cms.int32( 1 ),
      maxNRegions = cms.int32( 2 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 10.0 ),
      mode = cms.string( "BeamSpotSigma" ),
      input = cms.InputTag( "hltIterL3MuonL1MuonNoL2Selector" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "Never" ),
      originRadius = cms.double( 0.2 ),
      measurementTrackerName = cms.InputTag( "" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.35 ),
      deltaPhi = cms.double( 0.2 )
    )
)
process.hltIterL3FromL1MuonPixelLayerQuadruplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3+BPix4',
      'BPix1+BPix2+BPix3+FPix1_pos',
      'BPix1+BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos+FPix2_pos',
      'BPix1+BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_neg+FPix2_neg+FPix3_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltIterL3FromL1MuonPixelTracksHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltIterL3FromL1MuonPixelTracksTrackingRegions" ),
    layerPairs = cms.vuint32( 0, 1, 2 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltIterL3FromL1MuonPixelLayerQuadruplets" )
)
process.hltIterL3FromL1MuonPixelTracksHitQuadruplets = cms.EDProducer( "CAHitQuadrupletEDProducer",
    CAThetaCut = cms.double( 0.005 ),
    SeedComparitorPSet = cms.PSet( 
      clusterShapeHitFilter = cms.string( "ClusterShapeHitFilter" ),
      ComponentName = cms.string( "LowPtClusterShapeSeedComparitor" ),
      clusterShapeCacheSrc = cms.InputTag( "hltSiPixelClustersCache" )
    ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltIterL3FromL1MuonPixelTracksHitDoublets" ),
    fitFastCircle = cms.bool( True ),
    CAHardPtCut = cms.double( 0.0 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 50.0 ),
      value1 = cms.double( 200.0 ),
      pt1 = cms.double( 0.7 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 2.0 )
    ),
    CAOnlyOneLastHitPerLayerFilter = cms.bool( False ),
    CAPhiCut = cms.double( 0.2 ),
    useBendingCorrection = cms.bool( True ),
    fitFastCircleChi2Cut = cms.bool( True )
)
process.hltIterL3FromL1MuonPixelTracks = cms.EDProducer( "PixelTrackProducer",
    Filter = cms.InputTag( "hltIterL3MuonPixelTracksFilter" ),
    Cleaner = cms.string( "hltPixelTracksCleanerBySharedHits" ),
    passLabel = cms.string( "" ),
    Fitter = cms.InputTag( "hltIterL3MuonPixelTracksFitter" ),
    SeedingHitSets = cms.InputTag( "hltIterL3FromL1MuonPixelTracksHitQuadruplets" )
)
process.hltIterL3FromL1MuonPixelVertices = cms.EDProducer( "PixelVertexProducer",
    WtAverage = cms.bool( True ),
    Method2 = cms.bool( True ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparerForIT" ) ),
    Verbosity = cms.int32( 0 ),
    UseError = cms.bool( True ),
    TrackCollection = cms.InputTag( "hltIterL3MuonPixelTracks" ),
    PtMin = cms.double( 1.0 ),
    NTrkMin = cms.int32( 2 ),
    ZOffset = cms.double( 5.0 ),
    Finder = cms.string( "DivisiveVertexFinder" ),
    ZSeparation = cms.double( 0.05 )
)
process.hltIterL3FromL1MuonTrimmedPixelVertices = cms.EDProducer( "PixelVertexCollectionTrimmer",
    minSumPt2 = cms.double( 0.0 ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparerForIT" ) ),
    maxVtx = cms.uint32( 100 ),
    fractionSumPt2 = cms.double( 0.3 ),
    src = cms.InputTag( "hltIterL3FromL1MuonPixelVertices" )
)
process.hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    useEventsWithNoVertex = cms.bool( True ),
    originHalfLength = cms.double( 0.3 ),
    useProtoTrackKinematics = cms.bool( False ),
    usePV = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) ),
    InputVertexCollection = cms.InputTag( "hltIterL3FromL1MuonTrimmedPixelVertices" ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    InputCollection = cms.InputTag( "hltIterL3FromL1MuonPixelTracks" ),
    originRadius = cms.double( 0.1 )
)
process.hltIter0IterL3FromL1MuonCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracks" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( True ),
    RedundantSeedCleaner = cms.string( "none" ),
    doSeedingRegionRebuilding = cms.bool( True ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "GroupedCkfTrajectoryBuilder" )
)
process.hltIter0IterL3FromL1MuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter0IterL3FromL1MuonCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIter0" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter0IterL3FromL1MuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0IterL3FromL1MuonCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltIterL3FromL1MuonTrimmedPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 3, 4 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 3, 4 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter0IterL3FromL1MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter0IterL3FromL1MuonCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltIter0IterL3FromL1MuonTrackCutClassifier','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter0IterL3FromL1MuonTrackCutClassifier','MVAValues' )
)
process.hltIter2IterL3FromL1MuonClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 16.0 ),
    trajectories = cms.InputTag( "hltIter0IterL3FromL1MuonTrackSelectionHighPurity" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    TrackQuality = cms.string( "highPurity" )
)
process.hltIter2IterL3FromL1MuonMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    clustersToSkip = cms.InputTag( "hltIter2IterL3FromL1MuonClustersRefRemoval" ),
    OnDemand = cms.bool( False ),
    src = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter2IterL3FromL1MuonPixelLayerTriplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3',
      'BPix2+BPix3+BPix4',
      'BPix1+BPix3+BPix4',
      'BPix1+BPix2+BPix4',
      'BPix2+BPix3+FPix1_pos',
      'BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos',
      'BPix1+BPix2+FPix1_neg',
      'BPix2+FPix1_pos+FPix2_pos',
      'BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos',
      'BPix1+FPix1_neg+FPix2_neg',
      'FPix1_pos+FPix2_pos+FPix3_pos',
      'FPix1_neg+FPix2_neg+FPix3_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter2IterL3FromL1MuonClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter2IterL3FromL1MuonClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltIter2IterL3FromL1MuonPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False ),
    MaxNumberOfCosmicClusters = cms.uint32( 50000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    doClusterCheck = cms.bool( False ),
    MaxNumberOfPixelClusters = cms.uint32( 10000 ),
    ClusterCollectionLabel = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter2IterL3FromL1MuonPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltIterL3FromL1MuonPixelTracksTrackingRegions" ),
    layerPairs = cms.vuint32( 0, 1 ),
    clusterCheck = cms.InputTag( "hltIter2IterL3FromL1MuonPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltIter2IterL3FromL1MuonPixelLayerTriplets" )
)
process.hltIter2IterL3FromL1MuonPixelHitTriplets = cms.EDProducer( "CAHitTripletEDProducer",
    CAHardPtCut = cms.double( 0.3 ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltIter2IterL3FromL1MuonPixelHitDoublets" ),
    CAThetaCut = cms.double( 0.015 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 6.0 ),
      value1 = cms.double( 100.0 ),
      pt1 = cms.double( 0.8 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 8.0 )
    ),
    CAPhiCut = cms.double( 0.1 ),
    useBendingCorrection = cms.bool( True )
)
process.hltIter2IterL3FromL1MuonPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltIter2IterL3FromL1MuonPixelHitTriplets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltIter2IterL3FromL1MuonCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter2IterL3FromL1MuonPixelSeeds" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter2IterL3FromL1MuonMaskedMeasurementTrackerEvent" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter2IterL3FromL1MuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter2IterL3FromL1MuonCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter2IterL3FromL1MuonMaskedMeasurementTrackerEvent" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIter2" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter2IterL3FromL1MuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter2IterL3FromL1MuonCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltIterL3FromL1MuonTrimmedPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter2IterL3FromL1MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter2IterL3FromL1MuonCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltIter2IterL3FromL1MuonTrackCutClassifier','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter2IterL3FromL1MuonTrackCutClassifier','MVAValues' )
)
process.hltIter2IterL3FromL1MuonMerged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0IterL3FromL1MuonTrackSelectionHighPurity','hltIter2IterL3FromL1MuonTrackSelectionHighPurity' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIter0IterL3FromL1MuonTrackSelectionHighPurity','hltIter2IterL3FromL1MuonTrackSelectionHighPurity' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltIterL3MuonMerged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3OIMuonTrackSelectionHighPurity','hltIter2IterL3MuonMerged' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIterL3OIMuonTrackSelectionHighPurity','hltIter2IterL3MuonMerged' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltIterL3MuonAndMuonFromL1Merged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3MuonMerged','hltIter2IterL3FromL1MuonMerged' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIterL3MuonMerged','hltIter2IterL3FromL1MuonMerged' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltL3MuonsIterL3Links = cms.EDProducer( "MuonLinksProducerForHLT",
    pMin = cms.double( 2.5 ),
    InclusiveTrackerTrackCollection = cms.InputTag( "hltIter2IterL3FromL1MuonMerged" ),
    shareHitFraction = cms.double( 0.19 ),
    LinkCollection = cms.InputTag( "hltIterL3MuonsFromL2LinksCombination" ),
    ptMin = cms.double( 2.5 )
)
process.hltIterL3Muons = cms.EDProducer( "MuonIdProducer",
    TrackExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltIter2IterL3FromL1MuonMerged" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      DR_Max = cms.double( 1.0 ),
      NHits_Min = cms.uint32( 0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "TrackExtractor" )
    ),
    maxAbsEta = cms.double( 3.0 ),
    fillGlobalTrackRefits = cms.bool( False ),
    arbitrationCleanerOptions = cms.PSet( 
      OverlapDTheta = cms.double( 0.02 ),
      Overlap = cms.bool( True ),
      Clustering = cms.bool( True ),
      ME1a = cms.bool( True ),
      ClusterDTheta = cms.double( 0.02 ),
      ClusterDPhi = cms.double( 0.6 ),
      OverlapDPhi = cms.double( 0.0786 )
    ),
    globalTrackQualityInputTag = cms.InputTag( "glbTrackQual" ),
    addExtraSoftMuons = cms.bool( False ),
    debugWithTruthMatching = cms.bool( False ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      CenterConeOnCalIntersection = cms.bool( False ),
      NoiseTow_EE = cms.double( 0.15 ),
      Noise_EB = cms.double( 0.025 ),
      Noise_HE = cms.double( 0.2 ),
      DR_Veto_E = cms.double( 0.07 ),
      NoiseTow_EB = cms.double( 0.04 ),
      Noise_EE = cms.double( 0.1 ),
      UseRecHitsFlag = cms.bool( False ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "Cal" ),
      Noise_HO = cms.double( 0.2 ),
      DR_Veto_HO = cms.double( 0.1 ),
      Threshold_H = cms.double( 0.5 ),
      PrintTimeReport = cms.untracked.bool( False ),
      Threshold_E = cms.double( 0.2 ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "CaloExtractorByAssociator" ),
      Threshold_HO = cms.double( 0.5 ),
      DepositInstanceLabels = cms.vstring( 'ecal',
        'hcal',
        'ho' ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 1.0 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( "Notused" ),
        CaloTowerCollectionLabel = cms.InputTag( "Notused" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "Notused" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 1.0 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( "Notused" ),
        dRHcal = cms.double( 1.0 ),
        dRHcalPreselection = cms.double( 1.0 ),
        HORecHitCollectionLabel = cms.InputTag( "Notused" )
      ),
      Noise_HB = cms.double( 0.2 )
    ),
    runArbitrationCleaner = cms.bool( False ),
    fillEnergy = cms.bool( False ),
    TrackerKinkFinderParameters = cms.PSet( 
      usePosition = cms.bool( False ),
      diagonalOnly = cms.bool( False )
    ),
    TimingFillerParameters = cms.PSet( 
      DTTimingParameters = cms.PSet( 
        HitError = cms.double( 6.0 ),
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        DoWireCorr = cms.bool( False ),
        RequireBothProjections = cms.bool( False ),
        DTTimeOffset = cms.double( 2.7 ),
        PruneCut = cms.double( 10000.0 ),
        DTsegments = cms.InputTag( "hltDt4DSegments" ),
        UseSegmentT0 = cms.bool( False ),
        HitsMin = cms.int32( 5 ),
        DropTheta = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      UseCSC = cms.bool( True ),
      CSCTimingParameters = cms.PSet( 
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        CSCWireTimeOffset = cms.double( 0.0 ),
        CSCStripError = cms.double( 7.0 ),
        CSCTimeOffset = cms.double( 0.0 ),
        CSCWireError = cms.double( 8.6 ),
        PruneCut = cms.double( 100.0 ),
        CSCsegments = cms.InputTag( "hltCscSegments" ),
        UseStripTime = cms.bool( True ),
        CSCStripTimeOffset = cms.double( 0.0 ),
        UseWireTime = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      ErrorDT = cms.double( 6.0 ),
      EcalEnergyCut = cms.double( 0.4 ),
      UseECAL = cms.bool( True ),
      ErrorEB = cms.double( 2.085 ),
      UseDT = cms.bool( True ),
      ErrorEE = cms.double( 6.95 ),
      ErrorCSC = cms.double( 7.4 )
    ),
    inputCollectionTypes = cms.vstring( 'inner tracks',
      'links' ),
    arbitrateTrackerMuons = cms.bool( True ),
    minCaloCompatibility = cms.double( 0.6 ),
    ecalDepositName = cms.string( "ecal" ),
    minP = cms.double( 0.0 ),
    fillIsolation = cms.bool( False ),
    jetDepositName = cms.string( "jets" ),
    hoDepositName = cms.string( "ho" ),
    writeIsoDeposits = cms.bool( False ),
    maxAbsPullX = cms.double( 4.0 ),
    maxAbsPullY = cms.double( 9999.0 ),
    minPt = cms.double( 8.0 ),
    TrackAssociatorParameters = cms.PSet( 
      useMuon = cms.bool( True ),
      truthMatch = cms.bool( False ),
      usePreshower = cms.bool( False ),
      dRPreshowerPreselection = cms.double( 0.2 ),
      muonMaxDistanceSigmaY = cms.double( 0.0 ),
      useEcal = cms.bool( False ),
      muonMaxDistanceSigmaX = cms.double( 0.0 ),
      dRMuon = cms.double( 9999.0 ),
      dREcal = cms.double( 9999.0 ),
      CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
      DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
      EBRecHitCollectionLabel = cms.InputTag( "Notused" ),
      CaloTowerCollectionLabel = cms.InputTag( "Notused" ),
      propagateAllDirections = cms.bool( True ),
      muonMaxDistanceY = cms.double( 5.0 ),
      useHO = cms.bool( False ),
      muonMaxDistanceX = cms.double( 5.0 ),
      trajectoryUncertaintyTolerance = cms.double( -1.0 ),
      useHcal = cms.bool( False ),
      HBHERecHitCollectionLabel = cms.InputTag( "Notused" ),
      accountForTrajectoryChangeCalo = cms.bool( False ),
      dREcalPreselection = cms.double( 0.05 ),
      useCalo = cms.bool( False ),
      dRMuonPreselection = cms.double( 0.2 ),
      EERecHitCollectionLabel = cms.InputTag( "Notused" ),
      dRHcal = cms.double( 9999.0 ),
      dRHcalPreselection = cms.double( 0.2 ),
      HORecHitCollectionLabel = cms.InputTag( "Notused" )
    ),
    JetExtractorPSet = cms.PSet( 
      JetCollectionLabel = cms.InputTag( "Notused" ),
      DR_Veto = cms.double( 0.1 ),
      DR_Max = cms.double( 1.0 ),
      ExcludeMuonVeto = cms.bool( True ),
      PrintTimeReport = cms.untracked.bool( False ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "JetExtractor" ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 0.5 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( "Notused" ),
        CaloTowerCollectionLabel = cms.InputTag( "Notused" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "Notused" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 0.5 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( "Notused" ),
        dRHcal = cms.double( 0.5 ),
        dRHcalPreselection = cms.double( 0.5 ),
        HORecHitCollectionLabel = cms.InputTag( "Notused" )
      ),
      Threshold = cms.double( 5.0 )
    ),
    fillGlobalTrackQuality = cms.bool( False ),
    minPCaloMuon = cms.double( 1.0E9 ),
    maxAbsDy = cms.double( 9999.0 ),
    fillCaloCompatibility = cms.bool( False ),
    fillMatching = cms.bool( True ),
    MuonCaloCompatibility = cms.PSet( 
      delta_eta = cms.double( 0.02 ),
      delta_phi = cms.double( 0.02 ),
      allSiPMHO = cms.bool( False ),
      MuonTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root" ),
      PionTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root" )
    ),
    fillTrackerKink = cms.bool( False ),
    hcalDepositName = cms.string( "hcal" ),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double( 2.0 ),
    inputCollectionLabels = cms.VInputTag( 'hltIter2IterL3FromL1MuonMerged','hltL3MuonsIterL3Links' ),
    trackDepositName = cms.string( "tracker" ),
    maxAbsDx = cms.double( 3.0 ),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double( 200.0 ),
    minNumberOfMatches = cms.int32( 1 )
)
process.hltIterL3MuonCandidates = cms.EDProducer( "L3MuonCandidateProducerFromMuons",
    InputObjects = cms.InputTag( "hltIterL3Muons" )
)
process.hltL1fForIterL3Mu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    PreviousCandTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL1Filtered0" ),
    MinPt = cms.double( 0.0 ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  ),
    CandTag = cms.InputTag( "hltIterL3MuonL1MuonNoL2Selector" )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL3Filtered23 = cms.EDFilter( "HLTMuonL3PreFilter",
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    saveTags = cms.bool( True ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MatchToPreviousCand = cms.bool( True ),
    MaxPtDifference = cms.double( 9999.0 ),
    MaxDr = cms.double( 2.0 ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3Mu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL1Filtered0" ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    PreviousCandTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL2Filtered10" ),
    MaxEta = cms.double( 2.5 ),
    trkMuonId = cms.uint32( 0 ),
    MinDr = cms.double( -1.0 ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    MinNmuonHits = cms.int32( 0 ),
    MinN = cms.int32( 1 ),
    MinTrackPt = cms.double( 0.0 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    minMuonHits = cms.int32( -1 ),
    minTrkHits = cms.int32( -1 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    allowedTypeMask = cms.uint32( 255 ),
    MinPt = cms.double( 23.0 ),
    MinNhits = cms.int32( 0 ),
    minMuonStations = cms.int32( 2 ),
    NSigmaPt = cms.double( 0.0 ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    L1MatchingdR = cms.double( 0.3 )
)
process.hltL3MuonVertex = cms.EDProducer( "VertexFromTrackProducer",
    verbose = cms.untracked.bool( False ),
    useTriggerFilterElectrons = cms.bool( False ),
    beamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
    isRecoCandidate = cms.bool( True ),
    trackLabel = cms.InputTag( "hltIterL3MuonCandidates" ),
    useTriggerFilterMuons = cms.bool( False ),
    useBeamSpot = cms.bool( True ),
    vertexLabel = cms.InputTag( "notUsed" ),
    triggerFilterElectronsSrc = cms.InputTag( "notUsed" ),
    triggerFilterMuonsSrc = cms.InputTag( "notUsed" ),
    useVertex = cms.bool( False )
)
process.hltPixelLayerQuadruplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3+BPix4',
      'BPix1+BPix2+BPix3+FPix1_pos',
      'BPix1+BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos+FPix2_pos',
      'BPix1+BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_neg+FPix2_neg+FPix3_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltPixelTracksL3MuonFilter = cms.EDProducer( "PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double( 1000.0 ),
    nSigmaTipMaxTolerance = cms.double( 0.0 ),
    ptMin = cms.double( 0.1 ),
    nSigmaInvPtTolerance = cms.double( 0.0 ),
    tipMax = cms.double( 1.0 )
)
process.hltPixelTracksL3MuonFitter = cms.EDProducer( "PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool( False ),
    scaleFactor = cms.double( 0.65 )
)
process.hltPixelTracksTrackingRegionsL3Muon = cms.EDProducer( "GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet( 
      useFixedError = cms.bool( True ),
      nSigmaZ = cms.double( 4.0 ),
      VertexCollection = cms.InputTag( "hltL3MuonVertex" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      useFoundVertices = cms.bool( True ),
      fixedError = cms.double( 0.5 ),
      sigmaZVertex = cms.double( 4.0 ),
      useFakeVertices = cms.bool( True ),
      ptMin = cms.double( 0.9 ),
      originRadius = cms.double( 0.2 ),
      precise = cms.bool( True ),
      useMultipleScattering = cms.bool( False )
    )
)
process.hltPixelTracksHitDoubletsL3Muon = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltPixelTracksTrackingRegionsL3Muon" ),
    layerPairs = cms.vuint32( 0, 1, 2 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltPixelLayerQuadruplets" )
)
process.hltPixelTracksHitQuadrupletsL3Muon = cms.EDProducer( "CAHitQuadrupletEDProducer",
    CAThetaCut = cms.double( 0.002 ),
    SeedComparitorPSet = cms.PSet( 
      clusterShapeHitFilter = cms.string( "ClusterShapeHitFilter" ),
      ComponentName = cms.string( "LowPtClusterShapeSeedComparitor" ),
      clusterShapeCacheSrc = cms.InputTag( "hltSiPixelClustersCache" )
    ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltPixelTracksHitDoubletsL3Muon" ),
    fitFastCircle = cms.bool( True ),
    CAHardPtCut = cms.double( 0.0 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 50.0 ),
      value1 = cms.double( 200.0 ),
      pt1 = cms.double( 0.7 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 2.0 )
    ),
    CAOnlyOneLastHitPerLayerFilter = cms.bool( False ),
    CAPhiCut = cms.double( 0.2 ),
    useBendingCorrection = cms.bool( True ),
    fitFastCircleChi2Cut = cms.bool( True )
)
process.hltPixelTracksL3Muon = cms.EDProducer( "PixelTrackProducer",
    Filter = cms.InputTag( "hltPixelTracksL3MuonFilter" ),
    Cleaner = cms.string( "hltPixelTracksCleanerBySharedHits" ),
    passLabel = cms.string( "" ),
    Fitter = cms.InputTag( "hltPixelTracksL3MuonFitter" ),
    SeedingHitSets = cms.InputTag( "hltPixelTracksHitQuadrupletsL3Muon" )
)
process.hltPixelVerticesL3Muon = cms.EDProducer( "PixelVertexProducer",
    WtAverage = cms.bool( True ),
    Method2 = cms.bool( True ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparer" ) ),
    Verbosity = cms.int32( 0 ),
    UseError = cms.bool( True ),
    TrackCollection = cms.InputTag( "hltPixelTracksL3Muon" ),
    PtMin = cms.double( 1.0 ),
    NTrkMin = cms.int32( 2 ),
    ZOffset = cms.double( 5.0 ),
    Finder = cms.string( "DivisiveVertexFinder" ),
    ZSeparation = cms.double( 0.05 )
)
process.hltPixelTracksForSeedsL3MuonFilter = cms.EDProducer( "PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double( 1000.0 ),
    nSigmaTipMaxTolerance = cms.double( 0.0 ),
    ptMin = cms.double( 0.1 ),
    nSigmaInvPtTolerance = cms.double( 0.0 ),
    tipMax = cms.double( 1.0 )
)
process.hltPixelTracksForSeedsL3MuonFitter = cms.EDProducer( "PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool( False ),
    scaleFactor = cms.double( 0.65 )
)
process.hltPixelTracksTrackingRegionsForSeedsL3Muon = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltPixelVerticesL3Muon" ),
      zErrorVetex = cms.double( 0.2 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      maxNVertices = cms.int32( 1 ),
      maxNRegions = cms.int32( 10 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 0.9 ),
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltIterL3MuonCandidates" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "Never" ),
      originRadius = cms.double( 0.1 ),
      measurementTrackerName = cms.InputTag( "" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.3 ),
      deltaPhi = cms.double( 0.3 )
    )
)
process.hltPixelTracksHitDoubletsForSeedsL3Muon = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltPixelTracksTrackingRegionsForSeedsL3Muon" ),
    layerPairs = cms.vuint32( 0, 1, 2 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltPixelLayerQuadruplets" )
)
process.hltPixelTracksHitQuadrupletsForSeedsL3Muon = cms.EDProducer( "CAHitQuadrupletEDProducer",
    CAThetaCut = cms.double( 0.002 ),
    SeedComparitorPSet = cms.PSet( 
      clusterShapeHitFilter = cms.string( "ClusterShapeHitFilter" ),
      ComponentName = cms.string( "LowPtClusterShapeSeedComparitor" ),
      clusterShapeCacheSrc = cms.InputTag( "hltSiPixelClustersCache" )
    ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltPixelTracksHitDoubletsForSeedsL3Muon" ),
    fitFastCircle = cms.bool( True ),
    CAHardPtCut = cms.double( 0.0 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 50.0 ),
      value1 = cms.double( 200.0 ),
      pt1 = cms.double( 0.7 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 2.0 )
    ),
    CAOnlyOneLastHitPerLayerFilter = cms.bool( False ),
    CAPhiCut = cms.double( 0.2 ),
    useBendingCorrection = cms.bool( True ),
    fitFastCircleChi2Cut = cms.bool( True )
)
process.hltPixelTracksForSeedsL3Muon = cms.EDProducer( "PixelTrackProducer",
    Filter = cms.InputTag( "hltPixelTracksForSeedsL3MuonFilter" ),
    Cleaner = cms.string( "hltPixelTracksCleanerBySharedHits" ),
    passLabel = cms.string( "" ),
    Fitter = cms.InputTag( "hltPixelTracksForSeedsL3MuonFitter" ),
    SeedingHitSets = cms.InputTag( "hltPixelTracksHitQuadrupletsForSeedsL3Muon" )
)
process.hltIter0L3MuonPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    useEventsWithNoVertex = cms.bool( True ),
    originHalfLength = cms.double( 0.2 ),
    useProtoTrackKinematics = cms.bool( False ),
    usePV = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) ),
    InputVertexCollection = cms.InputTag( "hltPixelVerticesL3Muon" ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    InputCollection = cms.InputTag( "hltPixelTracksForSeedsL3Muon" ),
    originRadius = cms.double( 0.1 )
)
process.hltIter0L3MuonCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter0L3MuonPixelSeedsFromPixelTracks" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0GroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter0L3MuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter0L3MuonCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIterX" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter0L3MuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0L3MuonCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltPixelVerticesL3Muon" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 3, 4 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 3, 4 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter0L3MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter0L3MuonCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltIter0L3MuonTrackCutClassifier','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter0L3MuonTrackCutClassifier','MVAValues' )
)
process.hltIter1L3MuonClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 9.0 ),
    trajectories = cms.InputTag( "hltIter0L3MuonTrackSelectionHighPurity" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    TrackQuality = cms.string( "highPurity" )
)
process.hltIter1L3MuonMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    clustersToSkip = cms.InputTag( "hltIter1L3MuonClustersRefRemoval" ),
    OnDemand = cms.bool( False ),
    src = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter1L3MuonPixelLayerQuadruplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3+BPix4',
      'BPix1+BPix2+BPix3+FPix1_pos',
      'BPix1+BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos+FPix2_pos',
      'BPix1+BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_neg+FPix2_neg+FPix3_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter1L3MuonClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter1L3MuonClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltIter1L3MuonPixelTrackingRegions = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltPixelVerticesL3Muon" ),
      zErrorVetex = cms.double( 0.1 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      maxNVertices = cms.int32( 1 ),
      maxNRegions = cms.int32( 10 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 0.3 ),
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltIterL3MuonCandidates" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.05 ),
      measurementTrackerName = cms.InputTag( "hltIter1L3MuonMaskedMeasurementTrackerEvent" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.3 ),
      deltaPhi = cms.double( 0.3 )
    )
)
process.hltIter1L3MuonPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False ),
    MaxNumberOfCosmicClusters = cms.uint32( 50000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    doClusterCheck = cms.bool( False ),
    MaxNumberOfPixelClusters = cms.uint32( 10000 ),
    ClusterCollectionLabel = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter1L3MuonPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltIter1L3MuonPixelTrackingRegions" ),
    layerPairs = cms.vuint32( 0, 1, 2 ),
    clusterCheck = cms.InputTag( "hltIter1L3MuonPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltIter1L3MuonPixelLayerQuadruplets" )
)
process.hltIter1L3MuonPixelHitQuadruplets = cms.EDProducer( "CAHitQuadrupletEDProducer",
    CAThetaCut = cms.double( 0.004 ),
    SeedComparitorPSet = cms.PSet( 
      clusterShapeHitFilter = cms.string( "ClusterShapeHitFilter" ),
      ComponentName = cms.string( "none" ),
      clusterShapeCacheSrc = cms.InputTag( "hltSiPixelClustersCache" )
    ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltIter1L3MuonPixelHitDoublets" ),
    fitFastCircle = cms.bool( True ),
    CAHardPtCut = cms.double( 0.0 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 150.0 ),
      value1 = cms.double( 2000.0 ),
      pt1 = cms.double( 0.7 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 2.0 )
    ),
    CAOnlyOneLastHitPerLayerFilter = cms.bool( False ),
    CAPhiCut = cms.double( 0.3 ),
    useBendingCorrection = cms.bool( True ),
    fitFastCircleChi2Cut = cms.bool( True )
)
process.hltIter1L3MuonPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltIter1L3MuonPixelHitQuadruplets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltIter1L3MuonCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter1L3MuonPixelSeeds" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter1L3MuonMaskedMeasurementTrackerEvent" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter1GroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter1L3MuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter1L3MuonCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter1L3MuonMaskedMeasurementTrackerEvent" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIterX" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter1L3MuonTrackCutClassifierPrompt = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter1L3MuonCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltPixelVerticesL3Muon" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 2 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 1.0, 0.85 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 1.0, 0.9 ),
        dr_exp = cms.vint32( 3, 3, 3 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 1.0, 0.9 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 1.0, 0.8 ),
        dz_exp = cms.vint32( 3, 3, 3 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 3.40282346639E38, 1.0, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 3.40282346639E38, 1.0, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter1L3MuonTrackCutClassifierDetached = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter1L3MuonCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltPixelVerticesL3Muon" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 1 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 1.0, 1.0, 1.0 ),
        dr_par1 = cms.vdouble( 1.0, 1.0, 1.0 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 99, 3, 3 ),
      min3DLayers = cms.vint32( 1, 2, 3 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 1.0, 1.0, 1.0 ),
        dz_par2 = cms.vdouble( 1.0, 1.0, 1.0 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 2 ),
      maxDz = cms.vdouble( 3.40282346639E38, 1.0, 3.40282346639E38 ),
      minNdof = cms.vdouble( -1.0, -1.0, -1.0 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.0, 0.7, 0.4 ),
      maxDr = cms.vdouble( 3.40282346639E38, 1.0, 3.40282346639E38 ),
      minLayers = cms.vint32( 5, 5, 5 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter1L3MuonTrackCutClassifierMerged = cms.EDProducer( "ClassifierMerger",
    inputClassifiers = cms.vstring( 'hltIter1L3MuonTrackCutClassifierPrompt',
      'hltIter1L3MuonTrackCutClassifierDetached' )
)
process.hltIter1L3MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter1L3MuonCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltIter1L3MuonTrackCutClassifierMerged','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter1L3MuonTrackCutClassifierMerged','MVAValues' )
)
process.hltIter1L3MuonMerged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0L3MuonTrackSelectionHighPurity','hltIter1L3MuonTrackSelectionHighPurity' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIter0L3MuonTrackSelectionHighPurity','hltIter1L3MuonTrackSelectionHighPurity' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltIter2L3MuonClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 16.0 ),
    trajectories = cms.InputTag( "hltIter1L3MuonTrackSelectionHighPurity" ),
    oldClusterRemovalInfo = cms.InputTag( "hltIter1L3MuonClustersRefRemoval" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    TrackQuality = cms.string( "highPurity" )
)
process.hltIter2L3MuonMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    clustersToSkip = cms.InputTag( "hltIter2L3MuonClustersRefRemoval" ),
    OnDemand = cms.bool( False ),
    src = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter2L3MuonPixelLayerTriplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3',
      'BPix2+BPix3+BPix4',
      'BPix1+BPix3+BPix4',
      'BPix1+BPix2+BPix4',
      'BPix2+BPix3+FPix1_pos',
      'BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos',
      'BPix1+BPix2+FPix1_neg',
      'BPix2+FPix1_pos+FPix2_pos',
      'BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos',
      'BPix1+FPix1_neg+FPix2_neg',
      'FPix1_pos+FPix2_pos+FPix3_pos',
      'FPix1_neg+FPix2_neg+FPix3_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter2L3MuonClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter2L3MuonClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltIter2L3MuonPixelTrackingRegions = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltPixelVerticesL3Muon" ),
      zErrorVetex = cms.double( 0.05 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      maxNVertices = cms.int32( 1 ),
      maxNRegions = cms.int32( 10 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 0.8 ),
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltIterL3MuonCandidates" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.025 ),
      measurementTrackerName = cms.InputTag( "hltIter2L3MuonMaskedMeasurementTrackerEvent" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.3 ),
      deltaPhi = cms.double( 0.3 )
    )
)
process.hltIter2L3MuonPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False ),
    MaxNumberOfCosmicClusters = cms.uint32( 50000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    doClusterCheck = cms.bool( False ),
    MaxNumberOfPixelClusters = cms.uint32( 10000 ),
    ClusterCollectionLabel = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter2L3MuonPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltIter2L3MuonPixelTrackingRegions" ),
    layerPairs = cms.vuint32( 0, 1 ),
    clusterCheck = cms.InputTag( "hltIter2L3MuonPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltIter2L3MuonPixelLayerTriplets" )
)
process.hltIter2L3MuonPixelHitTriplets = cms.EDProducer( "CAHitTripletEDProducer",
    CAHardPtCut = cms.double( 0.3 ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltIter2L3MuonPixelHitDoublets" ),
    CAThetaCut = cms.double( 0.004 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 6.0 ),
      value1 = cms.double( 100.0 ),
      pt1 = cms.double( 0.8 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 8.0 )
    ),
    CAPhiCut = cms.double( 0.1 ),
    useBendingCorrection = cms.bool( True )
)
process.hltIter2L3MuonPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltIter2L3MuonPixelHitTriplets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltIter2L3MuonCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter2L3MuonPixelSeeds" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter2L3MuonMaskedMeasurementTrackerEvent" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2GroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter2L3MuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter2L3MuonCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter2L3MuonMaskedMeasurementTrackerEvent" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIterX" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter2L3MuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter2L3MuonCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltPixelVerticesL3Muon" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter2L3MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter2L3MuonCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltIter2L3MuonTrackCutClassifier','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter2L3MuonTrackCutClassifier','MVAValues' )
)
process.hltIter2L3MuonMerged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter1L3MuonMerged','hltIter2L3MuonTrackSelectionHighPurity' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIter1L3MuonMerged','hltIter2L3MuonTrackSelectionHighPurity' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltL3MuonRelTrkIsolationVVL = cms.EDProducer( "L3MuonCombinedRelativeIsolationProducer",
    printDebug = cms.bool( False ),
    CutsPSet = cms.PSet( 
      applyCutsORmaxNTracks = cms.bool( False ),
      maxNTracks = cms.int32( -1 ),
      Thresholds = cms.vdouble( 0.4 ),
      EtaBounds = cms.vdouble( 2.411 ),
      ComponentName = cms.string( "SimpleCuts" ),
      ConeSizes = cms.vdouble( 0.3 )
    ),
    OutputMuIsoDeposits = cms.bool( True ),
    TrackPt_Min = cms.double( -1.0 ),
    CaloDepositsLabel = cms.InputTag( "notUsed" ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      Vertex_Constraint_Z = cms.bool( False ),
      DR_Veto_E = cms.double( 0.07 ),
      Weight_H = cms.double( 1.0 ),
      CaloTowerCollectionLabel = cms.InputTag( "notUsed" ),
      DR_Max = cms.double( 0.3 ),
      DepositLabel = cms.untracked.string( "EcalPlusHcal" ),
      Vertex_Constraint_XY = cms.bool( False ),
      Threshold_H = cms.double( 0.5 ),
      Threshold_E = cms.double( 0.2 ),
      ComponentName = cms.string( "CaloExtractor" ),
      Weight_E = cms.double( 1.0 )
    ),
    inputMuonCollection = cms.InputTag( "hltIterL3MuonCandidates" ),
    TrkExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltIterL3MuonAndMuonFromL1Merged" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      VetoLeadingTrack = cms.bool( False ),
      DR_Max = cms.double( 0.3 ),
      DepositLabel = cms.untracked.string( "PXLS" ),
      PtVeto_Min = cms.double( 2.0 ),
      NHits_Min = cms.uint32( 0 ),
      PropagateTracksToRadius = cms.bool( False ),
      ReferenceRadius = cms.double( 6.0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "PixelTrackExtractor" ),
      DR_VetoPt = cms.double( 0.025 )
    ),
    UseRhoCorrectedCaloDeposits = cms.bool( False ),
    UseCaloIso = cms.bool( False )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL3IsoFiltered23 = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    PreviousCandTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL3Filtered23" ),
    MinN = cms.int32( 1 ),
    IsolatorPSet = cms.PSet(  ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    DepTag = cms.VInputTag( 'hltL3MuonRelTrkIsolationVVL' )
)
process.hltEcalDigis = cms.EDProducer( "EcalRawToDigi",
    orderedDCCIdList = cms.vint32( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 ),
    FedLabel = cms.InputTag( "listfeds" ),
    eventPut = cms.bool( True ),
    srpUnpacking = cms.bool( True ),
    syncCheck = cms.bool( True ),
    headerUnpacking = cms.bool( True ),
    feUnpacking = cms.bool( True ),
    orderedFedList = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    tccUnpacking = cms.bool( True ),
    numbTriggerTSamples = cms.int32( 1 ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    numbXtalTSamples = cms.int32( 10 ),
    feIdCheck = cms.bool( True ),
    FEDs = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    silentMode = cms.untracked.bool( True ),
    DoRegional = cms.bool( False ),
    forceToKeepFRData = cms.bool( False ),
    memUnpacking = cms.bool( True )
)
process.hltEcalPreshowerDigis = cms.EDProducer( "ESRawToDigi",
    sourceTag = cms.InputTag( "rawDataCollector" ),
    debugMode = cms.untracked.bool( False ),
    InstanceES = cms.string( "" ),
    ESdigiCollection = cms.string( "" ),
    LookupTable = cms.FileInPath( "EventFilter/ESDigiToRaw/data/ES_lookup_table.dat" )
)
process.hltEcalUncalibRecHit = cms.EDProducer( "EcalUncalibRecHitProducer",
    EEdigiCollection = cms.InputTag( 'hltEcalDigis','eeDigis' ),
    EBdigiCollection = cms.InputTag( 'hltEcalDigis','ebDigis' ),
    EEhitCollection = cms.string( "EcalUncalibRecHitsEE" ),
    EBhitCollection = cms.string( "EcalUncalibRecHitsEB" ),
    algo = cms.string( "EcalUncalibRecHitWorkerMultiFit" ),
    algoPSet = cms.PSet( 
      ebSpikeThreshold = cms.double( 1.042 ),
      EBtimeFitLimits_Upper = cms.double( 1.4 ),
      EEtimeFitLimits_Lower = cms.double( 0.2 ),
      timealgo = cms.string( "None" ),
      EEtimeNconst = cms.double( 31.8 ),
      EEamplitudeFitParameters = cms.vdouble( 1.89, 1.4 ),
      EBtimeNconst = cms.double( 28.5 ),
      prefitMaxChiSqEE = cms.double( 10.0 ),
      outOfTimeThresholdGain12mEB = cms.double( 5.0 ),
      chi2ThreshEE_ = cms.double( 50.0 ),
      EEtimeFitParameters = cms.vdouble( -2.390548, 3.553628, -17.62341, 67.67538, -133.213, 140.7432, -75.41106, 16.20277 ),
      outOfTimeThresholdGain12mEE = cms.double( 1000.0 ),
      outOfTimeThresholdGain12pEB = cms.double( 5.0 ),
      prefitMaxChiSqEB = cms.double( 15.0 ),
      outOfTimeThresholdGain12pEE = cms.double( 1000.0 ),
      ampErrorCalculation = cms.bool( False ),
      amplitudeThresholdEB = cms.double( 10.0 ),
      kPoorRecoFlagEB = cms.bool( True ),
      amplitudeThresholdEE = cms.double( 10.0 ),
      EBtimeFitLimits_Lower = cms.double( 0.2 ),
      kPoorRecoFlagEE = cms.bool( False ),
      EBtimeFitParameters = cms.vdouble( -2.015452, 3.130702, -12.3473, 41.88921, -82.83944, 91.01147, -50.35761, 11.05621 ),
      useLumiInfoRunHeader = cms.bool( False ),
      EBamplitudeFitParameters = cms.vdouble( 1.138, 1.652 ),
      doPrefitEE = cms.bool( False ),
      EEtimeFitLimits_Upper = cms.double( 1.4 ),
      outOfTimeThresholdGain61pEE = cms.double( 1000.0 ),
      outOfTimeThresholdGain61mEE = cms.double( 1000.0 ),
      outOfTimeThresholdGain61pEB = cms.double( 5.0 ),
      EEtimeConstantTerm = cms.double( 1.0 ),
      EBtimeConstantTerm = cms.double( 0.6 ),
      chi2ThreshEB_ = cms.double( 65.0 ),
      activeBXs = cms.vint32( -5, -4, -3, -2, -1, 0, 1, 2, 3, 4 ),
      outOfTimeThresholdGain61mEB = cms.double( 5.0 ),
      doPrefitEB = cms.bool( False )
    )
)
process.hltEcalDetIdToBeRecovered = cms.EDProducer( "EcalDetIdToBeRecoveredProducer",
    ebIntegrityChIdErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityChIdErrors' ),
    ebDetIdToBeRecovered = cms.string( "ebDetId" ),
    integrityTTIdErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityTTIdErrors' ),
    eeIntegrityGainErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityGainErrors' ),
    ebFEToBeRecovered = cms.string( "ebFE" ),
    ebIntegrityGainErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityGainErrors' ),
    eeDetIdToBeRecovered = cms.string( "eeDetId" ),
    eeIntegrityGainSwitchErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityGainSwitchErrors' ),
    eeIntegrityChIdErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityChIdErrors' ),
    ebIntegrityGainSwitchErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityGainSwitchErrors' ),
    ebSrFlagCollection = cms.InputTag( "hltEcalDigis" ),
    eeSrFlagCollection = cms.InputTag( "hltEcalDigis" ),
    integrityBlockSizeErrors = cms.InputTag( 'hltEcalDigis','EcalIntegrityBlockSizeErrors' ),
    eeFEToBeRecovered = cms.string( "eeFE" )
)
process.hltEcalRecHit = cms.EDProducer( "EcalRecHitProducer",
    recoverEEVFE = cms.bool( False ),
    EErechitCollection = cms.string( "EcalRecHitsEE" ),
    recoverEBIsolatedChannels = cms.bool( False ),
    recoverEBVFE = cms.bool( False ),
    laserCorrection = cms.bool( True ),
    EBLaserMIN = cms.double( 0.5 ),
    killDeadChannels = cms.bool( True ),
    dbStatusToBeExcludedEB = cms.vint32( 14, 78, 142 ),
    EEuncalibRecHitCollection = cms.InputTag( 'hltEcalUncalibRecHit','EcalUncalibRecHitsEE' ),
    EBLaserMAX = cms.double( 3.0 ),
    EELaserMIN = cms.double( 0.5 ),
    ebFEToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','ebFE' ),
    EELaserMAX = cms.double( 8.0 ),
    recoverEEIsolatedChannels = cms.bool( False ),
    eeDetIdToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','eeDetId' ),
    recoverEBFE = cms.bool( True ),
    algo = cms.string( "EcalRecHitWorkerSimple" ),
    ebDetIdToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','ebDetId' ),
    singleChannelRecoveryThreshold = cms.double( 8.0 ),
    ChannelStatusToBeExcluded = cms.vstring(  ),
    EBrechitCollection = cms.string( "EcalRecHitsEB" ),
    singleChannelRecoveryMethod = cms.string( "NeuralNetworks" ),
    recoverEEFE = cms.bool( True ),
    triggerPrimitiveDigiCollection = cms.InputTag( 'hltEcalDigis','EcalTriggerPrimitives' ),
    dbStatusToBeExcludedEE = cms.vint32( 14, 78, 142 ),
    flagsMapDBReco = cms.PSet( 
      kDead = cms.vstring( 'kNoDataNoTP' ),
      kGood = cms.vstring( 'kOk',
        'kDAC',
        'kNoLaser',
        'kNoisy' ),
      kTowerRecovered = cms.vstring( 'kDeadFE' ),
      kNoisy = cms.vstring( 'kNNoisy',
        'kFixedG6',
        'kFixedG1' ),
      kNeighboursRecovered = cms.vstring( 'kFixedG0',
        'kNonRespondingIsolated',
        'kDeadVFE' )
    ),
    EBuncalibRecHitCollection = cms.InputTag( 'hltEcalUncalibRecHit','EcalUncalibRecHitsEB' ),
    skipTimeCalib = cms.bool( True ),
    algoRecover = cms.string( "EcalRecHitWorkerRecover" ),
    eeFEToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','eeFE' ),
    cleaningConfig = cms.PSet( 
      cThreshold_endcap = cms.double( 15.0 ),
      tightenCrack_e1_double = cms.double( 2.0 ),
      cThreshold_barrel = cms.double( 4.0 ),
      e6e2thresh = cms.double( 0.04 ),
      e4e1Threshold_barrel = cms.double( 0.08 ),
      e4e1Threshold_endcap = cms.double( 0.3 ),
      tightenCrack_e4e1_single = cms.double( 3.0 ),
      cThreshold_double = cms.double( 10.0 ),
      e4e1_b_barrel = cms.double( -0.024 ),
      tightenCrack_e6e2_double = cms.double( 3.0 ),
      e4e1_a_barrel = cms.double( 0.04 ),
      tightenCrack_e1_single = cms.double( 2.0 ),
      e4e1_a_endcap = cms.double( 0.02 ),
      e4e1_b_endcap = cms.double( -0.0125 ),
      ignoreOutOfTimeThresh = cms.double( 1.0E9 )
    ),
    logWarningEtThreshold_EB_FE = cms.double( 50.0 ),
    logWarningEtThreshold_EE_FE = cms.double( 50.0 )
)
process.hltEcalPreshowerRecHit = cms.EDProducer( "ESRecHitProducer",
    ESRecoAlgo = cms.int32( 0 ),
    ESrechitCollection = cms.string( "EcalRecHitsES" ),
    algo = cms.string( "ESRecHitWorker" ),
    ESdigiCollection = cms.InputTag( "hltEcalPreshowerDigis" )
)
process.hltRechitInRegionsECAL = cms.EDProducer( "HLTEcalRecHitInAllL1RegionsProducer",
    l1InputRegions = cms.VPSet( 
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "EGamma" ),
        minEt = cms.double( 5.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Jet' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Jet" ),
        minEt = cms.double( 170.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Tau' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Tau" ),
        minEt = cms.double( 100.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      )
    ),
    recHitLabels = cms.VInputTag( 'hltEcalRecHit:EcalRecHitsEB','hltEcalRecHit:EcalRecHitsEE' ),
    productLabels = cms.vstring( 'EcalRecHitsEB',
      'EcalRecHitsEE' )
)
process.hltRechitInRegionsES = cms.EDProducer( "HLTEcalRecHitInAllL1RegionsProducer",
    l1InputRegions = cms.VPSet( 
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "EGamma" ),
        minEt = cms.double( 5.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Jet' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Jet" ),
        minEt = cms.double( 170.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Tau' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Tau" ),
        minEt = cms.double( 100.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      )
    ),
    recHitLabels = cms.VInputTag( 'hltEcalPreshowerRecHit:EcalRecHitsES' ),
    productLabels = cms.vstring( 'EcalRecHitsES' )
)
process.hltParticleFlowRecHitECALL1Seeded = cms.EDProducer( "PFRecHitProducer",
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEB' ),
        srFlags = cms.InputTag( "hltEcalDigis" ),
        name = cms.string( "PFEBRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  thresholds = cms.vdouble
            name = cms.string( "PFRecHitQTestECALMultiThreshold" )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      ),
      cms.PSet(  src = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEE' ),
        srFlags = cms.InputTag( "hltEcalDigis" ),
        name = cms.string( "PFEERecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  thresholds = cms.vdouble
            name = cms.string( "PFRecHitQTestECALMultiThreshold" )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      )
    ),
    navigator = cms.PSet( 
      barrel = cms.PSet(  ),
      endcap = cms.PSet(  ),
      name = cms.string( "PFRecHitECALNavigator" )
    )
)
process.hltParticleFlowRecHitPSL1Seeded = cms.EDProducer( "PFRecHitProducer",
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltRechitInRegionsES','EcalRecHitsES' ),
        name = cms.string( "PFPSRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  threshold = cms.double( 7.0E-6 ),
            name = cms.string( "PFRecHitQTestThreshold" )
          )
        )
      )
    ),
    navigator = cms.PSet(  name = cms.string( "PFRecHitPreshowerNavigator" ) )
)
process.hltParticleFlowClusterPSL1Seeded = cms.EDProducer( "PFClusterProducer",
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 6.0E-5 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS2" )
        )
      ),
      showerSigma = cms.double( 0.3 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet(  ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( False )
    ),
    energyCorrector = cms.PSet(  ),
    recHitCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 4 )
    ),
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitPSL1Seeded" )
)
process.hltParticleFlowClusterECALUncorrectedL1Seeded = cms.EDProducer( "PFClusterProducer",
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 9 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      maxIterations = cms.uint32( 50 ),
      positionCalcForConvergence = cms.PSet( 
        minAllowedNormalization = cms.double( 0.0 ),
        T0_ES = cms.double( 1.2 ),
        algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
        T0_EE = cms.double( 3.1 ),
        T0_EB = cms.double( 7.4 ),
        X0 = cms.double( 0.89 ),
        minFractionInCalc = cms.double( 0.0 ),
        W0 = cms.double( 4.2 )
      ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.08 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.3 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      showerSigma = cms.double( 1.5 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 0.0 ),
      T0_ES = cms.double( 1.2 ),
      algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
      T0_EE = cms.double( 3.1 ),
      T0_EB = cms.double( 7.4 ),
      X0 = cms.double( 0.89 ),
      minFractionInCalc = cms.double( 0.0 ),
      W0 = cms.double( 4.2 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.08 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.3 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( True )
    ),
    energyCorrector = cms.PSet(  ),
    recHitCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.15 ),
          seedingThreshold = cms.double( 0.6 ),
          detector = cms.string( "ECAL_ENDCAP" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 0.23 ),
          detector = cms.string( "ECAL_BARREL" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 8 )
    ),
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitECALL1Seeded" )
)
process.hltParticleFlowClusterECALL1Seeded = cms.EDProducer( "CorrectedECALPFClusterProducer",
    inputPS = cms.InputTag( "hltParticleFlowClusterPSL1Seeded" ),
    minimumPSEnergy = cms.double( 0.0 ),
    energyCorrector = cms.PSet( 
      algoName = cms.string( "PFClusterEMEnergyCorrector" ),
      applyCrackCorrections = cms.bool( False )
    ),
    inputECAL = cms.InputTag( "hltParticleFlowClusterECALUncorrectedL1Seeded" )
)
process.hltParticleFlowSuperClusterECALL1Seeded = cms.EDProducer( "PFECALSuperClusterProducer",
    PFSuperClusterCollectionEndcap = cms.string( "hltParticleFlowSuperClusterECALEndcap" ),
    doSatelliteClusterMerge = cms.bool( False ),
    BeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    PFBasicClusterCollectionBarrel = cms.string( "hltParticleFlowBasicClusterECALBarrel" ),
    useRegression = cms.bool( True ),
    satelliteMajorityFraction = cms.double( 0.5 ),
    isOOTCollection = cms.bool( False ),
    thresh_PFClusterEndcap = cms.double( 0.5 ),
    ESAssociation = cms.InputTag( "hltParticleFlowClusterECALL1Seeded" ),
    PFBasicClusterCollectionPreshower = cms.string( "hltParticleFlowBasicClusterECALPreshower" ),
    use_preshower = cms.bool( True ),
    thresh_PFClusterBarrel = cms.double( 0.5 ),
    thresh_SCEt = cms.double( 4.0 ),
    etawidth_SuperClusterEndcap = cms.double( 0.04 ),
    phiwidth_SuperClusterEndcap = cms.double( 0.6 ),
    verbose = cms.untracked.bool( False ),
    useDynamicDPhiWindow = cms.bool( True ),
    PFSuperClusterCollectionBarrel = cms.string( "hltParticleFlowSuperClusterECALBarrel" ),
    regressionConfig = cms.PSet( 
      uncertaintyKeyEB = cms.string( "pfscecal_EBUncertainty_online" ),
      ecalRecHitsEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      ecalRecHitsEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      regressionKeyEE = cms.string( "pfscecal_EECorrection_online" ),
      regressionKeyEB = cms.string( "pfscecal_EBCorrection_online" ),
      uncertaintyKeyEE = cms.string( "pfscecal_EEUncertainty_online" ),
      isHLT = cms.bool( True )
    ),
    applyCrackCorrections = cms.bool( False ),
    satelliteClusterSeedThreshold = cms.double( 50.0 ),
    endcapRecHits = cms.InputTag( 'ecalRecHit','EcalRecHitsEB' ),
    etawidth_SuperClusterBarrel = cms.double( 0.04 ),
    PFBasicClusterCollectionEndcap = cms.string( "hltParticleFlowBasicClusterECALEndcap" ),
    barrelRecHits = cms.InputTag( 'ecalRecHit','EcalRecHitsEE' ),
    thresh_PFClusterSeedBarrel = cms.double( 1.0 ),
    ClusteringType = cms.string( "Mustache" ),
    EnergyWeight = cms.string( "Raw" ),
    PFClusters = cms.InputTag( "hltParticleFlowClusterECALL1Seeded" ),
    thresh_PFClusterSeedEndcap = cms.double( 1.0 ),
    phiwidth_SuperClusterBarrel = cms.double( 0.6 ),
    thresh_PFClusterES = cms.double( 0.5 ),
    seedThresholdIsET = cms.bool( True ),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string( "hltParticleFlowSuperClusterECALEndcapWithPreshower" )
)
process.hltEgammaCandidates = cms.EDProducer( "EgammaHLTRecoEcalCandidateProducers",
    scIslandEndcapProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALL1Seeded','hltParticleFlowSuperClusterECALEndcapWithPreshower' ),
    scHybridBarrelProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALL1Seeded','hltParticleFlowSuperClusterECALBarrel' ),
    recoEcalCandidateCollection = cms.string( "" )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegL1MatchFilter = cms.EDFilter( "HLTEgammaL1TMatchFilterRegional",
    doIsolated = cms.bool( False ),
    endcap_end = cms.double( 2.65 ),
    region_phi_size = cms.double( 1.044 ),
    saveTags = cms.bool( True ),
    region_eta_size_ecap = cms.double( 1.0 ),
    barrel_end = cms.double( 1.4791 ),
    l1IsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidates" ),
    l1CenJetsTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    region_eta_size = cms.double( 0.522 ),
    L1SeedFilterTag = cms.InputTag( "hltL1sMu23EG10IorMu20EG17" ),
    candNonIsolatedTag = cms.InputTag( "" ),
    l1NonIsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    ncandcut = cms.int32( 1 ),
    l1TausTag = cms.InputTag( 'hltGtStage2Digis','Tau' )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegEtFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegL1MatchFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEE = cms.double( 12.0 ),
    etcutEB = cms.double( 12.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEgammaClusterShape = cms.EDProducer( "EgammaHLTClusterShapeProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    ecalRechitEB = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEE' ),
    isIeta = cms.bool( True )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegClusterShapeFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.013 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegEtFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltHcalDigis = cms.EDProducer( "HcalRawToDigi",
    ExpectedOrbitMessageTime = cms.untracked.int32( -1 ),
    FilterDataQuality = cms.bool( True ),
    silent = cms.untracked.bool( True ),
    HcalFirstFED = cms.untracked.int32( 700 ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    ComplainEmptyData = cms.untracked.bool( False ),
    ElectronicsMap = cms.string( "" ),
    UnpackCalib = cms.untracked.bool( True ),
    UnpackUMNio = cms.untracked.bool( True ),
    FEDs = cms.untracked.vint32(  ),
    UnpackerMode = cms.untracked.int32( 0 ),
    UnpackTTP = cms.untracked.bool( False ),
    lastSample = cms.int32( 9 ),
    UnpackZDC = cms.untracked.bool( True ),
    firstSample = cms.int32( 0 )
)
process.hltHbhePhase1Reco = cms.EDProducer( "HBHEPhase1Reconstructor",
    tsFromDB = cms.bool( False ),
    setPulseShapeFlagsQIE8 = cms.bool( True ),
    digiLabelQIE11 = cms.InputTag( "hltHcalDigis" ),
    saveDroppedInfos = cms.bool( False ),
    setNoiseFlagsQIE8 = cms.bool( True ),
    saveEffectivePedestal = cms.bool( False ),
    digiLabelQIE8 = cms.InputTag( "hltHcalDigis" ),
    sipmQTSShift = cms.int32( 0 ),
    processQIE11 = cms.bool( True ),
    pulseShapeParametersQIE11 = cms.PSet(  ),
    algoConfigClass = cms.string( "" ),
    saveInfos = cms.bool( False ),
    flagParametersQIE11 = cms.PSet(  ),
    makeRecHits = cms.bool( True ),
    pulseShapeParametersQIE8 = cms.PSet( 
      UseDualFit = cms.bool( True ),
      LinearCut = cms.vdouble( -3.0, -0.054, -0.054 ),
      TriangleIgnoreSlow = cms.bool( False ),
      TS4TS5LowerThreshold = cms.vdouble( 100.0, 120.0, 160.0, 200.0, 300.0, 500.0 ),
      LinearThreshold = cms.vdouble( 20.0, 100.0, 100000.0 ),
      RightSlopeSmallCut = cms.vdouble( 1.08, 1.16, 1.16 ),
      TS4TS5UpperThreshold = cms.vdouble( 70.0, 90.0, 100.0, 400.0 ),
      TS3TS4ChargeThreshold = cms.double( 70.0 ),
      R45PlusOneRange = cms.double( 0.2 ),
      TS4TS5LowerCut = cms.vdouble( -1.0, -0.7, -0.5, -0.4, -0.3, 0.1 ),
      RightSlopeThreshold = cms.vdouble( 250.0, 400.0, 100000.0 ),
      TS3TS4UpperChargeThreshold = cms.double( 20.0 ),
      MinimumChargeThreshold = cms.double( 20.0 ),
      RightSlopeCut = cms.vdouble( 5.0, 4.15, 4.15 ),
      RMS8MaxThreshold = cms.vdouble( 20.0, 100.0, 100000.0 ),
      MinimumTS4TS5Threshold = cms.double( 100.0 ),
      LeftSlopeThreshold = cms.vdouble( 250.0, 500.0, 100000.0 ),
      TS5TS6ChargeThreshold = cms.double( 70.0 ),
      TrianglePeakTS = cms.uint32( 10000 ),
      TS5TS6UpperChargeThreshold = cms.double( 20.0 ),
      RightSlopeSmallThreshold = cms.vdouble( 150.0, 200.0, 100000.0 ),
      RMS8MaxCut = cms.vdouble( -13.5, -11.5, -11.5 ),
      TS4TS5ChargeThreshold = cms.double( 70.0 ),
      R45MinusOneRange = cms.double( 0.2 ),
      LeftSlopeCut = cms.vdouble( 5.0, 2.55, 2.55 ),
      TS4TS5UpperCut = cms.vdouble( 1.0, 0.8, 0.75, 0.72 )
    ),
    flagParametersQIE8 = cms.PSet( 
      hitEnergyMinimum = cms.double( 1.0 ),
      pulseShapeParameterSets = cms.VPSet( 
        cms.PSet(  pulseShapeParameters = cms.vdouble( 0.0, 100.0, -50.0, 0.0, -15.0, 0.15 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( 100.0, 2000.0, -50.0, 0.0, -5.0, 0.05 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( 2000.0, 1000000.0, -50.0, 0.0, 95.0, 0.0 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( -1000000.0, 1000000.0, 45.0, 0.1, 1000000.0, 0.0 )        )
      ),
      nominalPedestal = cms.double( 3.0 ),
      hitMultiplicityThreshold = cms.int32( 17 )
    ),
    setNegativeFlagsQIE8 = cms.bool( False ),
    setNegativeFlagsQIE11 = cms.bool( False ),
    processQIE8 = cms.bool( True ),
    algorithm = cms.PSet( 
      meanTime = cms.double( 0.0 ),
      pedSigmaHPD = cms.double( 0.5 ),
      pedSigmaSiPM = cms.double( 6.5E-4 ),
      timeSigmaSiPM = cms.double( 2.5 ),
      applyTimeSlew = cms.bool( True ),
      timeSlewParsType = cms.int32( 3 ),
      ts4Max = cms.vdouble( 100.0, 45000.0 ),
      samplesToAdd = cms.int32( 2 ),
      applyTimeConstraint = cms.bool( True ),
      timeSigmaHPD = cms.double( 5.0 ),
      correctForPhaseContainment = cms.bool( True ),
      pedestalUpperLimit = cms.double( 2.7 ),
      respCorrM3 = cms.double( 1.0 ),
      pulseJitter = cms.double( 1.0 ),
      applyPedConstraint = cms.bool( True ),
      fitTimes = cms.int32( 1 ),
      applyTimeSlewM3 = cms.bool( True ),
      meanPed = cms.double( 0.0 ),
      noiseSiPM = cms.double( 1.0 ),
      ts4Min = cms.double( 0.0 ),
      applyPulseJitter = cms.bool( False ),
      noiseHPD = cms.double( 1.0 ),
      useM2 = cms.bool( False ),
      timeMin = cms.double( -12.5 ),
      useM3 = cms.bool( True ),
      tdcTimeShift = cms.double( 0.0 ),
      correctionPhaseNS = cms.double( 6.0 ),
      firstSampleShift = cms.int32( 0 ),
      timeSlewPars = cms.vdouble( 12.2999, -2.19142, 0.0, 12.2999, -2.19142, 0.0, 12.2999, -2.19142, 0.0 ),
      ts4chi2 = cms.vdouble( 15.0, 15.0 ),
      timeMax = cms.double( 12.5 ),
      Class = cms.string( "SimpleHBHEPhase1Algo" )
    ),
    setLegacyFlagsQIE8 = cms.bool( False ),
    sipmQNTStoSum = cms.int32( 3 ),
    setPulseShapeFlagsQIE11 = cms.bool( False ),
    setLegacyFlagsQIE11 = cms.bool( False ),
    setNoiseFlagsQIE11 = cms.bool( False ),
    dropZSmarkedPassed = cms.bool( True ),
    recoParamsFromDB = cms.bool( True )
)
process.hltHbhereco = cms.EDProducer( "HBHEPlan1Combiner",
    hbheInput = cms.InputTag( "hltHbhePhase1Reco" ),
    usePlan1Mode = cms.bool( True ),
    ignorePlan1Topology = cms.bool( False ),
    algorithm = cms.PSet(  Class = cms.string( "SimplePlan1RechitCombiner" ) )
)
process.hltHfprereco = cms.EDProducer( "HFPreReconstructor",
    soiShift = cms.int32( 0 ),
    sumAllTimeSlices = cms.bool( False ),
    dropZSmarkedPassed = cms.bool( True ),
    digiLabel = cms.InputTag( "hltHcalDigis" ),
    tsFromDB = cms.bool( False ),
    forceSOI = cms.int32( -1 )
)
process.hltHfreco = cms.EDProducer( "HFPhase1Reconstructor",
    setNoiseFlags = cms.bool( True ),
    PETstat = cms.PSet( 
      shortEnergyParams = cms.vdouble( 35.1773, 35.37, 35.7933, 36.4472, 37.3317, 38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 47.4813, 49.98, 52.7093 ),
      shortETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      long_R_29 = cms.vdouble( 0.8 ),
      longETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      longEnergyParams = cms.vdouble( 43.5, 45.7, 48.32, 51.36, 54.82, 58.7, 63.0, 67.72, 72.86, 78.42, 84.4, 90.8, 97.62 ),
      short_R_29 = cms.vdouble( 0.8 ),
      long_R = cms.vdouble( 0.98 ),
      short_R = cms.vdouble( 0.8 ),
      HcalAcceptSeverityLevel = cms.int32( 9 )
    ),
    algoConfigClass = cms.string( "HFPhase1PMTParams" ),
    inputLabel = cms.InputTag( "hltHfprereco" ),
    S9S1stat = cms.PSet( 
      shortEnergyParams = cms.vdouble( 35.1773, 35.37, 35.7933, 36.4472, 37.3317, 38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 47.4813, 49.98, 52.7093 ),
      shortETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      long_optimumSlope = cms.vdouble( -99999.0, 0.0164905, 0.0238698, 0.0321383, 0.041296, 0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 0.135313, 0.136289, 0.0589927 ),
      isS8S1 = cms.bool( False ),
      longETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      longEnergyParams = cms.vdouble( 43.5, 45.7, 48.32, 51.36, 54.82, 58.7, 63.0, 67.72, 72.86, 78.42, 84.4, 90.8, 97.62 ),
      short_optimumSlope = cms.vdouble( -99999.0, 0.0164905, 0.0238698, 0.0321383, 0.041296, 0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 0.135313, 0.136289, 0.0589927 ),
      HcalAcceptSeverityLevel = cms.int32( 9 )
    ),
    checkChannelQualityForDepth3and4 = cms.bool( False ),
    useChannelQualityFromDB = cms.bool( False ),
    algorithm = cms.PSet( 
      tfallIfNoTDC = cms.double( -101.0 ),
      triseIfNoTDC = cms.double( -100.0 ),
      rejectAllFailures = cms.bool( True ),
      energyWeights = cms.vdouble( 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 1.0 ),
      soiPhase = cms.uint32( 1 ),
      timeShift = cms.double( 0.0 ),
      tlimits = cms.vdouble( -1000.0, 1000.0, -1000.0, 1000.0 ),
      Class = cms.string( "HFFlexibleTimeCheck" )
    ),
    S8S1stat = cms.PSet( 
      shortEnergyParams = cms.vdouble( 40.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0 ),
      shortETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      long_optimumSlope = cms.vdouble( 0.3, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 ),
      isS8S1 = cms.bool( True ),
      longETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      longEnergyParams = cms.vdouble( 40.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0 ),
      short_optimumSlope = cms.vdouble( 0.3, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 ),
      HcalAcceptSeverityLevel = cms.int32( 9 )
    )
)
process.hltHoreco = cms.EDProducer( "HcalHitReconstructor",
    pedestalUpperLimit = cms.double( 2.7 ),
    timeSlewPars = cms.vdouble( 12.2999, -2.19142, 0.0, 12.2999, -2.19142, 0.0, 12.2999, -2.19142, 0.0 ),
    respCorrM3 = cms.double( 1.0 ),
    timeSlewParsType = cms.int32( 3 ),
    applyTimeSlewM3 = cms.bool( True ),
    digiTimeFromDB = cms.bool( True ),
    mcOOTCorrectionName = cms.string( "" ),
    S9S1stat = cms.PSet(  ),
    saturationParameters = cms.PSet(  maxADCvalue = cms.int32( 127 ) ),
    tsFromDB = cms.bool( True ),
    samplesToAdd = cms.int32( 4 ),
    mcOOTCorrectionCategory = cms.string( "MC" ),
    dataOOTCorrectionName = cms.string( "" ),
    puCorrMethod = cms.int32( 0 ),
    correctionPhaseNS = cms.double( 13.0 ),
    HFInWindowStat = cms.PSet(  ),
    digiLabel = cms.InputTag( "hltHcalDigis" ),
    setHSCPFlags = cms.bool( False ),
    firstAuxTS = cms.int32( 4 ),
    digistat = cms.PSet(  ),
    hfTimingTrustParameters = cms.PSet(  ),
    PETstat = cms.PSet(  ),
    setSaturationFlags = cms.bool( False ),
    setNegativeFlags = cms.bool( False ),
    useLeakCorrection = cms.bool( False ),
    setTimingTrustFlags = cms.bool( False ),
    S8S1stat = cms.PSet(  ),
    correctForPhaseContainment = cms.bool( True ),
    correctForTimeslew = cms.bool( True ),
    setNoiseFlags = cms.bool( False ),
    correctTiming = cms.bool( False ),
    setPulseShapeFlags = cms.bool( False ),
    Subdetector = cms.string( "HO" ),
    dataOOTCorrectionCategory = cms.string( "Data" ),
    dropZSmarkedPassed = cms.bool( True ),
    recoParamsFromDB = cms.bool( True ),
    firstSample = cms.int32( 4 ),
    noiseHPD = cms.double( 1.0 ),
    pulseJitter = cms.double( 1.0 ),
    pedSigmaSiPM = cms.double( 6.5E-4 ),
    timeMin = cms.double( -15.0 ),
    setTimingShapedCutsFlags = cms.bool( False ),
    applyPulseJitter = cms.bool( False ),
    applyTimeSlew = cms.bool( True ),
    applyTimeConstraint = cms.bool( True ),
    timingshapedcutsParameters = cms.PSet(  ),
    ts4chi2 = cms.vdouble( 15.0, 15.0 ),
    ts4Min = cms.double( 5.0 ),
    pulseShapeParameters = cms.PSet(  ),
    timeSigmaSiPM = cms.double( 2.5 ),
    applyPedConstraint = cms.bool( True ),
    ts4Max = cms.vdouble( 100.0, 45000.0 ),
    noiseSiPM = cms.double( 1.0 ),
    meanTime = cms.double( -2.5 ),
    flagParameters = cms.PSet(  ),
    pedSigmaHPD = cms.double( 0.5 ),
    fitTimes = cms.int32( 1 ),
    timeMax = cms.double( 10.0 ),
    timeSigmaHPD = cms.double( 5.0 ),
    meanPed = cms.double( 0.0 ),
    hscpParameters = cms.PSet(  )
)
process.hltTowerMakerForAll = cms.EDProducer( "CaloTowersCreator",
    EBSumThreshold = cms.double( 0.2 ),
    MomHBDepth = cms.double( 0.2 ),
    UseEtEBTreshold = cms.bool( False ),
    hfInput = cms.InputTag( "hltHfreco" ),
    AllowMissingInputs = cms.bool( False ),
    MomEEDepth = cms.double( 0.0 ),
    EESumThreshold = cms.double( 0.45 ),
    HBGrid = cms.vdouble(  ),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32( 9999 ),
    HBThreshold = cms.double( 0.7 ),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(  ),
    UseEcalRecoveredHits = cms.bool( False ),
    MomConstrMethod = cms.int32( 1 ),
    MomHEDepth = cms.double( 0.4 ),
    HcalThreshold = cms.double( -1000.0 ),
    HF2Weights = cms.vdouble(  ),
    HOWeights = cms.vdouble(  ),
    EEGrid = cms.vdouble(  ),
    UseSymEBTreshold = cms.bool( False ),
    EEWeights = cms.vdouble(  ),
    EEWeight = cms.double( 1.0 ),
    UseHO = cms.bool( False ),
    HBWeights = cms.vdouble(  ),
    HF1Weight = cms.double( 1.0 ),
    HF2Grid = cms.vdouble(  ),
    HEDWeights = cms.vdouble(  ),
    EBWeight = cms.double( 1.0 ),
    HF1Grid = cms.vdouble(  ),
    EBWeights = cms.vdouble(  ),
    HOWeight = cms.double( 1.0E-99 ),
    HESWeight = cms.double( 1.0 ),
    HESThreshold = cms.double( 0.8 ),
    hbheInput = cms.InputTag( "hltHbhereco" ),
    HF2Weight = cms.double( 1.0 ),
    HF2Threshold = cms.double( 0.85 ),
    HcalAcceptSeverityLevel = cms.uint32( 9 ),
    EEThreshold = cms.double( 0.3 ),
    HOThresholdPlus1 = cms.double( 3.5 ),
    HOThresholdPlus2 = cms.double( 3.5 ),
    HF1Weights = cms.vdouble(  ),
    hoInput = cms.InputTag( "hltHoreco" ),
    HF1Threshold = cms.double( 0.5 ),
    HcalPhase = cms.int32( 0 ),
    HESGrid = cms.vdouble(  ),
    EcutTower = cms.double( -1000.0 ),
    UseRejectedRecoveredEcalHits = cms.bool( False ),
    UseEtEETreshold = cms.bool( False ),
    HESWeights = cms.vdouble(  ),
    HOThresholdMinus1 = cms.double( 3.5 ),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring( 'kTime',
      'kWeird',
      'kBad' ),
    HEDWeight = cms.double( 1.0 ),
    UseSymEETreshold = cms.bool( False ),
    HEDThreshold = cms.double( 0.8 ),
    UseRejectedHitsOnly = cms.bool( False ),
    EBThreshold = cms.double( 0.07 ),
    HEDGrid = cms.vdouble(  ),
    UseHcalRecoveredHits = cms.bool( False ),
    HOThresholdMinus2 = cms.double( 3.5 ),
    HOThreshold0 = cms.double( 3.5 ),
    ecalInputs = cms.VInputTag( 'hltEcalRecHit:EcalRecHitsEB','hltEcalRecHit:EcalRecHitsEE' ),
    UseRejectedRecoveredHcalHits = cms.bool( False ),
    MomEBDepth = cms.double( 0.3 ),
    HBWeight = cms.double( 1.0 ),
    HOGrid = cms.vdouble(  ),
    EBGrid = cms.vdouble(  )
)
process.hltHcalDigisL1EGSeeded = cms.EDProducer( "HLTHcalDigisInRegionsProducer",
    inputCollTags = cms.VInputTag( 'hltHcalDigis' ),
    etaPhiRegions = cms.VPSet( 
      cms.PSet(  inputColl = cms.InputTag( "hltEgammaCandidates" ),
        type = cms.string( "RecoEcalCandidate" ),
        minEt = cms.double( 5.0 ),
        maxDeltaR = cms.double( 0.4 ),
        maxDPhi = cms.double( 0.0 ),
        maxDEta = cms.double( 0.0 ),
        maxEt = cms.double( -1.0 )
      )
    ),
    outputProductNames = cms.vstring( '' )
)
process.hltHbhePhase1RecoMethod2L1EGSeeded = cms.EDProducer( "HBHEPhase1Reconstructor",
    tsFromDB = cms.bool( False ),
    setPulseShapeFlagsQIE8 = cms.bool( True ),
    digiLabelQIE11 = cms.InputTag( "hltHcalDigis" ),
    saveDroppedInfos = cms.bool( False ),
    setNoiseFlagsQIE8 = cms.bool( True ),
    saveEffectivePedestal = cms.bool( False ),
    digiLabelQIE8 = cms.InputTag( "hltHcalDigisL1EGSeeded" ),
    sipmQTSShift = cms.int32( 0 ),
    processQIE11 = cms.bool( True ),
    pulseShapeParametersQIE11 = cms.PSet(  ),
    algoConfigClass = cms.string( "" ),
    saveInfos = cms.bool( False ),
    flagParametersQIE11 = cms.PSet(  ),
    makeRecHits = cms.bool( True ),
    pulseShapeParametersQIE8 = cms.PSet( 
      UseDualFit = cms.bool( True ),
      LinearCut = cms.vdouble( -3.0, -0.054, -0.054 ),
      TriangleIgnoreSlow = cms.bool( False ),
      TS4TS5LowerThreshold = cms.vdouble( 100.0, 120.0, 160.0, 200.0, 300.0, 500.0 ),
      LinearThreshold = cms.vdouble( 20.0, 100.0, 100000.0 ),
      RightSlopeSmallCut = cms.vdouble( 1.08, 1.16, 1.16 ),
      TS4TS5UpperThreshold = cms.vdouble( 70.0, 90.0, 100.0, 400.0 ),
      TS3TS4ChargeThreshold = cms.double( 70.0 ),
      R45PlusOneRange = cms.double( 0.2 ),
      TS4TS5LowerCut = cms.vdouble( -1.0, -0.7, -0.5, -0.4, -0.3, 0.1 ),
      RightSlopeThreshold = cms.vdouble( 250.0, 400.0, 100000.0 ),
      TS3TS4UpperChargeThreshold = cms.double( 20.0 ),
      MinimumChargeThreshold = cms.double( 20.0 ),
      RightSlopeCut = cms.vdouble( 5.0, 4.15, 4.15 ),
      RMS8MaxThreshold = cms.vdouble( 20.0, 100.0, 100000.0 ),
      MinimumTS4TS5Threshold = cms.double( 100.0 ),
      LeftSlopeThreshold = cms.vdouble( 250.0, 500.0, 100000.0 ),
      TS5TS6ChargeThreshold = cms.double( 70.0 ),
      TrianglePeakTS = cms.uint32( 10000 ),
      TS5TS6UpperChargeThreshold = cms.double( 20.0 ),
      RightSlopeSmallThreshold = cms.vdouble( 150.0, 200.0, 100000.0 ),
      RMS8MaxCut = cms.vdouble( -13.5, -11.5, -11.5 ),
      TS4TS5ChargeThreshold = cms.double( 70.0 ),
      R45MinusOneRange = cms.double( 0.2 ),
      LeftSlopeCut = cms.vdouble( 5.0, 2.55, 2.55 ),
      TS4TS5UpperCut = cms.vdouble( 1.0, 0.8, 0.75, 0.72 )
    ),
    flagParametersQIE8 = cms.PSet( 
      hitEnergyMinimum = cms.double( 1.0 ),
      pulseShapeParameterSets = cms.VPSet( 
        cms.PSet(  pulseShapeParameters = cms.vdouble( 0.0, 100.0, -50.0, 0.0, -15.0, 0.15 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( 100.0, 2000.0, -50.0, 0.0, -5.0, 0.05 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( 2000.0, 1000000.0, -50.0, 0.0, 95.0, 0.0 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( -1000000.0, 1000000.0, 45.0, 0.1, 1000000.0, 0.0 )        )
      ),
      nominalPedestal = cms.double( 3.0 ),
      hitMultiplicityThreshold = cms.int32( 17 )
    ),
    setNegativeFlagsQIE8 = cms.bool( False ),
    setNegativeFlagsQIE11 = cms.bool( False ),
    processQIE8 = cms.bool( True ),
    algorithm = cms.PSet( 
      meanTime = cms.double( 0.0 ),
      pedSigmaHPD = cms.double( 0.5 ),
      pedSigmaSiPM = cms.double( 6.5E-4 ),
      timeSigmaSiPM = cms.double( 2.5 ),
      applyTimeSlew = cms.bool( True ),
      timeSlewParsType = cms.int32( 3 ),
      ts4Max = cms.vdouble( 100.0, 45000.0 ),
      samplesToAdd = cms.int32( 2 ),
      applyTimeConstraint = cms.bool( True ),
      timeSigmaHPD = cms.double( 5.0 ),
      correctForPhaseContainment = cms.bool( True ),
      pedestalUpperLimit = cms.double( 2.7 ),
      respCorrM3 = cms.double( 1.0 ),
      pulseJitter = cms.double( 1.0 ),
      applyPedConstraint = cms.bool( True ),
      fitTimes = cms.int32( 1 ),
      applyTimeSlewM3 = cms.bool( True ),
      meanPed = cms.double( 0.0 ),
      noiseSiPM = cms.double( 1.0 ),
      ts4Min = cms.double( 0.0 ),
      applyPulseJitter = cms.bool( False ),
      noiseHPD = cms.double( 1.0 ),
      useM2 = cms.bool( True ),
      timeMin = cms.double( -12.5 ),
      useM3 = cms.bool( False ),
      tdcTimeShift = cms.double( 0.0 ),
      correctionPhaseNS = cms.double( 6.0 ),
      firstSampleShift = cms.int32( 0 ),
      timeSlewPars = cms.vdouble( 12.2999, -2.19142, 0.0, 12.2999, -2.19142, 0.0, 12.2999, -2.19142, 0.0 ),
      ts4chi2 = cms.vdouble( 15.0, 15.0 ),
      timeMax = cms.double( 12.5 ),
      Class = cms.string( "SimpleHBHEPhase1Algo" )
    ),
    setLegacyFlagsQIE8 = cms.bool( False ),
    sipmQNTStoSum = cms.int32( 3 ),
    setPulseShapeFlagsQIE11 = cms.bool( False ),
    setLegacyFlagsQIE11 = cms.bool( False ),
    setNoiseFlagsQIE11 = cms.bool( False ),
    dropZSmarkedPassed = cms.bool( True ),
    recoParamsFromDB = cms.bool( True )
)
process.hltHbherecoMethod2L1EGSeeded = cms.EDProducer( "HBHEPlan1Combiner",
    hbheInput = cms.InputTag( "hltHbhePhase1RecoMethod2L1EGSeeded" ),
    usePlan1Mode = cms.bool( True ),
    ignorePlan1Topology = cms.bool( False ),
    algorithm = cms.PSet(  Class = cms.string( "SimplePlan1RechitCombiner" ) )
)
process.hltTowerMakerMethod2L1EGSeeded = cms.EDProducer( "CaloTowersCreator",
    EBSumThreshold = cms.double( 0.2 ),
    MomHBDepth = cms.double( 0.2 ),
    UseEtEBTreshold = cms.bool( False ),
    hfInput = cms.InputTag( "hltHfreco" ),
    AllowMissingInputs = cms.bool( False ),
    MomEEDepth = cms.double( 0.0 ),
    EESumThreshold = cms.double( 0.45 ),
    HBGrid = cms.vdouble(  ),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32( 9999 ),
    HBThreshold = cms.double( 0.7 ),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(  ),
    UseEcalRecoveredHits = cms.bool( False ),
    MomConstrMethod = cms.int32( 1 ),
    MomHEDepth = cms.double( 0.4 ),
    HcalThreshold = cms.double( -1000.0 ),
    HF2Weights = cms.vdouble(  ),
    HOWeights = cms.vdouble(  ),
    EEGrid = cms.vdouble(  ),
    UseSymEBTreshold = cms.bool( False ),
    EEWeights = cms.vdouble(  ),
    EEWeight = cms.double( 1.0 ),
    UseHO = cms.bool( False ),
    HBWeights = cms.vdouble(  ),
    HF1Weight = cms.double( 1.0 ),
    HF2Grid = cms.vdouble(  ),
    HEDWeights = cms.vdouble(  ),
    EBWeight = cms.double( 1.0 ),
    HF1Grid = cms.vdouble(  ),
    EBWeights = cms.vdouble(  ),
    HOWeight = cms.double( 1.0 ),
    HESWeight = cms.double( 1.0 ),
    HESThreshold = cms.double( 0.8 ),
    hbheInput = cms.InputTag( "hltHbherecoMethod2L1EGSeeded" ),
    HF2Weight = cms.double( 1.0 ),
    HF2Threshold = cms.double( 0.85 ),
    HcalAcceptSeverityLevel = cms.uint32( 9 ),
    EEThreshold = cms.double( 0.3 ),
    HOThresholdPlus1 = cms.double( 3.5 ),
    HOThresholdPlus2 = cms.double( 3.5 ),
    HF1Weights = cms.vdouble(  ),
    hoInput = cms.InputTag( "hltHoreco" ),
    HF1Threshold = cms.double( 0.5 ),
    HcalPhase = cms.int32( 0 ),
    HESGrid = cms.vdouble(  ),
    EcutTower = cms.double( -1000.0 ),
    UseRejectedRecoveredEcalHits = cms.bool( False ),
    UseEtEETreshold = cms.bool( False ),
    HESWeights = cms.vdouble(  ),
    HOThresholdMinus1 = cms.double( 3.5 ),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring( 'kTime',
      'kWeird',
      'kBad' ),
    HEDWeight = cms.double( 1.0 ),
    UseSymEETreshold = cms.bool( False ),
    HEDThreshold = cms.double( 0.8 ),
    UseRejectedHitsOnly = cms.bool( False ),
    EBThreshold = cms.double( 0.07 ),
    HEDGrid = cms.vdouble(  ),
    UseHcalRecoveredHits = cms.bool( False ),
    HOThresholdMinus2 = cms.double( 3.5 ),
    HOThreshold0 = cms.double( 3.5 ),
    ecalInputs = cms.VInputTag( 'hltEcalRecHit:EcalRecHitsEB','hltEcalRecHit:EcalRecHitsEE' ),
    UseRejectedRecoveredHcalHits = cms.bool( False ),
    MomEBDepth = cms.double( 0.3 ),
    HBWeight = cms.double( 1.0 ),
    HOGrid = cms.vdouble(  ),
    EBGrid = cms.vdouble(  )
)
process.hltFixedGridRhoFastjetAllCaloForMuons = cms.EDProducer( "FixedGridRhoProducerFastjet",
    gridSpacing = cms.double( 0.55 ),
    maxRapidity = cms.double( 2.5 ),
    pfCandidatesTag = cms.InputTag( "hltTowerMakerForAll" )
)
process.hltEgammaHoverE = cms.EDProducer( "EgammaHLTBcHcalIsolationProducersRegional",
    effectiveAreas = cms.vdouble( 0.105, 0.17 ),
    doRhoCorrection = cms.bool( False ),
    outerCone = cms.double( 0.14 ),
    caloTowerProducer = cms.InputTag( "hltTowerMakerMethod2L1EGSeeded" ),
    innerCone = cms.double( 0.0 ),
    useSingleTower = cms.bool( False ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    depth = cms.int32( -1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    rhoMax = cms.double( 9.9999999E7 ),
    etMin = cms.double( 0.0 ),
    rhoScale = cms.double( 1.0 ),
    doEtSum = cms.bool( False )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegHEFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.13 ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    thrOverEEB = cms.vdouble( 0.13 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegClusterShapeFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltEgammaEcalPFClusterIso = cms.EDProducer( "EgammaHLTEcalPFClusterIsolationProducer",
    effectiveAreas = cms.vdouble( 0.29, 0.21 ),
    doRhoCorrection = cms.bool( False ),
    etaStripBarrel = cms.double( 0.0 ),
    energyEndcap = cms.double( 0.0 ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    pfClusterProducer = cms.InputTag( "hltParticleFlowClusterECALL1Seeded" ),
    etaStripEndcap = cms.double( 0.0 ),
    drVetoBarrel = cms.double( 0.0 ),
    drMax = cms.double( 0.3 ),
    energyBarrel = cms.double( 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    drVetoEndcap = cms.double( 0.0 ),
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegEcalIsoFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.29, 0.21 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( True ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.5 ),
    varTag = cms.InputTag( "hltEgammaEcalPFClusterIso" ),
    thrOverEEB = cms.vdouble( 0.5 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegHEFilter" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltRegionalTowerForEgamma = cms.EDProducer( "EgammaHLTCaloTowerProducer",
    L1NonIsoCand = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    EMin = cms.double( 0.8 ),
    EtMin = cms.double( 0.5 ),
    L1IsoCand = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    useTowersInCone = cms.double( 0.8 ),
    towerCollection = cms.InputTag( "hltTowerMakerMethod2L1EGSeeded" )
)
process.hltParticleFlowRecHitHBHEForEgamma = cms.EDProducer( "PFRecHitProducer",
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( "hltHbherecoMethod2L1EGSeeded" ),
        name = cms.string( "PFHBHERecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  threshold = cms.double( 0.8 ),
            name = cms.string( "PFRecHitQTestThreshold" )
          ),
          cms.PSet(  flags = cms.vstring( 'Standard' ),
            cleaningThresholds = cms.vdouble( 0.0 ),
            name = cms.string( "PFRecHitQTestHCALChannel" ),
            maxSeverities = cms.vint32( 11 )
          )
        )
      )
    ),
    navigator = cms.PSet( 
      name = cms.string( "PFRecHitHCALNavigator" ),
      sigmaCut = cms.double( 4.0 ),
      timeResolutionCalc = cms.PSet( 
        corrTermLowE = cms.double( 0.0 ),
        threshLowE = cms.double( 2.0 ),
        noiseTerm = cms.double( 8.64 ),
        constantTermLowE = cms.double( 6.0 ),
        noiseTermLowE = cms.double( 0.0 ),
        threshHighE = cms.double( 8.0 ),
        constantTerm = cms.double( 1.92 )
      )
    )
)
process.hltParticleFlowClusterHBHEForEgamma = cms.EDProducer( "PFClusterProducer",
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 5 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.8 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      minChi2Prob = cms.double( 0.0 ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.8 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.8 ),
          detector = cms.string( "HCAL_BARREL1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.8 ),
          detector = cms.string( "HCAL_ENDCAP" )
        )
      ),
      maxNSigmaTime = cms.double( 10.0 ),
      showerSigma = cms.double( 10.0 ),
      timeSigmaEE = cms.double( 10.0 ),
      clusterTimeResFromSeed = cms.bool( False ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True ),
      timeResolutionCalcBarrel = cms.PSet( 
        corrTermLowE = cms.double( 0.0 ),
        threshLowE = cms.double( 6.0 ),
        noiseTerm = cms.double( 21.86 ),
        constantTermLowE = cms.double( 4.24 ),
        noiseTermLowE = cms.double( 8.0 ),
        threshHighE = cms.double( 15.0 ),
        constantTerm = cms.double( 2.82 )
      ),
      timeResolutionCalcEndcap = cms.PSet( 
        corrTermLowE = cms.double( 0.0 ),
        threshLowE = cms.double( 6.0 ),
        noiseTerm = cms.double( 21.86 ),
        constantTermLowE = cms.double( 4.24 ),
        noiseTermLowE = cms.double( 8.0 ),
        threshHighE = cms.double( 15.0 ),
        constantTerm = cms.double( 2.82 )
      ),
      timeSigmaEB = cms.double( 10.0 )
    ),
    positionReCalc = cms.PSet(  ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.8 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "HCAL_BARREL1" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.8 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "HCAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( True )
    ),
    energyCorrector = cms.PSet(  ),
    recHitCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.0 ),
          detector = cms.string( "HCAL_BARREL1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.1 ),
          detector = cms.string( "HCAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 4 )
    ),
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitHBHEForEgamma" )
)
process.hltParticleFlowClusterHCALForEgamma = cms.EDProducer( "PFMultiDepthClusterProducer",
    pfClusterBuilder = cms.PSet( 
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.8 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      algoName = cms.string( "PFMultiDepthClusterizer" ),
      nSigmaPhi = cms.double( 2.0 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      nSigmaEta = cms.double( 2.0 )
    ),
    energyCorrector = cms.PSet(  ),
    positionReCalc = cms.PSet(  ),
    clustersSource = cms.InputTag( "hltParticleFlowClusterHBHEForEgamma" )
)
process.hltEgammaHcalPFClusterIso = cms.EDProducer( "EgammaHLTHcalPFClusterIsolationProducer",
    effectiveAreas = cms.vdouble( 0.2, 0.25 ),
    useHF = cms.bool( False ),
    useEt = cms.bool( True ),
    etaStripBarrel = cms.double( 0.0 ),
    pfClusterProducerHFHAD = cms.InputTag( "" ),
    energyEndcap = cms.double( 0.0 ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    etaStripEndcap = cms.double( 0.0 ),
    drVetoBarrel = cms.double( 0.0 ),
    pfClusterProducerHCAL = cms.InputTag( "hltParticleFlowClusterHCALForEgamma" ),
    drMax = cms.double( 0.3 ),
    doRhoCorrection = cms.bool( False ),
    energyBarrel = cms.double( 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    drVetoEndcap = cms.double( 0.0 ),
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    rhoMax = cms.double( 9.9999999E7 ),
    pfClusterProducerHFEM = cms.InputTag( "" ),
    rhoScale = cms.double( 1.0 )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegHcalIsoFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.2, 0.25 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( True ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.3 ),
    varTag = cms.InputTag( "hltEgammaHcalPFClusterIso" ),
    thrOverEEB = cms.vdouble( 0.3 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegEcalIsoFilter" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltPixelLayerPairs = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2',
      'BPix1+BPix3',
      'BPix1+BPix4',
      'BPix2+BPix3',
      'BPix2+BPix4',
      'BPix3+BPix4',
      'FPix1_pos+FPix2_pos',
      'FPix1_pos+FPix3_pos',
      'FPix2_pos+FPix3_pos',
      'BPix1+FPix1_pos',
      'BPix1+FPix2_pos',
      'BPix1+FPix3_pos',
      'BPix2+FPix1_pos',
      'BPix2+FPix2_pos',
      'BPix2+FPix3_pos',
      'BPix3+FPix1_pos',
      'BPix3+FPix2_pos',
      'BPix3+FPix3_pos',
      'BPix4+FPix1_pos',
      'BPix4+FPix2_pos',
      'BPix4+FPix3_pos',
      'FPix1_neg+FPix2_neg',
      'FPix1_neg+FPix3_neg',
      'FPix2_neg+FPix3_neg',
      'BPix1+FPix1_neg',
      'BPix1+FPix2_neg',
      'BPix1+FPix3_neg',
      'BPix2+FPix1_neg',
      'BPix2+FPix2_neg',
      'BPix2+FPix3_neg',
      'BPix3+FPix1_neg',
      'BPix3+FPix2_neg',
      'BPix3+FPix3_neg',
      'BPix4+FPix1_neg',
      'BPix4+FPix2_neg',
      'BPix4+FPix3_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltPixelLayerTriplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3',
      'BPix2+BPix3+BPix4',
      'BPix1+BPix3+BPix4',
      'BPix1+BPix2+BPix4',
      'BPix2+BPix3+FPix1_pos',
      'BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos',
      'BPix1+BPix2+FPix1_neg',
      'BPix2+FPix1_pos+FPix2_pos',
      'BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos',
      'BPix1+FPix1_neg+FPix2_neg',
      'FPix1_pos+FPix2_pos+FPix3_pos',
      'FPix1_neg+FPix2_neg+FPix3_neg',
      'BPix1+BPix3+FPix1_pos',
      'BPix1+BPix2+FPix2_pos',
      'BPix1+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix2_neg',
      'BPix1+FPix2_neg+FPix3_neg',
      'BPix1+FPix1_neg+FPix3_neg',
      'BPix1+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_pos+FPix3_pos' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltEgammaSuperClustersToPixelMatch = cms.EDProducer( "EgammaHLTFilteredSuperClusterProducer",
    cands = cms.InputTag( "hltEgammaCandidates" ),
    cuts = cms.VPSet( 
      cms.PSet(  endcapCut = cms.PSet( 
  useEt = cms.bool( False ),
  cutOverE = cms.double( 0.2 )
),
        var = cms.InputTag( "hltEgammaHoverE" ),
        barrelCut = cms.PSet( 
          useEt = cms.bool( False ),
          cutOverE = cms.double( 0.2 )
        )
      )
    )
)
process.hltEleSeedsTrackingRegions = cms.EDProducer( "TrackingRegionsFromSuperClustersEDProducer",
    RegionPSet = cms.PSet( 
      minBSDeltaZ = cms.double( 0.0 ),
      useZInVertex = cms.bool( False ),
      vertices = cms.InputTag( "" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      useZInBeamspot = cms.bool( False ),
      ptMin = cms.double( 1.5 ),
      deltaEtaRegion = cms.double( 0.1 ),
      nrSigmaForBSDeltaZ = cms.double( 4.0 ),
      originHalfLength = cms.double( 12.5 ),
      measurementTrackerEvent = cms.InputTag( "" ),
      originRadius = cms.double( 0.2 ),
      precise = cms.bool( True ),
      superClusters = cms.VInputTag( 'hltEgammaSuperClustersToPixelMatch' ),
      whereToUseMeasTracker = cms.string( "kNever" ),
      deltaPhiRegion = cms.double( 0.4 ),
      defaultZ = cms.double( 0.0 )
    )
)
process.hltElePixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltEleSeedsTrackingRegions" ),
    layerPairs = cms.vuint32( 0 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltPixelLayerPairs" )
)
process.hltElePixelHitDoubletsForTriplets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltEleSeedsTrackingRegions" ),
    layerPairs = cms.vuint32( 0, 1 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltPixelLayerTriplets" )
)
process.hltElePixelHitTriplets = cms.EDProducer( "CAHitTripletEDProducer",
    CAHardPtCut = cms.double( 0.3 ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltElePixelHitDoubletsForTriplets" ),
    CAThetaCut = cms.double( 0.004 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 6.0 ),
      value1 = cms.double( 100.0 ),
      pt1 = cms.double( 0.8 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 8.0 )
    ),
    CAPhiCut = cms.double( 0.1 ),
    useBendingCorrection = cms.bool( True )
)
process.hltElePixelSeedsDoublets = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltElePixelHitDoublets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltElePixelSeedsTriplets = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltElePixelHitTriplets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltElePixelSeedsCombined = cms.EDProducer( "SeedCombiner",
    seedCollections = cms.VInputTag( 'hltElePixelSeedsDoublets','hltElePixelSeedsTriplets' )
)
process.hltEgammaElectronPixelSeeds = cms.EDProducer( "ElectronNHitSeedProducer",
    matcherConfig = cms.PSet( 
      detLayerGeom = cms.string( "hltESPGlobalDetLayerGeometry" ),
      navSchool = cms.string( "SimpleNavigationSchool" ),
      useRecoVertex = cms.bool( False ),
      minNrHits = cms.vuint32( 2, 3 ),
      matchingCuts = cms.VPSet( 
        cms.PSet(  dPhiMaxHighEt = cms.vdouble( 0.05 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 9999.0 ),
          dRZMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxHighEtThres = cms.vdouble( 20.0 ),
          dRZMaxHighEtThres = cms.vdouble( 0.0 )
        ),
        cms.PSet(  etaBins = cms.vdouble(  ),
          dPhiMaxHighEt = cms.vdouble( 0.003 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 0.05 ),
          dRZMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxHighEtThres = cms.vdouble( 0.0 ),
          dRZMaxHighEtThres = cms.vdouble( 30.0 )
        ),
        cms.PSet(  etaBins = cms.vdouble(  ),
          dPhiMaxHighEt = cms.vdouble( 0.003 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 0.05 ),
          dRZMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxHighEtThres = cms.vdouble( 0.0 ),
          dRZMaxHighEtThres = cms.vdouble( 30.0 )
        )
      ),
      minNrHitsValidLayerBins = cms.vint32( 4 )
    ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    measTkEvt = cms.InputTag( "hltSiStripClusters" ),
    vertices = cms.InputTag( "" ),
    superClusters = cms.VInputTag( 'hltEgammaSuperClustersToPixelMatch' ),
    initialSeeds = cms.InputTag( "hltElePixelSeedsCombined" )
)
process.hltEgammaPixelMatchVars = cms.EDProducer( "EgammaHLTPixelMatchVarProducer",
    productsToWrite = cms.int32( 0 ),
    dRZ2SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00299, 2.99E-4, -4.13E-6, 0.00191 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.248, -0.329, 0.148, -0.0222 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol3" )
  )
) ),
    pixelSeedsProducer = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    dPhi2SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 1.3E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.6 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 4.5E-4, -1.99E-4 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.9 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 7.94E-5 ),
    xMin = cms.double( 1.9 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  )
) ),
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    dPhi1SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00112, 7.52E-4, -0.00122, 0.00109 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00222, 1.96E-4, -2.03E-4, 4.47E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 3 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00236, 6.91E-4, 1.99E-4, 4.16E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00823, -0.0029 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 2.0 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00282 ),
    xMin = cms.double( 2.0 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.010838, -0.00345 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 2.0 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.0043 ),
    xMin = cms.double( 2.0 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 3 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.0208, -0.0125, 0.00231 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol2" )
  )
) )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegPixelMatchFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    s_a_rF = cms.double( 0.04 ),
    saveTags = cms.bool( True ),
    s_a_phi1B = cms.double( 0.0069 ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi1I = cms.double( 0.0088 ),
    pixelVeto = cms.bool( False ),
    s2_threshold = cms.double( 0.4 ),
    s_a_rI = cms.double( 0.027 ),
    npixelmatchcut = cms.double( 1.0 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    useS = cms.bool( False ),
    candTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegHcalIsoFilter" ),
    ncandcut = cms.int32( 1 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    s_a_zB = cms.double( 0.012 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_phi2I = cms.double( 7.0E-4 )
)
process.hltEgammaCkfTrackCandidatesForGSF = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    cleanTrajectoryAfterInOut = cms.bool( True ),
    useHitsSplitting = cms.bool( True ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( True ),
    maxNSeeds = cms.uint32( 1000000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTrajectoryBuilderForGsfElectrons" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltEgammaGsfTracks = cms.EDProducer( "GsfTrackProducer",
    src = cms.InputTag( "hltEgammaCkfTrackCandidatesForGSF" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    producer = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    Fitter = cms.string( "hltESPGsfElectronFittingSmoother" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "hltESPMeasurementTracker" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryInEvent = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "gsf" ),
    Propagator = cms.string( "hltESPFwdElectronPropagator" )
)
process.hltEgammaGsfElectrons = cms.EDProducer( "EgammaHLTPixelMatchElectronProducers",
    BSProducer = cms.InputTag( "hltOnlineBeamSpot" ),
    UseGsfTracks = cms.bool( True ),
    TrackProducer = cms.InputTag( "" ),
    GsfTrackProducer = cms.InputTag( "hltEgammaGsfTracks" )
)
process.hltEgammaGsfTrackVars = cms.EDProducer( "EgammaHLTGsfTrackVarProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    beamSpotProducer = cms.InputTag( "hltOnlineBeamSpot" ),
    upperTrackNrToRemoveCut = cms.int32( 9999 ),
    lowerTrackNrToRemoveCut = cms.int32( -1 ),
    inputCollection = cms.InputTag( "hltEgammaGsfTracks" )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegOneOEMinusOneOPFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 999999.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','OneOESuperMinusOneOP' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 999999.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegPixelMatchFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegDetaFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.015 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','DetaSeed' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.01 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegOneOEMinusOneOPFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegDphiFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.1 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','Dphi' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.07 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegDetaFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltElectronsVertex = cms.EDProducer( "VertexFromTrackProducer",
    verbose = cms.untracked.bool( False ),
    useTriggerFilterElectrons = cms.bool( False ),
    beamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
    isRecoCandidate = cms.bool( True ),
    trackLabel = cms.InputTag( "hltEgammaGsfElectrons" ),
    useTriggerFilterMuons = cms.bool( False ),
    useBeamSpot = cms.bool( True ),
    vertexLabel = cms.InputTag( "None" ),
    triggerFilterElectronsSrc = cms.InputTag( "None" ),
    triggerFilterMuonsSrc = cms.InputTag( "None" ),
    useVertex = cms.bool( False )
)
process.hltPixelTracksElectronsFilter = cms.EDProducer( "PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double( 1000.0 ),
    nSigmaTipMaxTolerance = cms.double( 0.0 ),
    ptMin = cms.double( 0.1 ),
    nSigmaInvPtTolerance = cms.double( 0.0 ),
    tipMax = cms.double( 1.0 )
)
process.hltPixelTracksElectronsFitter = cms.EDProducer( "PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool( False ),
    scaleFactor = cms.double( 0.65 )
)
process.hltPixelTracksTrackingRegionsElectrons = cms.EDProducer( "GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet( 
      useFixedError = cms.bool( True ),
      nSigmaZ = cms.double( 4.0 ),
      VertexCollection = cms.InputTag( "hltElectronsVertex" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      useFoundVertices = cms.bool( True ),
      fixedError = cms.double( 0.2 ),
      sigmaZVertex = cms.double( 3.0 ),
      useFakeVertices = cms.bool( True ),
      ptMin = cms.double( 0.9 ),
      originRadius = cms.double( 0.2 ),
      precise = cms.bool( True ),
      useMultipleScattering = cms.bool( False )
    )
)
process.hltPixelTracksHitDoubletsElectrons = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltPixelTracksTrackingRegionsElectrons" ),
    layerPairs = cms.vuint32( 0 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltPixelLayerTriplets" )
)
process.hltPixelTracksHitTripletsElectrons = cms.EDProducer( "PixelTripletHLTEDProducer",
    useBending = cms.bool( True ),
    useFixedPreFiltering = cms.bool( False ),
    produceIntermediateHitTriplets = cms.bool( False ),
    maxElement = cms.uint32( 100000 ),
    SeedComparitorPSet = cms.PSet( 
      clusterShapeHitFilter = cms.string( "ClusterShapeHitFilter" ),
      ComponentName = cms.string( "LowPtClusterShapeSeedComparitor" ),
      clusterShapeCacheSrc = cms.InputTag( "hltSiPixelClustersCache" )
    ),
    extraHitRPhitolerance = cms.double( 0.06 ),
    produceSeedingHitSets = cms.bool( True ),
    doublets = cms.InputTag( "hltPixelTracksHitDoubletsElectrons" ),
    useMultScattering = cms.bool( True ),
    phiPreFiltering = cms.double( 0.3 ),
    extraHitRZtolerance = cms.double( 0.06 )
)
process.hltPixelTracksElectrons = cms.EDProducer( "PixelTrackProducer",
    Filter = cms.InputTag( "hltPixelTracksElectronsFilter" ),
    Cleaner = cms.string( "hltPixelTracksCleanerBySharedHits" ),
    passLabel = cms.string( "" ),
    Fitter = cms.InputTag( "hltPixelTracksElectronsFitter" ),
    SeedingHitSets = cms.InputTag( "hltPixelTracksHitTripletsElectrons" )
)
process.hltPixelVerticesElectrons = cms.EDProducer( "PixelVertexProducer",
    WtAverage = cms.bool( True ),
    Method2 = cms.bool( True ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparer" ) ),
    Verbosity = cms.int32( 0 ),
    UseError = cms.bool( True ),
    TrackCollection = cms.InputTag( "hltPixelTracksElectrons" ),
    PtMin = cms.double( 1.0 ),
    NTrkMin = cms.int32( 2 ),
    ZOffset = cms.double( 5.0 ),
    Finder = cms.string( "DivisiveVertexFinder" ),
    ZSeparation = cms.double( 0.05 )
)
process.hltIter0ElectronsPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    useEventsWithNoVertex = cms.bool( True ),
    originHalfLength = cms.double( 0.3 ),
    useProtoTrackKinematics = cms.bool( False ),
    usePV = cms.bool( True ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) ),
    InputVertexCollection = cms.InputTag( "hltPixelVerticesElectrons" ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    InputCollection = cms.InputTag( "hltPixelTracksElectrons" ),
    originRadius = cms.double( 0.1 )
)
process.hltIter0ElectronsCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter0ElectronsPixelSeedsFromPixelTracks" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter0ElectronsCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter0ElectronsCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIterX" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter0ElectronsTrackSelectionHighPurity = cms.EDProducer( "AnalyticalTrackSelector",
    max_d0 = cms.double( 100.0 ),
    minNumber3DLayers = cms.uint32( 0 ),
    max_lostHitFraction = cms.double( 1.0 ),
    applyAbsCutsIfNoPV = cms.bool( False ),
    qualityBit = cms.string( "highPurity" ),
    minNumberLayers = cms.uint32( 3 ),
    chi2n_par = cms.double( 0.7 ),
    useVtxError = cms.bool( False ),
    nSigmaZ = cms.double( 3.0 ),
    dz_par2 = cms.vdouble( 0.4, 4.0 ),
    applyAdaptedPVCuts = cms.bool( True ),
    min_eta = cms.double( -9999.0 ),
    dz_par1 = cms.vdouble( 0.35, 4.0 ),
    copyTrajectories = cms.untracked.bool( False ),
    vtxNumber = cms.int32( -1 ),
    max_d0NoPV = cms.double( 100.0 ),
    keepAllTracks = cms.bool( False ),
    maxNumberLostLayers = cms.uint32( 1 ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    max_relpterr = cms.double( 9999.0 ),
    copyExtras = cms.untracked.bool( True ),
    max_z0NoPV = cms.double( 100.0 ),
    vertexCut = cms.string( "tracksSize>=3" ),
    max_z0 = cms.double( 100.0 ),
    useVertices = cms.bool( True ),
    min_nhits = cms.uint32( 0 ),
    src = cms.InputTag( "hltIter0ElectronsCtfWithMaterialTracks" ),
    max_minMissHitOutOrIn = cms.int32( 99 ),
    chi2n_no1Dmod_par = cms.double( 9999.0 ),
    vertices = cms.InputTag( "hltPixelVerticesElectrons" ),
    max_eta = cms.double( 9999.0 ),
    d0_par2 = cms.vdouble( 0.4, 4.0 ),
    d0_par1 = cms.vdouble( 0.3, 4.0 ),
    res_par = cms.vdouble( 0.003, 0.001 ),
    minHitsToBypassChecks = cms.uint32( 20 )
)
process.hltIter1ElectronsClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 9.0 ),
    trajectories = cms.InputTag( "hltIter0ElectronsTrackSelectionHighPurity" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    TrackQuality = cms.string( "highPurity" )
)
process.hltIter1ElectronsMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    clustersToSkip = cms.InputTag( "hltIter1ElectronsClustersRefRemoval" ),
    OnDemand = cms.bool( False ),
    src = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter1ElectronsPixelLayerTriplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3',
      'BPix1+BPix2+FPix1_pos',
      'BPix1+BPix2+FPix1_neg',
      'BPix1+FPix1_pos+FPix2_pos',
      'BPix1+FPix1_neg+FPix2_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter1ElectronsClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter1ElectronsClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltIter1ElectronsPixelTrackingRegions = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltPixelVerticesElectrons" ),
      zErrorVetex = cms.double( 0.2 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      maxNVertices = cms.int32( 3 ),
      maxNRegions = cms.int32( 10 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 0.5 ),
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltEgammaCandidates" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "Never" ),
      originRadius = cms.double( 0.05 ),
      measurementTrackerName = cms.InputTag( "" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.5 ),
      deltaPhi = cms.double( 0.5 )
    )
)
process.hltIter1ElectronsPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False ),
    MaxNumberOfCosmicClusters = cms.uint32( 800000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    doClusterCheck = cms.bool( False ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    ClusterCollectionLabel = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter1ElectronsPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltIter1ElectronsPixelTrackingRegions" ),
    layerPairs = cms.vuint32( 0 ),
    clusterCheck = cms.InputTag( "hltIter1ElectronsPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltIter1ElectronsPixelLayerTriplets" )
)
process.hltIter1ElectronsPixelHitTriplets = cms.EDProducer( "PixelTripletHLTEDProducer",
    useBending = cms.bool( True ),
    useFixedPreFiltering = cms.bool( False ),
    produceIntermediateHitTriplets = cms.bool( False ),
    maxElement = cms.uint32( 100000 ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    produceSeedingHitSets = cms.bool( True ),
    doublets = cms.InputTag( "hltIter1ElectronsPixelHitDoublets" ),
    useMultScattering = cms.bool( True ),
    phiPreFiltering = cms.double( 0.3 ),
    extraHitRZtolerance = cms.double( 0.037 )
)
process.hltIter1ElectronsPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltIter1ElectronsPixelHitTriplets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltIter1ElectronsCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter1ElectronsPixelSeeds" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter1ElectronsMaskedMeasurementTrackerEvent" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter1ElectronsCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter1ElectronsCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter1ElectronsMaskedMeasurementTrackerEvent" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIterX" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter1ElectronsTrackSelectionHighPurityLoose = cms.EDProducer( "AnalyticalTrackSelector",
    max_d0 = cms.double( 100.0 ),
    minNumber3DLayers = cms.uint32( 0 ),
    max_lostHitFraction = cms.double( 1.0 ),
    applyAbsCutsIfNoPV = cms.bool( False ),
    qualityBit = cms.string( "highPurity" ),
    minNumberLayers = cms.uint32( 3 ),
    chi2n_par = cms.double( 0.7 ),
    useVtxError = cms.bool( False ),
    nSigmaZ = cms.double( 3.0 ),
    dz_par2 = cms.vdouble( 0.9, 3.0 ),
    applyAdaptedPVCuts = cms.bool( True ),
    min_eta = cms.double( -9999.0 ),
    dz_par1 = cms.vdouble( 0.8, 3.0 ),
    copyTrajectories = cms.untracked.bool( False ),
    vtxNumber = cms.int32( -1 ),
    max_d0NoPV = cms.double( 100.0 ),
    keepAllTracks = cms.bool( False ),
    maxNumberLostLayers = cms.uint32( 1 ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    max_relpterr = cms.double( 9999.0 ),
    copyExtras = cms.untracked.bool( True ),
    max_z0NoPV = cms.double( 100.0 ),
    vertexCut = cms.string( "tracksSize>=3" ),
    max_z0 = cms.double( 100.0 ),
    useVertices = cms.bool( True ),
    min_nhits = cms.uint32( 0 ),
    src = cms.InputTag( "hltIter1ElectronsCtfWithMaterialTracks" ),
    max_minMissHitOutOrIn = cms.int32( 99 ),
    chi2n_no1Dmod_par = cms.double( 9999.0 ),
    vertices = cms.InputTag( "hltPixelVerticesElectrons" ),
    max_eta = cms.double( 9999.0 ),
    d0_par2 = cms.vdouble( 0.9, 3.0 ),
    d0_par1 = cms.vdouble( 0.85, 3.0 ),
    res_par = cms.vdouble( 0.003, 0.001 ),
    minHitsToBypassChecks = cms.uint32( 20 )
)
process.hltIter1ElectronsTrackSelectionHighPurityTight = cms.EDProducer( "AnalyticalTrackSelector",
    max_d0 = cms.double( 100.0 ),
    minNumber3DLayers = cms.uint32( 0 ),
    max_lostHitFraction = cms.double( 1.0 ),
    applyAbsCutsIfNoPV = cms.bool( False ),
    qualityBit = cms.string( "highPurity" ),
    minNumberLayers = cms.uint32( 5 ),
    chi2n_par = cms.double( 0.4 ),
    useVtxError = cms.bool( False ),
    nSigmaZ = cms.double( 3.0 ),
    dz_par2 = cms.vdouble( 1.0, 4.0 ),
    applyAdaptedPVCuts = cms.bool( True ),
    min_eta = cms.double( -9999.0 ),
    dz_par1 = cms.vdouble( 1.0, 4.0 ),
    copyTrajectories = cms.untracked.bool( False ),
    vtxNumber = cms.int32( -1 ),
    max_d0NoPV = cms.double( 100.0 ),
    keepAllTracks = cms.bool( False ),
    maxNumberLostLayers = cms.uint32( 1 ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    max_relpterr = cms.double( 9999.0 ),
    copyExtras = cms.untracked.bool( True ),
    max_z0NoPV = cms.double( 100.0 ),
    vertexCut = cms.string( "tracksSize>=3" ),
    max_z0 = cms.double( 100.0 ),
    useVertices = cms.bool( True ),
    min_nhits = cms.uint32( 0 ),
    src = cms.InputTag( "hltIter1ElectronsCtfWithMaterialTracks" ),
    max_minMissHitOutOrIn = cms.int32( 99 ),
    chi2n_no1Dmod_par = cms.double( 9999.0 ),
    vertices = cms.InputTag( "hltPixelVerticesElectrons" ),
    max_eta = cms.double( 9999.0 ),
    d0_par2 = cms.vdouble( 1.0, 4.0 ),
    d0_par1 = cms.vdouble( 1.0, 4.0 ),
    res_par = cms.vdouble( 0.003, 0.001 ),
    minHitsToBypassChecks = cms.uint32( 20 )
)
process.hltIter1ElectronsTrackSelectionHighPurity = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter1ElectronsTrackSelectionHighPurityLoose','hltIter1ElectronsTrackSelectionHighPurityTight' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIter1ElectronsTrackSelectionHighPurityLoose','hltIter1ElectronsTrackSelectionHighPurityTight' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltIter1MergedForElectrons = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0ElectronsTrackSelectionHighPurity','hltIter1ElectronsTrackSelectionHighPurity' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIter0ElectronsTrackSelectionHighPurity','hltIter1ElectronsTrackSelectionHighPurity' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltIter2ElectronsClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 16.0 ),
    trajectories = cms.InputTag( "hltIter1ElectronsTrackSelectionHighPurity" ),
    oldClusterRemovalInfo = cms.InputTag( "hltIter1ElectronsClustersRefRemoval" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    TrackQuality = cms.string( "highPurity" )
)
process.hltIter2ElectronsMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    clustersToSkip = cms.InputTag( "hltIter2ElectronsClustersRefRemoval" ),
    OnDemand = cms.bool( False ),
    src = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter2ElectronsPixelLayerPairs = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2',
      'BPix1+BPix3',
      'BPix2+BPix3',
      'BPix1+FPix1_pos',
      'BPix1+FPix1_neg',
      'BPix1+FPix2_pos',
      'BPix1+FPix2_neg',
      'BPix2+FPix1_pos',
      'BPix2+FPix1_neg',
      'BPix2+FPix2_pos',
      'BPix2+FPix2_neg',
      'FPix1_pos+FPix2_pos',
      'FPix1_neg+FPix2_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter2ElectronsClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter2ElectronsClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltIter2ElectronsPixelTrackingRegions = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltPixelVerticesElectrons" ),
      zErrorVetex = cms.double( 0.2 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      maxNVertices = cms.int32( 3 ),
      maxNRegions = cms.int32( 10 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 1.2 ),
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltEgammaCandidates" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "Never" ),
      originRadius = cms.double( 0.05 ),
      measurementTrackerName = cms.InputTag( "" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.5 ),
      deltaPhi = cms.double( 0.5 )
    )
)
process.hltIter2ElectronsPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False ),
    MaxNumberOfCosmicClusters = cms.uint32( 800000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    doClusterCheck = cms.bool( False ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    ClusterCollectionLabel = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter2ElectronsPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltIter2ElectronsPixelTrackingRegions" ),
    layerPairs = cms.vuint32( 0 ),
    clusterCheck = cms.InputTag( "hltIter2ElectronsPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( False ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltIter2ElectronsPixelLayerPairs" )
)
process.hltIter2ElectronsPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltIter2ElectronsPixelHitDoublets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltIter2ElectronsCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter2ElectronsPixelSeeds" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter2ElectronsMaskedMeasurementTrackerEvent" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter2ElectronsCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter2ElectronsCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter2ElectronsMaskedMeasurementTrackerEvent" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIterX" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter2ElectronsTrackSelectionHighPurity = cms.EDProducer( "AnalyticalTrackSelector",
    max_d0 = cms.double( 100.0 ),
    minNumber3DLayers = cms.uint32( 0 ),
    max_lostHitFraction = cms.double( 1.0 ),
    applyAbsCutsIfNoPV = cms.bool( False ),
    qualityBit = cms.string( "highPurity" ),
    minNumberLayers = cms.uint32( 3 ),
    chi2n_par = cms.double( 0.7 ),
    useVtxError = cms.bool( False ),
    nSigmaZ = cms.double( 3.0 ),
    dz_par2 = cms.vdouble( 0.4, 4.0 ),
    applyAdaptedPVCuts = cms.bool( True ),
    min_eta = cms.double( -9999.0 ),
    dz_par1 = cms.vdouble( 0.35, 4.0 ),
    copyTrajectories = cms.untracked.bool( False ),
    vtxNumber = cms.int32( -1 ),
    max_d0NoPV = cms.double( 100.0 ),
    keepAllTracks = cms.bool( False ),
    maxNumberLostLayers = cms.uint32( 1 ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    max_relpterr = cms.double( 9999.0 ),
    copyExtras = cms.untracked.bool( True ),
    max_z0NoPV = cms.double( 100.0 ),
    vertexCut = cms.string( "tracksSize>=3" ),
    max_z0 = cms.double( 100.0 ),
    useVertices = cms.bool( True ),
    min_nhits = cms.uint32( 0 ),
    src = cms.InputTag( "hltIter2ElectronsCtfWithMaterialTracks" ),
    max_minMissHitOutOrIn = cms.int32( 99 ),
    chi2n_no1Dmod_par = cms.double( 9999.0 ),
    vertices = cms.InputTag( "hltPixelVerticesElectrons" ),
    max_eta = cms.double( 9999.0 ),
    d0_par2 = cms.vdouble( 0.4, 4.0 ),
    d0_par1 = cms.vdouble( 0.3, 4.0 ),
    res_par = cms.vdouble( 0.003, 0.001 ),
    minHitsToBypassChecks = cms.uint32( 20 )
)
process.hltIter2MergedForElectrons = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter1MergedForElectrons','hltIter2ElectronsTrackSelectionHighPurity' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIter1MergedForElectrons','hltIter2ElectronsTrackSelectionHighPurity' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltEgammaEleGsfTrackIso = cms.EDProducer( "EgammaHLTElectronTrackIsolationProducers",
    egTrkIsoStripEndcap = cms.double( 0.01 ),
    egTrkIsoVetoConeSizeBarrel = cms.double( 0.03 ),
    useGsfTrack = cms.bool( True ),
    useSCRefs = cms.bool( True ),
    trackProducer = cms.InputTag( "hltIter2MergedForElectrons" ),
    egTrkIsoStripBarrel = cms.double( 0.01 ),
    electronProducer = cms.InputTag( "hltEgammaGsfElectrons" ),
    egTrkIsoConeSize = cms.double( 0.2 ),
    egTrkIsoRSpan = cms.double( 999999.0 ),
    egTrkIsoVetoConeSizeEndcap = cms.double( 0.03 ),
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    beamSpotProducer = cms.InputTag( "hltOnlineBeamSpot" ),
    egTrkIsoPtMin = cms.double( 1.0 ),
    egTrkIsoZSpan = cms.double( 0.15 )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegTrackIsoFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.2 ),
    varTag = cms.InputTag( "hltEgammaEleGsfTrackIso" ),
    thrOverEEB = cms.vdouble( 0.2 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegDphiFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltBoolEnd = cms.EDFilter( "HLTBool",
    result = cms.bool( True )
)
process.hltL1sMu5EG23IorMu5IsoEG20IorMu7EG23IorMu7IsoEG20IorMuIso7EG23 = cms.EDFilter( "HLTL1TSeed",
    L1SeedsLogicalExpression = cms.string( "L1_Mu5_EG23 OR L1_Mu5_LooseIsoEG20 OR L1_Mu7_EG23 OR L1_Mu7_LooseIsoEG20 OR L1_Mu7_LooseIsoEG23" ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    saveTags = cms.bool( True ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVL = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    PreviousCandTag = cms.InputTag( "hltL1sMu5EG23IorMu5IsoEG20IorMu7EG23IorMu7IsoEG20IorMuIso7EG23" ),
    MinPt = cms.double( 0.0 ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL2Filtered5 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    MaxDr = cms.double( 9999.0 ),
    CutOnChambers = cms.bool( False ),
    PreviousCandTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL1Filtered0" ),
    MinPt = cms.double( 0.0 ),
    MinN = cms.int32( 0 ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.vint32( 0 ),
    MinDxySig = cms.double( -1.0 ),
    MinNchambers = cms.vint32( 0 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MaxDz = cms.double( 9999.0 ),
    MatchToPreviousCand = cms.bool( True ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    MinDr = cms.double( -1.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MinNstations = cms.vint32( 0 )
)
process.hltL1fForIterL3Mu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    PreviousCandTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL1Filtered0" ),
    MinPt = cms.double( 0.0 ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  ),
    CandTag = cms.InputTag( "hltIterL3MuonL1MuonNoL2Selector" )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL3Filtered12 = cms.EDFilter( "HLTMuonL3PreFilter",
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    saveTags = cms.bool( True ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MatchToPreviousCand = cms.bool( True ),
    MaxPtDifference = cms.double( 9999.0 ),
    MaxDr = cms.double( 2.0 ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3Mu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL1Filtered0" ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    PreviousCandTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL2Filtered5" ),
    MaxEta = cms.double( 2.5 ),
    trkMuonId = cms.uint32( 0 ),
    MinDr = cms.double( -1.0 ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    MinNmuonHits = cms.int32( 0 ),
    MinN = cms.int32( 1 ),
    MinTrackPt = cms.double( 0.0 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    minMuonHits = cms.int32( -1 ),
    minTrkHits = cms.int32( -1 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    allowedTypeMask = cms.uint32( 255 ),
    MinPt = cms.double( 12.0 ),
    MinNhits = cms.int32( 0 ),
    minMuonStations = cms.int32( 2 ),
    NSigmaPt = cms.double( 0.0 ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    L1MatchingdR = cms.double( 0.3 )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL3IsoFiltered12 = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    PreviousCandTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL3Filtered12" ),
    MinN = cms.int32( 1 ),
    IsolatorPSet = cms.PSet(  ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    DepTag = cms.VInputTag( 'hltL3MuonRelTrkIsolationVVL' )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegL1MatchFilter = cms.EDFilter( "HLTEgammaL1TMatchFilterRegional",
    doIsolated = cms.bool( False ),
    endcap_end = cms.double( 2.65 ),
    region_phi_size = cms.double( 1.044 ),
    saveTags = cms.bool( True ),
    region_eta_size_ecap = cms.double( 1.0 ),
    barrel_end = cms.double( 1.4791 ),
    l1IsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidates" ),
    l1CenJetsTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    region_eta_size = cms.double( 0.522 ),
    L1SeedFilterTag = cms.InputTag( "hltL1sMu5EG23IorMu5IsoEG20IorMu7EG23IorMu7IsoEG20IorMuIso7EG23" ),
    candNonIsolatedTag = cms.InputTag( "" ),
    l1NonIsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    ncandcut = cms.int32( 1 ),
    l1TausTag = cms.InputTag( 'hltGtStage2Digis','Tau' )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegEtFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegL1MatchFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEE = cms.double( 23.0 ),
    etcutEB = cms.double( 23.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegClusterShapeFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.013 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegEtFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegHEFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.13 ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    thrOverEEB = cms.vdouble( 0.13 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegClusterShapeFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegEcalIsoFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.29, 0.21 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( True ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.5 ),
    varTag = cms.InputTag( "hltEgammaEcalPFClusterIso" ),
    thrOverEEB = cms.vdouble( 0.5 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegHEFilter" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegHcalIsoFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.2, 0.25 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( True ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.3 ),
    varTag = cms.InputTag( "hltEgammaHcalPFClusterIso" ),
    thrOverEEB = cms.vdouble( 0.3 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegEcalIsoFilter" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegPixelMatchFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    s_a_rF = cms.double( 0.04 ),
    saveTags = cms.bool( True ),
    s_a_phi1B = cms.double( 0.0069 ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi1I = cms.double( 0.0088 ),
    pixelVeto = cms.bool( False ),
    s2_threshold = cms.double( 0.4 ),
    s_a_rI = cms.double( 0.027 ),
    npixelmatchcut = cms.double( 1.0 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    useS = cms.bool( False ),
    candTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegHcalIsoFilter" ),
    ncandcut = cms.int32( 1 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    s_a_zB = cms.double( 0.012 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_phi2I = cms.double( 7.0E-4 )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegOneOEMinusOneOPFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 999999.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','OneOESuperMinusOneOP' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 999999.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegPixelMatchFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegDetaFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.015 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','DetaSeed' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.01 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegOneOEMinusOneOPFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegDphiFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.1 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','Dphi' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.07 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegDetaFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegTrackIsoFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.2 ),
    varTag = cms.InputTag( "hltEgammaEleGsfTrackIso" ),
    thrOverEEB = cms.vdouble( 0.2 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegDphiFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltPreMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLDZ = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLDZFilter = cms.EDFilter( "HLT2PhotonMuonDZ",
    saveTags = cms.bool( True ),
    electronTag = cms.InputTag( "hltEgammaGsfElectrons" ),
    originTag2 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    MinPixHitsForDZ = cms.int32( 1 ),
    MinN = cms.int32( 1 ),
    originTag1 = cms.VInputTag( 'hltEgammaCandidates' ),
    triggerType1 = cms.int32( 81 ),
    triggerType2 = cms.int32( 83 ),
    MinDR = cms.double( -1.0 ),
    MaxDZ = cms.double( 0.2 ),
    inputTag1 = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegTrackIsoFilter" ),
    checkSC = cms.bool( False ),
    inputTag2 = cms.InputTag( "hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL3IsoFiltered12" )
)
process.hltL1sSingleMu16IorSingleMu25 = cms.EDFilter( "HLTL1TSeed",
    L1SeedsLogicalExpression = cms.string( "L1_SingleMu16 OR L1_SingleMu25" ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    saveTags = cms.bool( True ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreMu37Ele27CaloIdLMW = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltL1fL1sMu16orMu25L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMu16IorSingleMu25" ),
    MinPt = cms.double( 0.0 ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' )
)
process.hltL2fL1sMu16orMu25L1f0L2Filtered10Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    MaxDr = cms.double( 9999.0 ),
    CutOnChambers = cms.bool( False ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu16orMu25L1Filtered0" ),
    MinPt = cms.double( 0.0 ),
    MinN = cms.int32( 0 ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.vint32( 0 ),
    MinDxySig = cms.double( -1.0 ),
    MinNchambers = cms.vint32( 0 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MaxDz = cms.double( 9999.0 ),
    MatchToPreviousCand = cms.bool( True ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    MinDr = cms.double( -1.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MinNstations = cms.vint32( 0 )
)
process.hltL3fL1sMu16orMu25L1f0L2f10QL3Filtered37Q = cms.EDFilter( "HLTMuonTrkL1TFilter",
    maxNormalizedChi2 = cms.double( 20.0 ),
    saveTags = cms.bool( True ),
    maxAbsEta = cms.double( 2.5 ),
    previousCandTag = cms.InputTag( "hltL1fL1sMu16orMu25L1Filtered0" ),
    minPt = cms.double( 37.0 ),
    minN = cms.uint32( 1 ),
    inputCandCollection = cms.InputTag( "hltIterL3MuonCandidates" ),
    minMuonStations = cms.int32( 2 ),
    trkMuonId = cms.uint32( 0 ),
    requiredTypeMask = cms.uint32( 0 ),
    minMuonHits = cms.int32( -1 ),
    minTrkHits = cms.int32( -1 ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    allowedTypeMask = cms.uint32( 255 )
)
process.hltParticleFlowRecHitECALUnseeded = cms.EDProducer( "PFRecHitProducer",
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        srFlags = cms.InputTag( "hltEcalDigis" ),
        name = cms.string( "PFEBRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  thresholds = cms.vdouble
            name = cms.string( "PFRecHitQTestECALMultiThreshold" )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      ),
      cms.PSet(  src = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        srFlags = cms.InputTag( "hltEcalDigis" ),
        name = cms.string( "PFEERecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  thresholds = cms.vdouble
            name = cms.string( "PFRecHitQTestECALMultiThreshold" )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      )
    ),
    navigator = cms.PSet( 
      barrel = cms.PSet(  ),
      endcap = cms.PSet(  ),
      name = cms.string( "PFRecHitECALNavigator" )
    )
)
process.hltParticleFlowRecHitPSUnseeded = cms.EDProducer( "PFRecHitProducer",
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltEcalPreshowerRecHit','EcalRecHitsES' ),
        name = cms.string( "PFPSRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  threshold = cms.double( 7.0E-6 ),
            name = cms.string( "PFRecHitQTestThreshold" )
          )
        )
      )
    ),
    navigator = cms.PSet(  name = cms.string( "PFRecHitPreshowerNavigator" ) )
)
process.hltParticleFlowClusterPSUnseeded = cms.EDProducer( "PFClusterProducer",
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 6.0E-5 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS2" )
        )
      ),
      showerSigma = cms.double( 0.3 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet(  ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( False )
    ),
    energyCorrector = cms.PSet(  ),
    recHitCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 4 )
    ),
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitPSUnseeded" )
)
process.hltParticleFlowClusterECALUncorrectedUnseeded = cms.EDProducer( "PFClusterProducer",
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 9 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      maxIterations = cms.uint32( 50 ),
      positionCalcForConvergence = cms.PSet( 
        minAllowedNormalization = cms.double( 0.0 ),
        T0_ES = cms.double( 1.2 ),
        algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
        T0_EE = cms.double( 3.1 ),
        T0_EB = cms.double( 7.4 ),
        X0 = cms.double( 0.89 ),
        minFractionInCalc = cms.double( 0.0 ),
        W0 = cms.double( 4.2 )
      ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.08 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.3 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      showerSigma = cms.double( 1.5 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 0.0 ),
      T0_ES = cms.double( 1.2 ),
      algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
      T0_EE = cms.double( 3.1 ),
      T0_EB = cms.double( 7.4 ),
      X0 = cms.double( 0.89 ),
      minFractionInCalc = cms.double( 0.0 ),
      W0 = cms.double( 4.2 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.08 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.3 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( True )
    ),
    energyCorrector = cms.PSet(  ),
    recHitCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.15 ),
          seedingThreshold = cms.double( 0.6 ),
          detector = cms.string( "ECAL_ENDCAP" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 0.23 ),
          detector = cms.string( "ECAL_BARREL" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 8 )
    ),
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitECALUnseeded" )
)
process.hltParticleFlowClusterECALUnseeded = cms.EDProducer( "CorrectedECALPFClusterProducer",
    inputPS = cms.InputTag( "hltParticleFlowClusterPSUnseeded" ),
    minimumPSEnergy = cms.double( 0.0 ),
    energyCorrector = cms.PSet( 
      algoName = cms.string( "PFClusterEMEnergyCorrector" ),
      applyCrackCorrections = cms.bool( False )
    ),
    inputECAL = cms.InputTag( "hltParticleFlowClusterECALUncorrectedUnseeded" )
)
process.hltParticleFlowSuperClusterECALUnseeded = cms.EDProducer( "PFECALSuperClusterProducer",
    PFSuperClusterCollectionEndcap = cms.string( "hltParticleFlowSuperClusterECALEndcap" ),
    doSatelliteClusterMerge = cms.bool( False ),
    BeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    PFBasicClusterCollectionBarrel = cms.string( "hltParticleFlowBasicClusterECALBarrel" ),
    useRegression = cms.bool( True ),
    satelliteMajorityFraction = cms.double( 0.5 ),
    isOOTCollection = cms.bool( False ),
    thresh_PFClusterEndcap = cms.double( 0.5 ),
    ESAssociation = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
    PFBasicClusterCollectionPreshower = cms.string( "hltParticleFlowBasicClusterECALPreshower" ),
    use_preshower = cms.bool( True ),
    thresh_PFClusterBarrel = cms.double( 0.5 ),
    thresh_SCEt = cms.double( 4.0 ),
    etawidth_SuperClusterEndcap = cms.double( 0.04 ),
    phiwidth_SuperClusterEndcap = cms.double( 0.6 ),
    verbose = cms.untracked.bool( False ),
    useDynamicDPhiWindow = cms.bool( True ),
    PFSuperClusterCollectionBarrel = cms.string( "hltParticleFlowSuperClusterECALBarrel" ),
    regressionConfig = cms.PSet( 
      uncertaintyKeyEB = cms.string( "pfscecal_EBUncertainty_online" ),
      ecalRecHitsEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      ecalRecHitsEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      regressionKeyEE = cms.string( "pfscecal_EECorrection_online" ),
      regressionKeyEB = cms.string( "pfscecal_EBCorrection_online" ),
      uncertaintyKeyEE = cms.string( "pfscecal_EEUncertainty_online" ),
      isHLT = cms.bool( True )
    ),
    applyCrackCorrections = cms.bool( False ),
    satelliteClusterSeedThreshold = cms.double( 50.0 ),
    endcapRecHits = cms.InputTag( 'ecalRecHit','EcalRecHitsEB' ),
    etawidth_SuperClusterBarrel = cms.double( 0.04 ),
    PFBasicClusterCollectionEndcap = cms.string( "hltParticleFlowBasicClusterECALEndcap" ),
    barrelRecHits = cms.InputTag( 'ecalRecHit','EcalRecHitsEE' ),
    thresh_PFClusterSeedBarrel = cms.double( 1.0 ),
    ClusteringType = cms.string( "Mustache" ),
    EnergyWeight = cms.string( "Raw" ),
    PFClusters = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
    thresh_PFClusterSeedEndcap = cms.double( 1.0 ),
    phiwidth_SuperClusterBarrel = cms.double( 0.6 ),
    thresh_PFClusterES = cms.double( 0.5 ),
    seedThresholdIsET = cms.bool( True ),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string( "hltParticleFlowSuperClusterECALEndcapWithPreshower" )
)
process.hltEgammaCandidatesUnseeded = cms.EDProducer( "EgammaHLTRecoEcalCandidateProducers",
    scIslandEndcapProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALUnseeded','hltParticleFlowSuperClusterECALEndcapWithPreshower' ),
    scHybridBarrelProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALUnseeded','hltParticleFlowSuperClusterECALBarrel' ),
    recoEcalCandidateCollection = cms.string( "" )
)
process.hltEgammaCandidatesWrapperUnseeded = cms.EDFilter( "HLTEgammaTriggerFilterObjectWrapper",
    doIsolated = cms.bool( True ),
    saveTags = cms.bool( True ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    candNonIsolatedTag = cms.InputTag( "" )
)
process.hltEG27EtUnseededFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEgammaCandidatesWrapperUnseeded" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    etcutEE = cms.double( 27.0 ),
    etcutEB = cms.double( 27.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltHcalDigisL1EGUnseeded = cms.EDProducer( "HLTHcalDigisInRegionsProducer",
    inputCollTags = cms.VInputTag( 'hltHcalDigis' ),
    etaPhiRegions = cms.VPSet( 
      cms.PSet(  inputColl = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
        type = cms.string( "RecoEcalCandidate" ),
        minEt = cms.double( 5.0 ),
        maxDeltaR = cms.double( 0.25 ),
        maxDPhi = cms.double( 0.0 ),
        maxDEta = cms.double( 0.0 ),
        maxEt = cms.double( -1.0 )
      )
    ),
    outputProductNames = cms.vstring( '' )
)
process.hltHbhePhase1RecoMethod2L1EGUnseeded = cms.EDProducer( "HBHEPhase1Reconstructor",
    tsFromDB = cms.bool( False ),
    setPulseShapeFlagsQIE8 = cms.bool( True ),
    digiLabelQIE11 = cms.InputTag( "hltHcalDigis" ),
    saveDroppedInfos = cms.bool( False ),
    setNoiseFlagsQIE8 = cms.bool( True ),
    saveEffectivePedestal = cms.bool( False ),
    digiLabelQIE8 = cms.InputTag( "hltHcalDigisL1EGUnseeded" ),
    sipmQTSShift = cms.int32( 0 ),
    processQIE11 = cms.bool( True ),
    pulseShapeParametersQIE11 = cms.PSet(  ),
    algoConfigClass = cms.string( "" ),
    saveInfos = cms.bool( False ),
    flagParametersQIE11 = cms.PSet(  ),
    makeRecHits = cms.bool( True ),
    pulseShapeParametersQIE8 = cms.PSet( 
      UseDualFit = cms.bool( True ),
      LinearCut = cms.vdouble( -3.0, -0.054, -0.054 ),
      TriangleIgnoreSlow = cms.bool( False ),
      TS4TS5LowerThreshold = cms.vdouble( 100.0, 120.0, 160.0, 200.0, 300.0, 500.0 ),
      LinearThreshold = cms.vdouble( 20.0, 100.0, 100000.0 ),
      RightSlopeSmallCut = cms.vdouble( 1.08, 1.16, 1.16 ),
      TS4TS5UpperThreshold = cms.vdouble( 70.0, 90.0, 100.0, 400.0 ),
      TS3TS4ChargeThreshold = cms.double( 70.0 ),
      R45PlusOneRange = cms.double( 0.2 ),
      TS4TS5LowerCut = cms.vdouble( -1.0, -0.7, -0.5, -0.4, -0.3, 0.1 ),
      RightSlopeThreshold = cms.vdouble( 250.0, 400.0, 100000.0 ),
      TS3TS4UpperChargeThreshold = cms.double( 20.0 ),
      MinimumChargeThreshold = cms.double( 20.0 ),
      RightSlopeCut = cms.vdouble( 5.0, 4.15, 4.15 ),
      RMS8MaxThreshold = cms.vdouble( 20.0, 100.0, 100000.0 ),
      MinimumTS4TS5Threshold = cms.double( 100.0 ),
      LeftSlopeThreshold = cms.vdouble( 250.0, 500.0, 100000.0 ),
      TS5TS6ChargeThreshold = cms.double( 70.0 ),
      TrianglePeakTS = cms.uint32( 10000 ),
      TS5TS6UpperChargeThreshold = cms.double( 20.0 ),
      RightSlopeSmallThreshold = cms.vdouble( 150.0, 200.0, 100000.0 ),
      RMS8MaxCut = cms.vdouble( -13.5, -11.5, -11.5 ),
      TS4TS5ChargeThreshold = cms.double( 70.0 ),
      R45MinusOneRange = cms.double( 0.2 ),
      LeftSlopeCut = cms.vdouble( 5.0, 2.55, 2.55 ),
      TS4TS5UpperCut = cms.vdouble( 1.0, 0.8, 0.75, 0.72 )
    ),
    flagParametersQIE8 = cms.PSet( 
      hitEnergyMinimum = cms.double( 1.0 ),
      pulseShapeParameterSets = cms.VPSet( 
        cms.PSet(  pulseShapeParameters = cms.vdouble( 0.0, 100.0, -50.0, 0.0, -15.0, 0.15 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( 100.0, 2000.0, -50.0, 0.0, -5.0, 0.05 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( 2000.0, 1000000.0, -50.0, 0.0, 95.0, 0.0 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( -1000000.0, 1000000.0, 45.0, 0.1, 1000000.0, 0.0 )        )
      ),
      nominalPedestal = cms.double( 3.0 ),
      hitMultiplicityThreshold = cms.int32( 17 )
    ),
    setNegativeFlagsQIE8 = cms.bool( False ),
    setNegativeFlagsQIE11 = cms.bool( False ),
    processQIE8 = cms.bool( True ),
    algorithm = cms.PSet( 
      meanTime = cms.double( 0.0 ),
      pedSigmaHPD = cms.double( 0.5 ),
      pedSigmaSiPM = cms.double( 6.5E-4 ),
      timeSigmaSiPM = cms.double( 2.5 ),
      applyTimeSlew = cms.bool( True ),
      timeSlewParsType = cms.int32( 3 ),
      ts4Max = cms.vdouble( 100.0, 45000.0 ),
      samplesToAdd = cms.int32( 2 ),
      applyTimeConstraint = cms.bool( True ),
      timeSigmaHPD = cms.double( 5.0 ),
      correctForPhaseContainment = cms.bool( True ),
      pedestalUpperLimit = cms.double( 2.7 ),
      respCorrM3 = cms.double( 1.0 ),
      pulseJitter = cms.double( 1.0 ),
      applyPedConstraint = cms.bool( True ),
      fitTimes = cms.int32( 1 ),
      applyTimeSlewM3 = cms.bool( True ),
      meanPed = cms.double( 0.0 ),
      noiseSiPM = cms.double( 1.0 ),
      ts4Min = cms.double( 0.0 ),
      applyPulseJitter = cms.bool( False ),
      noiseHPD = cms.double( 1.0 ),
      useM2 = cms.bool( True ),
      timeMin = cms.double( -12.5 ),
      useM3 = cms.bool( False ),
      tdcTimeShift = cms.double( 0.0 ),
      correctionPhaseNS = cms.double( 6.0 ),
      firstSampleShift = cms.int32( 0 ),
      timeSlewPars = cms.vdouble( 12.2999, -2.19142, 0.0, 12.2999, -2.19142, 0.0, 12.2999, -2.19142, 0.0 ),
      ts4chi2 = cms.vdouble( 15.0, 15.0 ),
      timeMax = cms.double( 12.5 ),
      Class = cms.string( "SimpleHBHEPhase1Algo" )
    ),
    setLegacyFlagsQIE8 = cms.bool( False ),
    sipmQNTStoSum = cms.int32( 3 ),
    setPulseShapeFlagsQIE11 = cms.bool( False ),
    setLegacyFlagsQIE11 = cms.bool( False ),
    setNoiseFlagsQIE11 = cms.bool( False ),
    dropZSmarkedPassed = cms.bool( True ),
    recoParamsFromDB = cms.bool( True )
)
process.hltHbherecoMethod2L1EGUnseeded = cms.EDProducer( "HBHEPlan1Combiner",
    hbheInput = cms.InputTag( "hltHbhePhase1RecoMethod2L1EGUnseeded" ),
    usePlan1Mode = cms.bool( True ),
    ignorePlan1Topology = cms.bool( False ),
    algorithm = cms.PSet(  Class = cms.string( "SimplePlan1RechitCombiner" ) )
)
process.hltTowerMakerMethod2L1EGUnseeded = cms.EDProducer( "CaloTowersCreator",
    EBSumThreshold = cms.double( 0.2 ),
    MomHBDepth = cms.double( 0.2 ),
    UseEtEBTreshold = cms.bool( False ),
    hfInput = cms.InputTag( "hltHfreco" ),
    AllowMissingInputs = cms.bool( False ),
    MomEEDepth = cms.double( 0.0 ),
    EESumThreshold = cms.double( 0.45 ),
    HBGrid = cms.vdouble(  ),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32( 9999 ),
    HBThreshold = cms.double( 0.7 ),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(  ),
    UseEcalRecoveredHits = cms.bool( False ),
    MomConstrMethod = cms.int32( 1 ),
    MomHEDepth = cms.double( 0.4 ),
    HcalThreshold = cms.double( -1000.0 ),
    HF2Weights = cms.vdouble(  ),
    HOWeights = cms.vdouble(  ),
    EEGrid = cms.vdouble(  ),
    UseSymEBTreshold = cms.bool( False ),
    EEWeights = cms.vdouble(  ),
    EEWeight = cms.double( 1.0 ),
    UseHO = cms.bool( False ),
    HBWeights = cms.vdouble(  ),
    HF1Weight = cms.double( 1.0 ),
    HF2Grid = cms.vdouble(  ),
    HEDWeights = cms.vdouble(  ),
    EBWeight = cms.double( 1.0 ),
    HF1Grid = cms.vdouble(  ),
    EBWeights = cms.vdouble(  ),
    HOWeight = cms.double( 1.0 ),
    HESWeight = cms.double( 1.0 ),
    HESThreshold = cms.double( 0.8 ),
    hbheInput = cms.InputTag( "hltHbherecoMethod2L1EGUnseeded" ),
    HF2Weight = cms.double( 1.0 ),
    HF2Threshold = cms.double( 0.85 ),
    HcalAcceptSeverityLevel = cms.uint32( 9 ),
    EEThreshold = cms.double( 0.3 ),
    HOThresholdPlus1 = cms.double( 3.5 ),
    HOThresholdPlus2 = cms.double( 3.5 ),
    HF1Weights = cms.vdouble(  ),
    hoInput = cms.InputTag( "hltHoreco" ),
    HF1Threshold = cms.double( 0.5 ),
    HcalPhase = cms.int32( 0 ),
    HESGrid = cms.vdouble(  ),
    EcutTower = cms.double( -1000.0 ),
    UseRejectedRecoveredEcalHits = cms.bool( False ),
    UseEtEETreshold = cms.bool( False ),
    HESWeights = cms.vdouble(  ),
    HOThresholdMinus1 = cms.double( 3.5 ),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring( 'kTime',
      'kWeird',
      'kBad' ),
    HEDWeight = cms.double( 1.0 ),
    UseSymEETreshold = cms.bool( False ),
    HEDThreshold = cms.double( 0.8 ),
    UseRejectedHitsOnly = cms.bool( False ),
    EBThreshold = cms.double( 0.07 ),
    HEDGrid = cms.vdouble(  ),
    UseHcalRecoveredHits = cms.bool( False ),
    HOThresholdMinus2 = cms.double( 3.5 ),
    HOThreshold0 = cms.double( 3.5 ),
    ecalInputs = cms.VInputTag( 'hltEcalRecHit:EcalRecHitsEB','hltEcalRecHit:EcalRecHitsEE' ),
    UseRejectedRecoveredHcalHits = cms.bool( False ),
    MomEBDepth = cms.double( 0.3 ),
    HBWeight = cms.double( 1.0 ),
    HOGrid = cms.vdouble(  ),
    EBGrid = cms.vdouble(  )
)
process.hltEgammaHoverEUnseeded = cms.EDProducer( "EgammaHLTBcHcalIsolationProducersRegional",
    effectiveAreas = cms.vdouble( 0.105, 0.17 ),
    doRhoCorrection = cms.bool( False ),
    outerCone = cms.double( 0.14 ),
    caloTowerProducer = cms.InputTag( "hltTowerMakerMethod2L1EGUnseeded" ),
    innerCone = cms.double( 0.0 ),
    useSingleTower = cms.bool( False ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    depth = cms.int32( -1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    rhoMax = cms.double( 9.9999999E7 ),
    etMin = cms.double( 0.0 ),
    rhoScale = cms.double( 1.0 ),
    doEtSum = cms.bool( False )
)
process.hltEG27HEUnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    varTag = cms.InputTag( "hltEgammaHoverEUnseeded" ),
    thrOverEEB = cms.vdouble( 0.15 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEG27EtUnseededFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltEgammaClusterShapeUnseeded = cms.EDProducer( "EgammaHLTClusterShapeProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ecalRechitEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
    isIeta = cms.bool( True )
)
process.hltEG27CaloIdLClusterShapeUnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaClusterShapeUnseeded','sigmaIEtaIEta5x5' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.014 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEG27HEUnseededFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltEgammaSuperClustersToPixelMatchUnseeded = cms.EDProducer( "EgammaHLTFilteredSuperClusterProducer",
    cands = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    cuts = cms.VPSet( 
      cms.PSet(  endcapCut = cms.PSet( 
  useEt = cms.bool( False ),
  cutOverE = cms.double( 0.2 )
),
        var = cms.InputTag( "hltEgammaHoverEUnseeded" ),
        barrelCut = cms.PSet( 
          useEt = cms.bool( False ),
          cutOverE = cms.double( 0.2 )
        )
      )
    )
)
process.hltEleSeedsTrackingRegionsUnseeded = cms.EDProducer( "TrackingRegionsFromSuperClustersEDProducer",
    RegionPSet = cms.PSet( 
      minBSDeltaZ = cms.double( 0.0 ),
      useZInVertex = cms.bool( False ),
      vertices = cms.InputTag( "" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      useZInBeamspot = cms.bool( False ),
      ptMin = cms.double( 1.5 ),
      deltaEtaRegion = cms.double( 0.1 ),
      nrSigmaForBSDeltaZ = cms.double( 4.0 ),
      originHalfLength = cms.double( 12.5 ),
      measurementTrackerEvent = cms.InputTag( "" ),
      originRadius = cms.double( 0.2 ),
      precise = cms.bool( True ),
      superClusters = cms.VInputTag( 'hltEgammaSuperClustersToPixelMatchUnseeded' ),
      whereToUseMeasTracker = cms.string( "kNever" ),
      deltaPhiRegion = cms.double( 0.4 ),
      defaultZ = cms.double( 0.0 )
    )
)
process.hltElePixelHitDoubletsUnseeded = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltEleSeedsTrackingRegionsUnseeded" ),
    layerPairs = cms.vuint32( 0 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltPixelLayerPairs" )
)
process.hltElePixelHitDoubletsForTripletsUnseeded = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltEleSeedsTrackingRegionsUnseeded" ),
    layerPairs = cms.vuint32( 0, 1 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltPixelLayerTriplets" )
)
process.hltElePixelHitTripletsUnseeded = cms.EDProducer( "CAHitTripletEDProducer",
    CAHardPtCut = cms.double( 0.3 ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltElePixelHitDoubletsForTripletsUnseeded" ),
    CAThetaCut = cms.double( 0.004 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 6.0 ),
      value1 = cms.double( 100.0 ),
      pt1 = cms.double( 0.8 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 8.0 )
    ),
    CAPhiCut = cms.double( 0.1 ),
    useBendingCorrection = cms.bool( True )
)
process.hltElePixelSeedsDoubletsUnseeded = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltElePixelHitDoubletsUnseeded" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltElePixelSeedsTripletsUnseeded = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltElePixelHitTripletsUnseeded" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltElePixelSeedsCombinedUnseeded = cms.EDProducer( "SeedCombiner",
    seedCollections = cms.VInputTag( 'hltElePixelSeedsDoubletsUnseeded','hltElePixelSeedsTripletsUnseeded' )
)
process.hltEgammaElectronPixelSeedsUnseeded = cms.EDProducer( "ElectronNHitSeedProducer",
    matcherConfig = cms.PSet( 
      detLayerGeom = cms.string( "hltESPGlobalDetLayerGeometry" ),
      navSchool = cms.string( "SimpleNavigationSchool" ),
      useRecoVertex = cms.bool( False ),
      minNrHits = cms.vuint32( 2, 3 ),
      matchingCuts = cms.VPSet( 
        cms.PSet(  dPhiMaxHighEt = cms.vdouble( 0.05 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 9999.0 ),
          dRZMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxHighEtThres = cms.vdouble( 20.0 ),
          dRZMaxHighEtThres = cms.vdouble( 0.0 )
        ),
        cms.PSet(  etaBins = cms.vdouble(  ),
          dPhiMaxHighEt = cms.vdouble( 0.003 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 0.05 ),
          dRZMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxHighEtThres = cms.vdouble( 0.0 ),
          dRZMaxHighEtThres = cms.vdouble( 30.0 )
        ),
        cms.PSet(  etaBins = cms.vdouble(  ),
          dPhiMaxHighEt = cms.vdouble( 0.003 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 0.05 ),
          dRZMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxHighEtThres = cms.vdouble( 0.0 ),
          dRZMaxHighEtThres = cms.vdouble( 30.0 )
        )
      ),
      minNrHitsValidLayerBins = cms.vint32( 4 )
    ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    measTkEvt = cms.InputTag( "hltSiStripClusters" ),
    vertices = cms.InputTag( "" ),
    superClusters = cms.VInputTag( 'hltEgammaSuperClustersToPixelMatchUnseeded' ),
    initialSeeds = cms.InputTag( "hltElePixelSeedsCombinedUnseeded" )
)
process.hltEgammaPixelMatchVarsUnseeded = cms.EDProducer( "EgammaHLTPixelMatchVarProducer",
    productsToWrite = cms.int32( 0 ),
    dRZ2SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00299, 2.99E-4, -4.13E-6, 0.00191 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.248, -0.329, 0.148, -0.0222 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol3" )
  )
) ),
    pixelSeedsProducer = cms.InputTag( "hltEgammaElectronPixelSeedsUnseeded" ),
    dPhi2SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 1.3E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.6 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 4.5E-4, -1.99E-4 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.9 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 7.94E-5 ),
    xMin = cms.double( 1.9 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  )
) ),
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    dPhi1SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00112, 7.52E-4, -0.00122, 0.00109 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00222, 1.96E-4, -2.03E-4, 4.47E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 3 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00236, 6.91E-4, 1.99E-4, 4.16E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00823, -0.0029 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 2.0 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00282 ),
    xMin = cms.double( 2.0 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.010838, -0.00345 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 2.0 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.0043 ),
    xMin = cms.double( 2.0 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 3 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.0208, -0.0125, 0.00231 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol2" )
  )
) )
)
process.hltEle27CaloIdLPixelMatchUnseededFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    s_a_rF = cms.double( 0.04 ),
    saveTags = cms.bool( True ),
    s_a_phi1B = cms.double( 0.0069 ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeedsUnseeded" ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi1I = cms.double( 0.0088 ),
    pixelVeto = cms.bool( False ),
    s2_threshold = cms.double( 0.4 ),
    s_a_rI = cms.double( 0.027 ),
    npixelmatchcut = cms.double( 1.0 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    useS = cms.bool( False ),
    candTag = cms.InputTag( "hltEG27CaloIdLClusterShapeUnseededFilter" ),
    ncandcut = cms.int32( 1 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    s_a_zB = cms.double( 0.012 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_phi2I = cms.double( 7.0E-4 )
)
process.hltEle27CaloIdLMWPMS2UnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 150.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaPixelMatchVarsUnseeded','s2' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 150.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle27CaloIdLPixelMatchUnseededFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltL1sSingleAndDoubleEG = cms.EDFilter( "HLTL1TSeed",
    L1SeedsLogicalExpression = cms.string( "L1_SingleEG24 OR L1_SingleEG26 OR L1_SingleEG30 OR L1_SingleEG32 OR L1_SingleEG34 OR L1_SingleEG36 OR L1_SingleEG38 OR L1_SingleEG40 OR L1_SingleEG42  OR L1_SingleEG45  OR L1_SingleEG50 OR L1_SingleEG34er2p1 OR L1_SingleEG36er2p1 OR L1_SingleEG38er2p1 OR L1_SingleIsoEG24er2p1 OR L1_SingleIsoEG26er2p1 OR L1_SingleIsoEG28er2p1 OR L1_SingleIsoEG30er2p1 OR L1_SingleIsoEG32er2p1 OR L1_SingleIsoEG34er2p1 OR L1_SingleIsoEG36er2p1 OR L1_SingleIsoEG24 OR L1_SingleIsoEG26 OR L1_SingleIsoEG28 OR L1_SingleIsoEG30 OR L1_SingleIsoEG32 OR L1_SingleIsoEG34 OR L1_SingleIsoEG36 OR L1_SingleIsoEG38 OR L1_DoubleEG_18_17 OR L1_DoubleEG_20_18 OR L1_DoubleEG_22_10 OR L1_DoubleEG_22_12 OR L1_DoubleEG_22_12 OR L1_DoubleEG_22_15 OR L1_DoubleEG_23_10 OR L1_DoubleEG_24_17 OR L1_DoubleEG_25_12 OR L1_DoubleEG_25_14 OR L1_DoubleEG_LooseIso23_10 OR L1_DoubleEG_LooseIso24_10" ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    saveTags = cms.bool( True ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreEle23Ele12CaloIdLTrackIdLIsoVLDZ = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltEGL1SingleAndDoubleEGOrPairFilter = cms.EDFilter( "HLTEgammaL1TMatchFilterRegional",
    doIsolated = cms.bool( False ),
    endcap_end = cms.double( 2.65 ),
    region_phi_size = cms.double( 1.044 ),
    saveTags = cms.bool( True ),
    region_eta_size_ecap = cms.double( 1.0 ),
    barrel_end = cms.double( 1.4791 ),
    l1IsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidates" ),
    l1CenJetsTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    region_eta_size = cms.double( 0.522 ),
    L1SeedFilterTag = cms.InputTag( "hltL1sSingleAndDoubleEG" ),
    candNonIsolatedTag = cms.InputTag( "" ),
    l1NonIsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    ncandcut = cms.int32( 2 ),
    l1TausTag = cms.InputTag( 'hltGtStage2Digis','Tau' )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLEtLeg1Filter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEGL1SingleAndDoubleEGOrPairFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEE = cms.double( 23.0 ),
    etcutEB = cms.double( 23.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLEtLeg2Filter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEGL1SingleAndDoubleEGOrPairFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEE = cms.double( 12.0 ),
    etcutEB = cms.double( 12.0 ),
    ncandcut = cms.int32( 2 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.013 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLEtLeg1Filter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.013 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 2 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLEtLeg2Filter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLHELeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.13 ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    thrOverEEB = cms.vdouble( 0.13 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg1Filter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLHELeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.13 ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    thrOverEEB = cms.vdouble( 0.13 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 2 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg2Filter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.29, 0.21 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( True ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.5 ),
    varTag = cms.InputTag( "hltEgammaEcalPFClusterIso" ),
    thrOverEEB = cms.vdouble( 0.5 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLHELeg1Filter" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.29, 0.21 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( True ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.5 ),
    varTag = cms.InputTag( "hltEgammaEcalPFClusterIso" ),
    thrOverEEB = cms.vdouble( 0.5 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 2 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLHELeg2Filter" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.2, 0.25 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( True ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.3 ),
    varTag = cms.InputTag( "hltEgammaHcalPFClusterIso" ),
    thrOverEEB = cms.vdouble( 0.3 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg1Filter" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.2, 0.25 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( True ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.3 ),
    varTag = cms.InputTag( "hltEgammaHcalPFClusterIso" ),
    thrOverEEB = cms.vdouble( 0.3 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 2 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg2Filter" ),
    rhoTag = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg1Filter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    s_a_rF = cms.double( 0.04 ),
    saveTags = cms.bool( True ),
    s_a_phi1B = cms.double( 0.0069 ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi1I = cms.double( 0.0088 ),
    pixelVeto = cms.bool( False ),
    s2_threshold = cms.double( 0.4 ),
    s_a_rI = cms.double( 0.027 ),
    npixelmatchcut = cms.double( 1.0 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    useS = cms.bool( False ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg1Filter" ),
    ncandcut = cms.int32( 1 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    s_a_zB = cms.double( 0.012 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_phi2I = cms.double( 7.0E-4 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg2Filter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    s_a_rF = cms.double( 0.04 ),
    saveTags = cms.bool( True ),
    s_a_phi1B = cms.double( 0.0069 ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi1I = cms.double( 0.0088 ),
    pixelVeto = cms.bool( False ),
    s2_threshold = cms.double( 0.4 ),
    s_a_rI = cms.double( 0.027 ),
    npixelmatchcut = cms.double( 1.0 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    useS = cms.bool( False ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg2Filter" ),
    ncandcut = cms.int32( 2 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    s_a_zB = cms.double( 0.012 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_phi2I = cms.double( 7.0E-4 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 999999.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','OneOESuperMinusOneOP' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 999999.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg1Filter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 999999.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','OneOESuperMinusOneOP' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 999999.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 2 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg2Filter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLDetaLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.015 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','DetaSeed' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.01 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg1Filter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLDetaLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.015 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','DetaSeed' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.01 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 2 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg2Filter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLDphiLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.1 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','Dphi' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.07 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLDetaLeg1Filter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLDphiLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.1 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaGsfTrackVars','Dphi' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.07 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 2 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLDetaLeg2Filter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg1Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.2 ),
    varTag = cms.InputTag( "hltEgammaEleGsfTrackIso" ),
    thrOverEEB = cms.vdouble( 0.2 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLDphiLeg1Filter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.2 ),
    varTag = cms.InputTag( "hltEgammaEleGsfTrackIso" ),
    thrOverEEB = cms.vdouble( 0.2 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 2 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLDphiLeg2Filter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( True ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle23Ele12CaloIdLTrackIdLIsoVLDZFilter = cms.EDFilter( "HLT2PhotonPhotonDZ",
    saveTags = cms.bool( True ),
    electronTag = cms.InputTag( "hltEgammaGsfElectrons" ),
    originTag2 = cms.VInputTag( 'hltEgammaCandidates' ),
    MinPixHitsForDZ = cms.int32( 0 ),
    MinN = cms.int32( 1 ),
    originTag1 = cms.VInputTag( 'hltEgammaCandidates' ),
    triggerType1 = cms.int32( 81 ),
    triggerType2 = cms.int32( 81 ),
    MinDR = cms.double( -1.0 ),
    MaxDZ = cms.double( 0.2 ),
    inputTag1 = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg1Filter" ),
    checkSC = cms.bool( True ),
    inputTag2 = cms.InputTag( "hltEle23Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg2Filter" )
)
process.hltPreMu27Ele37CaloIdLMW = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltL3fL1sMu16orMu25L1f0L2f10QL3Filtered27Q = cms.EDFilter( "HLTMuonTrkL1TFilter",
    maxNormalizedChi2 = cms.double( 20.0 ),
    saveTags = cms.bool( True ),
    maxAbsEta = cms.double( 2.5 ),
    previousCandTag = cms.InputTag( "hltL1fL1sMu16orMu25L1Filtered0" ),
    minPt = cms.double( 27.0 ),
    minN = cms.uint32( 1 ),
    inputCandCollection = cms.InputTag( "hltIterL3MuonCandidates" ),
    minMuonStations = cms.int32( 2 ),
    trkMuonId = cms.uint32( 0 ),
    requiredTypeMask = cms.uint32( 0 ),
    minMuonHits = cms.int32( -1 ),
    minTrkHits = cms.int32( -1 ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    allowedTypeMask = cms.uint32( 255 )
)
process.hltEG37EtUnseededFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEgammaCandidatesWrapperUnseeded" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    etcutEE = cms.double( 37.0 ),
    etcutEB = cms.double( 37.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEG37HEUnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    varTag = cms.InputTag( "hltEgammaHoverEUnseeded" ),
    thrOverEEB = cms.vdouble( 0.15 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEG37EtUnseededFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltEG37CaloIdLClusterShapeUnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaClusterShapeUnseeded','sigmaIEtaIEta5x5' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.014 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEG37HEUnseededFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle37CaloIdLPixelMatchUnseededFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    s_a_rF = cms.double( 0.04 ),
    saveTags = cms.bool( True ),
    s_a_phi1B = cms.double( 0.0069 ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeedsUnseeded" ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi1I = cms.double( 0.0088 ),
    pixelVeto = cms.bool( False ),
    s2_threshold = cms.double( 0.4 ),
    s_a_rI = cms.double( 0.027 ),
    npixelmatchcut = cms.double( 1.0 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    useS = cms.bool( False ),
    candTag = cms.InputTag( "hltEG37CaloIdLClusterShapeUnseededFilter" ),
    ncandcut = cms.int32( 1 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    s_a_zB = cms.double( 0.012 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_phi2I = cms.double( 7.0E-4 )
)
process.hltEle37CaloIdLMWPMS2UnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 150.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaPixelMatchVarsUnseeded','s2' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 150.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle37CaloIdLPixelMatchUnseededFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltPreMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLDZ = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLDZFilter = cms.EDFilter( "HLT2MuonPhotonDZ",
    saveTags = cms.bool( True ),
    electronTag = cms.InputTag( "hltEgammaGsfElectrons" ),
    originTag2 = cms.VInputTag( 'hltEgammaCandidates' ),
    MinPixHitsForDZ = cms.int32( 1 ),
    MinN = cms.int32( 1 ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 81 ),
    MinDR = cms.double( -1.0 ),
    MaxDZ = cms.double( 0.2 ),
    inputTag1 = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL3IsoFiltered23" ),
    checkSC = cms.bool( False ),
    inputTag2 = cms.InputTag( "hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegTrackIsoFilter" )
)
process.hltPreEle23Ele12CaloIdLTrackIdLIsoVL = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltL1sDoubleMu125to157 = cms.EDFilter( "HLTL1TSeed",
    L1SeedsLogicalExpression = cms.string( "L1_DoubleMu_12_5 OR L1_DoubleMu_13_6 OR L1_DoubleMu_15_5 OR L1_DoubleMu_15_7 OR L1_DoubleMu_15_7_SQ OR L1_DoubleMu_15_7_SQ_Mass_Min4" ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    saveTags = cms.bool( True ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreMu23Mu12SameSignDZ = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltL1fL1sDoubleMu157L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    PreviousCandTag = cms.InputTag( "hltL1sDoubleMu125to157" ),
    MinPt = cms.double( 0.0 ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' )
)
process.hltL2pfL1sDoubleMu157L1f0L2PreFiltered0 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    MaxDr = cms.double( 9999.0 ),
    CutOnChambers = cms.bool( False ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMu157L1Filtered0" ),
    MinPt = cms.double( 0.0 ),
    MinN = cms.int32( 2 ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.vint32( 0 ),
    MinDxySig = cms.double( -1.0 ),
    MinNchambers = cms.vint32( 0 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MaxDz = cms.double( 9999.0 ),
    MatchToPreviousCand = cms.bool( True ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    MinDr = cms.double( -1.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MinNstations = cms.vint32( 0 )
)
process.hltL2fL1sDoubleMu157L1f0L2Filtered10OneMu = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    MaxDr = cms.double( 9999.0 ),
    CutOnChambers = cms.bool( False ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMu157L1Filtered0" ),
    MinPt = cms.double( 0.0 ),
    MinN = cms.int32( 1 ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.vint32( 0 ),
    MinDxySig = cms.double( -1.0 ),
    MinNchambers = cms.vint32( 0 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MaxDz = cms.double( 9999.0 ),
    MatchToPreviousCand = cms.bool( True ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    MinDr = cms.double( -1.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MinNstations = cms.vint32( 0 )
)
process.hltL1fForIterL3L1fL1sDoubleMu157L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMu157L1Filtered0" ),
    MinPt = cms.double( 0.0 ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  ),
    CandTag = cms.InputTag( "hltIterL3MuonL1MuonNoL2Selector" )
)
process.hltL3fL1DoubleMu157fFiltered12 = cms.EDFilter( "HLTMuonL3PreFilter",
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    saveTags = cms.bool( True ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MatchToPreviousCand = cms.bool( True ),
    MaxPtDifference = cms.double( 9999.0 ),
    MaxDr = cms.double( 2.0 ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu157L1Filtered0" ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    PreviousCandTag = cms.InputTag( "hltL2pfL1sDoubleMu157L1f0L2PreFiltered0" ),
    MaxEta = cms.double( 2.5 ),
    trkMuonId = cms.uint32( 0 ),
    MinDr = cms.double( -1.0 ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    MinNmuonHits = cms.int32( 0 ),
    MinN = cms.int32( 2 ),
    MinTrackPt = cms.double( 0.0 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    minMuonHits = cms.int32( -1 ),
    minTrkHits = cms.int32( -1 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    allowedTypeMask = cms.uint32( 255 ),
    MinPt = cms.double( 12.0 ),
    MinNhits = cms.int32( 0 ),
    minMuonStations = cms.int32( 2 ),
    NSigmaPt = cms.double( 0.0 ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    L1MatchingdR = cms.double( 0.3 )
)
process.hltL3fL1DoubleMu157fFiltered23 = cms.EDFilter( "HLTMuonL3PreFilter",
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    saveTags = cms.bool( True ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MatchToPreviousCand = cms.bool( True ),
    MaxPtDifference = cms.double( 9999.0 ),
    MaxDr = cms.double( 2.0 ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu157L1Filtered0" ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sDoubleMu157L1f0L2Filtered10OneMu" ),
    MaxEta = cms.double( 2.5 ),
    trkMuonId = cms.uint32( 0 ),
    MinDr = cms.double( -1.0 ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    MinNmuonHits = cms.int32( 0 ),
    MinN = cms.int32( 1 ),
    MinTrackPt = cms.double( 0.0 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    minMuonHits = cms.int32( -1 ),
    minTrkHits = cms.int32( -1 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    allowedTypeMask = cms.uint32( 255 ),
    MinPt = cms.double( 23.0 ),
    MinNhits = cms.int32( 0 ),
    minMuonStations = cms.int32( 2 ),
    NSigmaPt = cms.double( 0.0 ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    L1MatchingdR = cms.double( 0.3 )
)
process.hltDiMuon2312SameSignFiltered = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    ChargeOpt = cms.int32( 1 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    FastAccept = cms.bool( True ),
    MatchToPreviousCand = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu157L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    PreviousCandIsL2 = cms.bool( True ),
    PreviousCandTag = cms.InputTag( "hltL2pfL1sDoubleMu157L1f0L2PreFiltered0" ),
    MaxPtBalance = cms.double( 999999.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MaxAcop = cms.double( 3.15 ),
    MinPtMin = cms.vdouble( 12.0 ),
    MaxInvMass = cms.vdouble( 999999.0 ),
    MinPtMax = cms.vdouble( 23.0 ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    MinN = cms.int32( 1 ),
    MaxDz = cms.double( 9999.0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxDr = cms.double( 99999.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxDCAMuMu = cms.double( 99999.9 ),
    MinNhits = cms.int32( 0 ),
    NSigmaPt = cms.double( 0.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    L1MatchingdR = cms.double( 0.3 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    MinInvMass = cms.vdouble( 0.0 )
)
process.hltDiMuon2312SameSignDzFiltered0p2 = cms.EDFilter( "HLT2MuonMuonDZ",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    MinPixHitsForDZ = cms.int32( 0 ),
    MinN = cms.int32( 1 ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 83 ),
    MinDR = cms.double( 0.001 ),
    MaxDZ = cms.double( 0.2 ),
    inputTag1 = cms.InputTag( "hltL3fL1DoubleMu157fFiltered12" ),
    checkSC = cms.bool( False ),
    inputTag2 = cms.InputTag( "hltL3fL1DoubleMu157fFiltered23" )
)
process.hltPreMu23Mu12SameSign = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltL1sSingleAndDoubleEGNonIsoOrWithEG26WithJetAndTau = cms.EDFilter( "HLTL1TSeed",
    L1SeedsLogicalExpression = cms.string( "L1_SingleEG26 OR L1_SingleEG30 OR L1_SingleEG32 OR L1_SingleEG34 OR L1_SingleEG36 OR L1_SingleEG38 OR L1_SingleEG40 OR L1_SingleEG42  OR L1_SingleEG45  OR L1_SingleEG50 OR L1_DoubleEG_18_17 OR L1_DoubleEG_20_18 OR L1_DoubleEG_22_10 OR L1_DoubleEG_22_12 OR L1_DoubleEG_22_12 OR L1_DoubleEG_22_15 OR L1_DoubleEG_23_10 OR L1_DoubleEG_24_17 OR L1_DoubleEG_25_12 OR L1_DoubleEG_25_14 OR L1_SingleJet170 OR L1_SingleJet180 OR L1_SingleJet200 OR L1_SingleTau100er2p1 OR L1_SingleTau120er2p1" ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    saveTags = cms.bool( True ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreEle27Ele37CaloIdLMW = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltEGL1SingleAndDoubleEGNonIsoOrWithEG26WithJetAndTauFilter = cms.EDFilter( "HLTEgammaL1TMatchFilterRegional",
    doIsolated = cms.bool( False ),
    endcap_end = cms.double( 2.65 ),
    region_phi_size = cms.double( 1.044 ),
    saveTags = cms.bool( True ),
    region_eta_size_ecap = cms.double( 1.0 ),
    barrel_end = cms.double( 1.4791 ),
    l1IsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidates" ),
    l1CenJetsTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    region_eta_size = cms.double( 0.522 ),
    L1SeedFilterTag = cms.InputTag( "hltL1sSingleAndDoubleEGNonIsoOrWithEG26WithJetAndTau" ),
    candNonIsolatedTag = cms.InputTag( "" ),
    l1NonIsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    ncandcut = cms.int32( 1 ),
    l1TausTag = cms.InputTag( 'hltGtStage2Digis','Tau' )
)
process.hltEG37EtFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEGL1SingleAndDoubleEGNonIsoOrWithEG26WithJetAndTauFilter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEE = cms.double( 37.0 ),
    etcutEB = cms.double( 37.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEG37HEFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    thrOverEEB = cms.vdouble( 0.15 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEG37EtFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltEG37CaloIdLClusterShapeFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.014 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEG37HEFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltEle37CaloIdLPixelMatchFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    s_a_rF = cms.double( 0.04 ),
    saveTags = cms.bool( True ),
    s_a_phi1B = cms.double( 0.0069 ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeeds" ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi1I = cms.double( 0.0088 ),
    pixelVeto = cms.bool( False ),
    s2_threshold = cms.double( 0.4 ),
    s_a_rI = cms.double( 0.027 ),
    npixelmatchcut = cms.double( 1.0 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    useS = cms.bool( False ),
    candTag = cms.InputTag( "hltEG37CaloIdLClusterShapeFilter" ),
    ncandcut = cms.int32( 1 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    s_a_zB = cms.double( 0.012 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_phi2I = cms.double( 7.0E-4 )
)
process.hltEle37CaloIdLMWPMS2Filter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 150.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaPixelMatchVars','s2' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 150.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    ncandcut = cms.int32( 1 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltEle37CaloIdLPixelMatchFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltDiEG27EtUnseededFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEgammaCandidatesWrapperUnseeded" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    etcutEE = cms.double( 27.0 ),
    etcutEB = cms.double( 27.0 ),
    ncandcut = cms.int32( 2 )
)
process.hltDiEG27HEUnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    varTag = cms.InputTag( "hltEgammaHoverEUnseeded" ),
    thrOverEEB = cms.vdouble( 0.15 ),
    thrRegularEB = cms.vdouble( -1.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ncandcut = cms.int32( 2 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltDiEG27EtUnseededFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltDiEG27CaloIdLClusterShapeUnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaClusterShapeUnseeded','sigmaIEtaIEta5x5' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 0.014 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ncandcut = cms.int32( 2 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltDiEG27HEUnseededFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltDiEle27CaloIdLPixelMatchUnseededFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    s_a_rF = cms.double( 0.04 ),
    saveTags = cms.bool( True ),
    s_a_phi1B = cms.double( 0.0069 ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeedsUnseeded" ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi1I = cms.double( 0.0088 ),
    pixelVeto = cms.bool( False ),
    s2_threshold = cms.double( 0.4 ),
    s_a_rI = cms.double( 0.027 ),
    npixelmatchcut = cms.double( 1.0 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    useS = cms.bool( False ),
    candTag = cms.InputTag( "hltDiEG27CaloIdLClusterShapeUnseededFilter" ),
    ncandcut = cms.int32( 2 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    s_a_zB = cms.double( 0.012 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_phi2I = cms.double( 7.0E-4 )
)
process.hltDiEle27CaloIdLMWPMS2UnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    thrOverE2EE = cms.vdouble( -1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    energyLowEdges = cms.vdouble( 0.0 ),
    doRhoCorrection = cms.bool( False ),
    saveTags = cms.bool( True ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( 150.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    varTag = cms.InputTag( 'hltEgammaPixelMatchVarsUnseeded','s2' ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrRegularEB = cms.vdouble( 150.0 ),
    lessThan = cms.bool( True ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ncandcut = cms.int32( 2 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    candTag = cms.InputTag( "hltDiEle27CaloIdLPixelMatchUnseededFilter" ),
    rhoTag = cms.InputTag( "" ),
    rhoMax = cms.double( 9.9999999E7 ),
    useEt = cms.bool( False ),
    rhoScale = cms.double( 1.0 )
)
process.hltPreMu23Mu12DZ = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltDiMuon2312DzFiltered0p2 = cms.EDFilter( "HLT2MuonMuonDZ",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    MinPixHitsForDZ = cms.int32( 0 ),
    MinN = cms.int32( 1 ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 83 ),
    MinDR = cms.double( 0.001 ),
    MaxDZ = cms.double( 0.2 ),
    inputTag1 = cms.InputTag( "hltL3fL1DoubleMu157fFiltered12" ),
    checkSC = cms.bool( False ),
    inputTag2 = cms.InputTag( "hltL3fL1DoubleMu157fFiltered23" )
)
process.hltPreNoFilterPFBTagDeepCSVP1 = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltTowerMakerForPF = cms.EDProducer( "CaloTowersCreator",
    EBSumThreshold = cms.double( 0.2 ),
    MomHBDepth = cms.double( 0.2 ),
    UseEtEBTreshold = cms.bool( False ),
    hfInput = cms.InputTag( "hltHfreco" ),
    AllowMissingInputs = cms.bool( False ),
    MomEEDepth = cms.double( 0.0 ),
    EESumThreshold = cms.double( 0.45 ),
    HBGrid = cms.vdouble(  ),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32( 9999 ),
    HBThreshold = cms.double( 0.4 ),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(  ),
    UseEcalRecoveredHits = cms.bool( False ),
    MomConstrMethod = cms.int32( 1 ),
    MomHEDepth = cms.double( 0.4 ),
    HcalThreshold = cms.double( -1000.0 ),
    HF2Weights = cms.vdouble(  ),
    HOWeights = cms.vdouble(  ),
    EEGrid = cms.vdouble(  ),
    UseSymEBTreshold = cms.bool( False ),
    EEWeights = cms.vdouble(  ),
    EEWeight = cms.double( 1.0 ),
    UseHO = cms.bool( False ),
    HBWeights = cms.vdouble(  ),
    HF1Weight = cms.double( 1.0 ),
    HF2Grid = cms.vdouble(  ),
    HEDWeights = cms.vdouble(  ),
    EBWeight = cms.double( 1.0 ),
    HF1Grid = cms.vdouble(  ),
    EBWeights = cms.vdouble(  ),
    HOWeight = cms.double( 1.0 ),
    HESWeight = cms.double( 1.0 ),
    HESThreshold = cms.double( 0.4 ),
    hbheInput = cms.InputTag( "hltHbhereco" ),
    HF2Weight = cms.double( 1.0 ),
    HF2Threshold = cms.double( 1.8 ),
    HcalAcceptSeverityLevel = cms.uint32( 11 ),
    EEThreshold = cms.double( 0.3 ),
    HOThresholdPlus1 = cms.double( 1.1 ),
    HOThresholdPlus2 = cms.double( 1.1 ),
    HF1Weights = cms.vdouble(  ),
    hoInput = cms.InputTag( "hltHoreco" ),
    HF1Threshold = cms.double( 1.2 ),
    HcalPhase = cms.int32( 0 ),
    HESGrid = cms.vdouble(  ),
    EcutTower = cms.double( -1000.0 ),
    UseRejectedRecoveredEcalHits = cms.bool( False ),
    UseEtEETreshold = cms.bool( False ),
    HESWeights = cms.vdouble(  ),
    HOThresholdMinus1 = cms.double( 1.1 ),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring( 'kTime',
      'kWeird',
      'kBad' ),
    HEDWeight = cms.double( 1.0 ),
    UseSymEETreshold = cms.bool( False ),
    HEDThreshold = cms.double( 0.4 ),
    UseRejectedHitsOnly = cms.bool( False ),
    EBThreshold = cms.double( 0.07 ),
    HEDGrid = cms.vdouble(  ),
    UseHcalRecoveredHits = cms.bool( True ),
    HOThresholdMinus2 = cms.double( 1.1 ),
    HOThreshold0 = cms.double( 1.1 ),
    ecalInputs = cms.VInputTag( 'hltEcalRecHit:EcalRecHitsEB','hltEcalRecHit:EcalRecHitsEE' ),
    UseRejectedRecoveredHcalHits = cms.bool( False ),
    MomEBDepth = cms.double( 0.3 ),
    HBWeight = cms.double( 1.0 ),
    HOGrid = cms.vdouble(  ),
    EBGrid = cms.vdouble(  )
)
process.hltAK4CaloJetsPF = cms.EDProducer( "FastjetJetProducer",
    Active_Area_Repeats = cms.int32( 5 ),
    useMassDropTagger = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    muMin = cms.double( -1.0 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    doAreaDiskApprox = cms.bool( False ),
    subtractorName = cms.string( "" ),
    dRMax = cms.double( -1.0 ),
    useExplicitGhosts = cms.bool( False ),
    puWidth = cms.double( 0.0 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    R0 = cms.double( -1.0 ),
    jetType = cms.string( "CaloJet" ),
    muCut = cms.double( -1.0 ),
    subjetPtMin = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    MinVtxNdof = cms.int32( 5 ),
    minSeed = cms.uint32( 0 ),
    voronoiRfact = cms.double( -9.0 ),
    doRhoFastjet = cms.bool( False ),
    jetAlgorithm = cms.string( "AntiKt" ),
    writeCompound = cms.bool( False ),
    muMax = cms.double( -1.0 ),
    nSigmaPU = cms.double( 1.0 ),
    GhostArea = cms.double( 0.01 ),
    Rho_EtaMax = cms.double( 4.4 ),
    restrictInputs = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    nExclude = cms.uint32( 0 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    yMin = cms.double( -1.0 ),
    jetCollInstanceName = cms.string( "" ),
    useFiltering = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    rFiltFactor = cms.double( -1.0 ),
    useDeterministicSeed = cms.bool( True ),
    doPVCorrection = cms.bool( False ),
    rFilt = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    useTrimming = cms.bool( False ),
    puCenters = cms.vdouble(  ),
    MaxVtxZ = cms.double( 15.0 ),
    rParam = cms.double( 0.4 ),
    csRho_EtaMax = cms.double( -1.0 ),
    UseOnlyVertexTracks = cms.bool( False ),
    dRMin = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    doFastJetNonUniform = cms.bool( False ),
    usePruning = cms.bool( False ),
    maxDepth = cms.int32( -1 ),
    yCut = cms.double( -1.0 ),
    useSoftDrop = cms.bool( False ),
    DzTrVtxMax = cms.double( 0.0 ),
    UseOnlyOnePV = cms.bool( False ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    correctShape = cms.bool( False ),
    rcut_factor = cms.double( -1.0 ),
    src = cms.InputTag( "hltTowerMakerForPF" ),
    gridMaxRapidity = cms.double( -1.0 ),
    sumRecHits = cms.bool( False ),
    jetPtMin = cms.double( 1.0 ),
    puPtMin = cms.double( 10.0 ),
    srcPVs = cms.InputTag( "NotUsed" ),
    verbosity = cms.int32( 0 ),
    inputEtMin = cms.double( 0.3 ),
    useConstituentSubtraction = cms.bool( False ),
    beta = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    radiusPU = cms.double( 0.4 ),
    nFilt = cms.int32( -1 ),
    useKtPruning = cms.bool( False ),
    DxyTrVtxMax = cms.double( 0.0 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    inputEMin = cms.double( 0.0 )
)
process.hltAK4CaloJetsPFEt5 = cms.EDFilter( "EtMinCaloJetSelector",
    filter = cms.bool( False ),
    src = cms.InputTag( "hltAK4CaloJetsPF" ),
    etMin = cms.double( 5.0 )
)
process.hltPixelTracksFilter = cms.EDProducer( "PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double( 1000.0 ),
    nSigmaTipMaxTolerance = cms.double( 0.0 ),
    ptMin = cms.double( 0.1 ),
    nSigmaInvPtTolerance = cms.double( 0.0 ),
    tipMax = cms.double( 1.0 )
)
process.hltPixelTracksFitter = cms.EDProducer( "PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool( False ),
    scaleFactor = cms.double( 0.65 )
)
process.hltPixelTracksTrackingRegions = cms.EDProducer( "GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet( 
      nSigmaZ = cms.double( 4.0 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      ptMin = cms.double( 0.8 ),
      originRadius = cms.double( 0.02 ),
      precise = cms.bool( True )
    )
)
process.hltPixelTracksHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltPixelTracksTrackingRegions" ),
    layerPairs = cms.vuint32( 0, 1, 2 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltPixelLayerQuadruplets" )
)
process.hltPixelTracksHitQuadruplets = cms.EDProducer( "CAHitQuadrupletEDProducer",
    CAThetaCut = cms.double( 0.002 ),
    SeedComparitorPSet = cms.PSet( 
      clusterShapeHitFilter = cms.string( "ClusterShapeHitFilter" ),
      ComponentName = cms.string( "LowPtClusterShapeSeedComparitor" ),
      clusterShapeCacheSrc = cms.InputTag( "hltSiPixelClustersCache" )
    ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltPixelTracksHitDoublets" ),
    fitFastCircle = cms.bool( True ),
    CAHardPtCut = cms.double( 0.0 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 50.0 ),
      value1 = cms.double( 200.0 ),
      pt1 = cms.double( 0.7 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 2.0 )
    ),
    CAOnlyOneLastHitPerLayerFilter = cms.bool( False ),
    CAPhiCut = cms.double( 0.2 ),
    useBendingCorrection = cms.bool( True ),
    fitFastCircleChi2Cut = cms.bool( True )
)
process.hltPixelTracks = cms.EDProducer( "PixelTrackProducer",
    Filter = cms.InputTag( "hltPixelTracksFilter" ),
    Cleaner = cms.string( "hltPixelTracksCleanerBySharedHits" ),
    passLabel = cms.string( "" ),
    Fitter = cms.InputTag( "hltPixelTracksFitter" ),
    SeedingHitSets = cms.InputTag( "hltPixelTracksHitQuadruplets" )
)
process.hltPixelTripletsClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 3000.0 ),
    trajectories = cms.InputTag( "hltPixelTracks" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    stripClusters = cms.InputTag( "" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    TrackQuality = cms.string( "undefQuality" )
)
process.hltPixelTracksTrackingRegionsForTriplets = cms.EDProducer( "PointSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "none" ),
      zErrorVetex = cms.double( 0.1 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      maxNVertices = cms.int32( 10 ),
      maxNRegions = cms.int32( 100 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 3.0 ),
      ptMin = cms.double( 0.8 ),
      points = cms.PSet( 
        phi = cms.vdouble( 1.8, -3.2 ),
        eta = cms.vdouble( 2.1, -0.8 )
      ),
      mode = cms.string( "BeamSpotFixed" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "never" ),
      originRadius = cms.double( 0.1 ),
      measurementTrackerName = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.4 ),
      deltaPhi = cms.double( 0.4 )
    )
)
process.hltPixelLayerTripletsWithClustersRemoval = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3',
      'BPix2+BPix3+BPix4',
      'BPix1+BPix3+BPix4',
      'BPix1+BPix2+BPix4',
      'BPix2+BPix3+FPix1_pos',
      'BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos',
      'BPix1+BPix2+FPix1_neg',
      'BPix2+FPix1_pos+FPix2_pos',
      'BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos',
      'BPix1+FPix1_neg+FPix2_neg',
      'FPix1_pos+FPix2_pos+FPix3_pos',
      'FPix1_neg+FPix2_neg+FPix3_neg',
      'BPix1+BPix3+FPix1_pos',
      'BPix1+BPix2+FPix2_pos',
      'BPix1+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix2_neg',
      'BPix1+FPix2_neg+FPix3_neg',
      'BPix1+FPix1_neg+FPix3_neg',
      'BPix1+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_pos+FPix3_pos' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltPixelTripletsClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltPixelTripletsClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltPixelTracksHitDoubletsForTriplets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltPixelTracksTrackingRegionsForTriplets" ),
    layerPairs = cms.vuint32( 0, 1 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltPixelLayerTripletsWithClustersRemoval" )
)
process.hltPixelTracksHitTriplets = cms.EDProducer( "CAHitTripletEDProducer",
    CAHardPtCut = cms.double( 0.0 ),
    SeedComparitorPSet = cms.PSet( 
      clusterShapeHitFilter = cms.string( "ClusterShapeHitFilter" ),
      ComponentName = cms.string( "LowPtClusterShapeSeedComparitor" ),
      clusterShapeCacheSrc = cms.InputTag( "hltSiPixelClustersCache" )
    ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltPixelTracksHitDoubletsForTriplets" ),
    CAThetaCut = cms.double( 0.002 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 50.0 ),
      value1 = cms.double( 200.0 ),
      pt1 = cms.double( 0.7 ),
      enabled = cms.bool( False ),
      pt2 = cms.double( 2.0 )
    ),
    CAPhiCut = cms.double( 0.2 ),
    useBendingCorrection = cms.bool( True )
)
process.hltPixelTracksFromTriplets = cms.EDProducer( "PixelTrackProducer",
    Filter = cms.InputTag( "hltPixelTracksFilter" ),
    Cleaner = cms.string( "hltPixelTracksCleanerBySharedHits" ),
    passLabel = cms.string( "" ),
    Fitter = cms.InputTag( "hltPixelTracksFitter" ),
    SeedingHitSets = cms.InputTag( "hltPixelTracksHitTriplets" )
)
process.hltPixelTracksMerged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltPixelTracks','hltPixelTracksFromTriplets' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltPixelTracks','hltPixelTracksFromTriplets' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltPixelVertices = cms.EDProducer( "PixelVertexProducer",
    WtAverage = cms.bool( True ),
    Method2 = cms.bool( True ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparerForIT" ) ),
    Verbosity = cms.int32( 0 ),
    UseError = cms.bool( True ),
    TrackCollection = cms.InputTag( "hltPixelTracksMerged" ),
    PtMin = cms.double( 1.0 ),
    NTrkMin = cms.int32( 2 ),
    ZOffset = cms.double( 5.0 ),
    Finder = cms.string( "DivisiveVertexFinder" ),
    ZSeparation = cms.double( 0.05 )
)
process.hltTrimmedPixelVertices = cms.EDProducer( "PixelVertexCollectionTrimmer",
    minSumPt2 = cms.double( 0.0 ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparerForIT" ) ),
    maxVtx = cms.uint32( 100 ),
    fractionSumPt2 = cms.double( 0.3 ),
    src = cms.InputTag( "hltPixelVertices" )
)
process.hltIter0PFLowPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    useEventsWithNoVertex = cms.bool( True ),
    originHalfLength = cms.double( 0.3 ),
    useProtoTrackKinematics = cms.bool( False ),
    usePV = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) ),
    InputVertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    InputCollection = cms.InputTag( "hltPixelTracks" ),
    originRadius = cms.double( 0.1 )
)
process.hltIter0PFlowCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter0PFLowPixelSeedsFromPixelTracks" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0GroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter0PFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter0PFlowCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClusters" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIter0" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter0PFlowTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0PFlowCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 3, 4 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 3, 4 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter0PFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter0PFlowCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltIter0PFlowTrackCutClassifier','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter0PFlowTrackCutClassifier','MVAValues' )
)
process.hltIter1ClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 9.0 ),
    trajectories = cms.InputTag( "hltIter0PFlowTrackSelectionHighPurity" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    TrackQuality = cms.string( "highPurity" )
)
process.hltIter1MaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    clustersToSkip = cms.InputTag( "hltIter1ClustersRefRemoval" ),
    OnDemand = cms.bool( False ),
    src = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter1PixelLayerQuadruplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3+BPix4',
      'BPix1+BPix2+BPix3+FPix1_pos',
      'BPix1+BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos+FPix2_pos',
      'BPix1+BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_neg+FPix2_neg+FPix3_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter1ClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter1ClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltIter1PFlowPixelTrackingRegions = cms.EDProducer( "GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet( 
      useFixedError = cms.bool( True ),
      nSigmaZ = cms.double( 4.0 ),
      VertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      useFoundVertices = cms.bool( True ),
      fixedError = cms.double( 0.2 ),
      sigmaZVertex = cms.double( 3.0 ),
      useFakeVertices = cms.bool( False ),
      ptMin = cms.double( 0.4 ),
      originRadius = cms.double( 0.05 ),
      precise = cms.bool( True ),
      useMultipleScattering = cms.bool( False )
    )
)
process.hltIter1PFlowPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False ),
    MaxNumberOfCosmicClusters = cms.uint32( 50000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    doClusterCheck = cms.bool( False ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    ClusterCollectionLabel = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter1PFlowPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltIter1PFlowPixelTrackingRegions" ),
    layerPairs = cms.vuint32( 0, 1, 2 ),
    clusterCheck = cms.InputTag( "hltIter1PFlowPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltIter1PixelLayerQuadruplets" )
)
process.hltIter1PFlowPixelHitQuadruplets = cms.EDProducer( "CAHitQuadrupletEDProducer",
    CAThetaCut = cms.double( 0.004 ),
    SeedComparitorPSet = cms.PSet( 
      clusterShapeHitFilter = cms.string( "ClusterShapeHitFilter" ),
      ComponentName = cms.string( "none" ),
      clusterShapeCacheSrc = cms.InputTag( "hltSiPixelClustersCache" )
    ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltIter1PFlowPixelHitDoublets" ),
    fitFastCircle = cms.bool( True ),
    CAHardPtCut = cms.double( 0.0 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 100.0 ),
      value1 = cms.double( 1000.0 ),
      pt1 = cms.double( 0.4 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 2.0 )
    ),
    CAOnlyOneLastHitPerLayerFilter = cms.bool( False ),
    CAPhiCut = cms.double( 0.3 ),
    useBendingCorrection = cms.bool( True ),
    fitFastCircleChi2Cut = cms.bool( True )
)
process.hltIter1PixelTracks = cms.EDProducer( "PixelTrackProducer",
    Filter = cms.InputTag( "hltPixelTracksFilter" ),
    Cleaner = cms.string( "hltPixelTracksCleanerBySharedHits" ),
    passLabel = cms.string( "" ),
    Fitter = cms.InputTag( "hltPixelTracksFitter" ),
    SeedingHitSets = cms.InputTag( "hltIter1PFlowPixelHitQuadruplets" )
)
process.hltIter1PFLowPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    useEventsWithNoVertex = cms.bool( True ),
    originHalfLength = cms.double( 0.3 ),
    useProtoTrackKinematics = cms.bool( False ),
    usePV = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) ),
    InputVertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    InputCollection = cms.InputTag( "hltIter1PixelTracks" ),
    originRadius = cms.double( 0.1 )
)
process.hltIter1PFlowCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter1PFLowPixelSeedsFromPixelTracks" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter1MaskedMeasurementTrackerEvent" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter1GroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter1PFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter1PFlowCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter1MaskedMeasurementTrackerEvent" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIter1" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter1PFlowTrackCutClassifierPrompt = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter1PFlowCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 2 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 1.0, 0.85 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 1.0, 0.9 ),
        dr_exp = cms.vint32( 3, 3, 3 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 1.0, 0.9 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 1.0, 0.8 ),
        dz_exp = cms.vint32( 3, 3, 3 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 3.40282346639E38, 1.0, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 3.40282346639E38, 1.0, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter1PFlowTrackCutClassifierDetached = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter1PFlowCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 1 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 1.0, 1.0, 1.0 ),
        dr_par1 = cms.vdouble( 1.0, 1.0, 1.0 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 99, 3, 3 ),
      min3DLayers = cms.vint32( 1, 2, 3 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 1.0, 1.0, 1.0 ),
        dz_par2 = cms.vdouble( 1.0, 1.0, 1.0 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 2 ),
      maxDz = cms.vdouble( 3.40282346639E38, 1.0, 3.40282346639E38 ),
      minNdof = cms.vdouble( -1.0, -1.0, -1.0 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.0, 0.7, 0.4 ),
      maxDr = cms.vdouble( 3.40282346639E38, 1.0, 3.40282346639E38 ),
      minLayers = cms.vint32( 5, 5, 5 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter1PFlowTrackCutClassifierMerged = cms.EDProducer( "ClassifierMerger",
    inputClassifiers = cms.vstring( 'hltIter1PFlowTrackCutClassifierPrompt',
      'hltIter1PFlowTrackCutClassifierDetached' )
)
process.hltIter1PFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter1PFlowCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltIter1PFlowTrackCutClassifierMerged','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter1PFlowTrackCutClassifierMerged','MVAValues' )
)
process.hltIter1Merged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0PFlowTrackSelectionHighPurity','hltIter1PFlowTrackSelectionHighPurity' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIter0PFlowTrackSelectionHighPurity','hltIter1PFlowTrackSelectionHighPurity' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltIter1TrackRefsForJets4Iter2 = cms.EDProducer( "ChargedRefCandidateProducer",
    src = cms.InputTag( "hltIter1Merged" ),
    particleType = cms.string( "pi+" )
)
process.hltAK4Iter1TrackJets4Iter2 = cms.EDProducer( "FastjetJetProducer",
    Active_Area_Repeats = cms.int32( 5 ),
    useMassDropTagger = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    muMin = cms.double( -1.0 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    doAreaDiskApprox = cms.bool( False ),
    subtractorName = cms.string( "" ),
    dRMax = cms.double( -1.0 ),
    useExplicitGhosts = cms.bool( False ),
    puWidth = cms.double( 0.0 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    R0 = cms.double( -1.0 ),
    jetType = cms.string( "TrackJet" ),
    muCut = cms.double( -1.0 ),
    subjetPtMin = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    MinVtxNdof = cms.int32( 0 ),
    minSeed = cms.uint32( 14327 ),
    voronoiRfact = cms.double( 0.9 ),
    doRhoFastjet = cms.bool( False ),
    jetAlgorithm = cms.string( "AntiKt" ),
    writeCompound = cms.bool( False ),
    muMax = cms.double( -1.0 ),
    nSigmaPU = cms.double( 1.0 ),
    GhostArea = cms.double( 0.01 ),
    Rho_EtaMax = cms.double( 4.4 ),
    restrictInputs = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    nExclude = cms.uint32( 0 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    yMin = cms.double( -1.0 ),
    jetCollInstanceName = cms.string( "" ),
    useFiltering = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    rFiltFactor = cms.double( -1.0 ),
    useDeterministicSeed = cms.bool( True ),
    doPVCorrection = cms.bool( False ),
    rFilt = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    useTrimming = cms.bool( False ),
    puCenters = cms.vdouble(  ),
    MaxVtxZ = cms.double( 30.0 ),
    rParam = cms.double( 0.4 ),
    csRho_EtaMax = cms.double( -1.0 ),
    UseOnlyVertexTracks = cms.bool( False ),
    dRMin = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    doFastJetNonUniform = cms.bool( False ),
    usePruning = cms.bool( False ),
    maxDepth = cms.int32( -1 ),
    yCut = cms.double( -1.0 ),
    useSoftDrop = cms.bool( False ),
    DzTrVtxMax = cms.double( 0.5 ),
    UseOnlyOnePV = cms.bool( True ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    correctShape = cms.bool( False ),
    rcut_factor = cms.double( -1.0 ),
    src = cms.InputTag( "hltIter1TrackRefsForJets4Iter2" ),
    gridMaxRapidity = cms.double( -1.0 ),
    sumRecHits = cms.bool( False ),
    jetPtMin = cms.double( 7.5 ),
    puPtMin = cms.double( 0.0 ),
    srcPVs = cms.InputTag( "hltTrimmedPixelVertices" ),
    verbosity = cms.int32( 0 ),
    inputEtMin = cms.double( 0.1 ),
    useConstituentSubtraction = cms.bool( False ),
    beta = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    radiusPU = cms.double( 0.4 ),
    nFilt = cms.int32( -1 ),
    useKtPruning = cms.bool( False ),
    DxyTrVtxMax = cms.double( 0.2 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    inputEMin = cms.double( 0.0 )
)
process.hltIter1TrackAndTauJets4Iter2 = cms.EDProducer( "TauJetSelectorForHLTTrackSeeding",
    fractionMinCaloInTauCone = cms.double( 0.7 ),
    fractionMaxChargedPUInCaloCone = cms.double( 0.3 ),
    tauConeSize = cms.double( 0.2 ),
    ptTrkMaxInCaloCone = cms.double( 1.4 ),
    isolationConeSize = cms.double( 0.5 ),
    inputTrackJetTag = cms.InputTag( "hltAK4Iter1TrackJets4Iter2" ),
    nTrkMaxInCaloCone = cms.int32( 0 ),
    inputCaloJetTag = cms.InputTag( "hltAK4CaloJetsPFEt5" ),
    etaMinCaloJet = cms.double( -2.7 ),
    etaMaxCaloJet = cms.double( 2.7 ),
    ptMinCaloJet = cms.double( 10.0 ),
    inputTrackTag = cms.InputTag( "hltIter1Merged" )
)
process.hltIter2ClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 16.0 ),
    trajectories = cms.InputTag( "hltIter1PFlowTrackSelectionHighPurity" ),
    oldClusterRemovalInfo = cms.InputTag( "hltIter1ClustersRefRemoval" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    TrackQuality = cms.string( "highPurity" )
)
process.hltIter2MaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    clustersToSkip = cms.InputTag( "hltIter2ClustersRefRemoval" ),
    OnDemand = cms.bool( False ),
    src = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter2PixelLayerTriplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3',
      'BPix2+BPix3+BPix4',
      'BPix1+BPix3+BPix4',
      'BPix1+BPix2+BPix4',
      'BPix2+BPix3+FPix1_pos',
      'BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos',
      'BPix1+BPix2+FPix1_neg',
      'BPix2+FPix1_pos+FPix2_pos',
      'BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos',
      'BPix1+FPix1_neg+FPix2_neg',
      'FPix1_pos+FPix2_pos+FPix3_pos',
      'FPix1_neg+FPix2_neg+FPix3_neg',
      'BPix1+BPix3+FPix1_pos',
      'BPix1+BPix2+FPix2_pos',
      'BPix1+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix2_neg',
      'BPix1+FPix2_neg+FPix3_neg',
      'BPix1+FPix1_neg+FPix3_neg',
      'BPix1+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_pos+FPix3_pos' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter2ClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter2ClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltIter2PFlowPixelTrackingRegions = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
      zErrorVetex = cms.double( 0.05 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      maxNVertices = cms.int32( 10 ),
      maxNRegions = cms.int32( 100 ),
      nSigmaZVertex = cms.double( 4.0 ),
      nSigmaZBeamSpot = cms.double( 3.0 ),
      ptMin = cms.double( 0.4 ),
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltIter1TrackAndTauJets4Iter2" ),
      searchOpt = cms.bool( True ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.025 ),
      measurementTrackerName = cms.InputTag( "hltIter2MaskedMeasurementTrackerEvent" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.8 ),
      deltaPhi = cms.double( 0.8 )
    )
)
process.hltIter2PFlowPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False ),
    MaxNumberOfCosmicClusters = cms.uint32( 50000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    doClusterCheck = cms.bool( False ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    ClusterCollectionLabel = cms.InputTag( "hltSiStripClusters" )
)
process.hltIter2PFlowPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltIter2PFlowPixelTrackingRegions" ),
    layerPairs = cms.vuint32( 0, 1 ),
    clusterCheck = cms.InputTag( "hltIter2PFlowPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltIter2PixelLayerTriplets" )
)
process.hltIter2PFlowPixelHitTriplets = cms.EDProducer( "CAHitTripletEDProducer",
    CAHardPtCut = cms.double( 0.3 ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltIter2PFlowPixelHitDoublets" ),
    CAThetaCut = cms.double( 0.004 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 6.0 ),
      value1 = cms.double( 100.0 ),
      pt1 = cms.double( 0.4 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 8.0 )
    ),
    CAPhiCut = cms.double( 0.1 ),
    useBendingCorrection = cms.bool( True )
)
process.hltIter2PFlowPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltIter2PFlowPixelHitTriplets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltIter2PFlowCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter2PFlowPixelSeeds" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter2MaskedMeasurementTrackerEvent" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2GroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter2PFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter2PFlowCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter2MaskedMeasurementTrackerEvent" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIter2" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter2PFlowTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter2PFlowCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter2PFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter2PFlowCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltIter2PFlowTrackCutClassifier','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter2PFlowTrackCutClassifier','MVAValues' )
)
process.hltIter2Merged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter1Merged','hltIter2PFlowTrackSelectionHighPurity' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIter1Merged','hltIter2PFlowTrackSelectionHighPurity' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltTripletRecoveryClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 16.0 ),
    trajectories = cms.InputTag( "hltIter2PFlowTrackSelectionHighPurity" ),
    oldClusterRemovalInfo = cms.InputTag( "hltIter2ClustersRefRemoval" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    TrackQuality = cms.string( "highPurity" )
)
process.hltTripletRecoveryMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    clustersToSkip = cms.InputTag( "hltTripletRecoveryClustersRefRemoval" ),
    OnDemand = cms.bool( False ),
    src = cms.InputTag( "hltSiStripClusters" )
)
process.hltTripletRecoveryPixelLayerTriplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3',
      'BPix2+BPix3+BPix4',
      'BPix1+BPix3+BPix4',
      'BPix1+BPix2+BPix4',
      'BPix2+BPix3+FPix1_pos',
      'BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos',
      'BPix1+BPix2+FPix1_neg',
      'BPix2+FPix1_pos+FPix2_pos',
      'BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos',
      'BPix1+FPix1_neg+FPix2_neg',
      'FPix1_pos+FPix2_pos+FPix3_pos',
      'FPix1_neg+FPix2_neg+FPix3_neg',
      'BPix1+BPix3+FPix1_pos',
      'BPix1+BPix2+FPix2_pos',
      'BPix1+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix2_neg',
      'BPix1+FPix2_neg+FPix3_neg',
      'BPix1+FPix1_neg+FPix3_neg',
      'BPix1+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_pos+FPix3_pos' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltTripletRecoveryClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltTripletRecoveryClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltTripletRecoveryPFlowPixelTrackingRegions = cms.EDProducer( "PointSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
      zErrorVetex = cms.double( 0.1 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      maxNVertices = cms.int32( 10 ),
      maxNRegions = cms.int32( 100 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 3.0 ),
      ptMin = cms.double( 0.8 ),
      points = cms.PSet( 
        phi = cms.vdouble( 2.1, -3.0 ),
        eta = cms.vdouble( 1.8, -0.8 )
      ),
      mode = cms.string( "VerticesFixed" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.05 ),
      measurementTrackerName = cms.InputTag( "hltTripletRecoveryMaskedMeasurementTrackerEvent" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.8 ),
      deltaPhi = cms.double( 0.4 )
    )
)
process.hltTripletRecoveryPFlowPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False ),
    MaxNumberOfCosmicClusters = cms.uint32( 50000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    doClusterCheck = cms.bool( False ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    ClusterCollectionLabel = cms.InputTag( "hltSiStripClusters" )
)
process.hltTripletRecoveryPFlowPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltTripletRecoveryPFlowPixelTrackingRegions" ),
    layerPairs = cms.vuint32( 0, 1 ),
    clusterCheck = cms.InputTag( "hltTripletRecoveryPFlowPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltTripletRecoveryPixelLayerTriplets" )
)
process.hltTripletRecoveryPFlowPixelHitTriplets = cms.EDProducer( "CAHitTripletEDProducer",
    CAHardPtCut = cms.double( 0.3 ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltTripletRecoveryPFlowPixelHitDoublets" ),
    CAThetaCut = cms.double( 0.004 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 50.0 ),
      value1 = cms.double( 100.0 ),
      pt1 = cms.double( 0.8 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 8.0 )
    ),
    CAPhiCut = cms.double( 0.1 ),
    useBendingCorrection = cms.bool( True )
)
process.hltTripletRecoveryPFlowPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltTripletRecoveryPFlowPixelHitTriplets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltTripletRecoveryPFlowCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltTripletRecoveryPFlowPixelSeeds" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltTripletRecoveryMaskedMeasurementTrackerEvent" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2GroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltTripletRecoveryPFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltTripletRecoveryPFlowCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltTripletRecoveryMaskedMeasurementTrackerEvent" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltTripletRecovery" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltTripletRecoveryPFlowTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltTripletRecoveryPFlowCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltTripletRecoveryPFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltTripletRecoveryPFlowCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltTripletRecoveryPFlowTrackCutClassifier','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltTripletRecoveryPFlowTrackCutClassifier','MVAValues' )
)
process.hltTripletRecoveryMerged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter2Merged','hltTripletRecoveryPFlowTrackSelectionHighPurity' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIter2Merged','hltTripletRecoveryPFlowTrackSelectionHighPurity' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltDoubletRecoveryClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 16.0 ),
    trajectories = cms.InputTag( "hltTripletRecoveryPFlowTrackSelectionHighPurity" ),
    oldClusterRemovalInfo = cms.InputTag( "hltTripletRecoveryClustersRefRemoval" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    TrackQuality = cms.string( "highPurity" )
)
process.hltDoubletRecoveryMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    clustersToSkip = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" ),
    OnDemand = cms.bool( False ),
    src = cms.InputTag( "hltSiStripClusters" )
)
process.hltDoubletRecoveryPixelLayerPairs = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix4',
      'BPix1+BPix2',
      'BPix1+BPix3',
      'BPix2+BPix3',
      'BPix1+FPix1_pos',
      'BPix1+FPix1_pos',
      'BPix1+FPix1_pos',
      'BPix2+FPix1_neg',
      'BPix3+BPix4',
      'BPix3+FPix1_pos',
      'FPix1_pos+FPix2_pos' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  )
)
process.hltDoubletRecoveryPFlowPixelTrackingRegions = cms.EDProducer( "PointSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
      zErrorVetex = cms.double( 0.1 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      maxNVertices = cms.int32( 10 ),
      maxNRegions = cms.int32( 100 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 3.0 ),
      ptMin = cms.double( 0.8 ),
      points = cms.PSet( 
        phi = cms.vdouble( 3.0 ),
        eta = cms.vdouble( 0.8 )
      ),
      mode = cms.string( "VerticesFixed" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.02 ),
      measurementTrackerName = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.9 ),
      deltaPhi = cms.double( 0.3 )
    )
)
process.hltDoubletRecoveryPFlowPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False ),
    MaxNumberOfCosmicClusters = cms.uint32( 50000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    doClusterCheck = cms.bool( False ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    ClusterCollectionLabel = cms.InputTag( "hltSiStripClusters" )
)
process.hltDoubletRecoveryPFlowPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltDoubletRecoveryPFlowPixelTrackingRegions" ),
    layerPairs = cms.vuint32( 0 ),
    clusterCheck = cms.InputTag( "hltDoubletRecoveryPFlowPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( False ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltDoubletRecoveryPixelLayerPairs" )
)
process.hltDoubletRecoveryPFlowPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltDoubletRecoveryPFlowPixelHitDoublets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltDoubletRecoveryPFlowCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltDoubletRecoveryPFlowPixelSeeds" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2GroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltDoubletRecoveryPFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltDoubletRecoveryPFlowCkfTrackCandidates" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltDoubletRecovery" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltDoubletRecoveryPFlowTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltDoubletRecoveryPFlowCtfWithMaterialTracks" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltDoubletRecoveryPFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltDoubletRecoveryPFlowCtfWithMaterialTracks" ),
    originalQualVals = cms.InputTag( 'hltDoubletRecoveryPFlowTrackCutClassifier','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltDoubletRecoveryPFlowTrackCutClassifier','MVAValues' )
)
process.hltMergedTracks = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltTripletRecoveryMerged','hltDoubletRecoveryPFlowTrackSelectionHighPurity' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltTripletRecoveryMerged','hltDoubletRecoveryPFlowTrackSelectionHighPurity' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltPFMuonMerging = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3MuonAndMuonFromL1Merged','hltMergedTracks' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIterL3MuonAndMuonFromL1Merged','hltMergedTracks' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltMuonLinks = cms.EDProducer( "MuonLinksProducerForHLT",
    pMin = cms.double( 2.5 ),
    InclusiveTrackerTrackCollection = cms.InputTag( "hltPFMuonMerging" ),
    shareHitFraction = cms.double( 0.8 ),
    LinkCollection = cms.InputTag( "hltL3MuonsIterL3Links" ),
    ptMin = cms.double( 2.5 )
)
process.hltMuons = cms.EDProducer( "MuonIdProducer",
    TrackExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltPFMuonMerging" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "" ),
      NHits_Min = cms.uint32( 0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "TrackExtractor" )
    ),
    maxAbsEta = cms.double( 3.0 ),
    fillGlobalTrackRefits = cms.bool( False ),
    arbitrationCleanerOptions = cms.PSet( 
      OverlapDTheta = cms.double( 0.02 ),
      Overlap = cms.bool( True ),
      Clustering = cms.bool( True ),
      ME1a = cms.bool( True ),
      ClusterDTheta = cms.double( 0.02 ),
      ClusterDPhi = cms.double( 0.6 ),
      OverlapDPhi = cms.double( 0.0786 )
    ),
    globalTrackQualityInputTag = cms.InputTag( "glbTrackQual" ),
    addExtraSoftMuons = cms.bool( False ),
    debugWithTruthMatching = cms.bool( False ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      CenterConeOnCalIntersection = cms.bool( False ),
      NoiseTow_EE = cms.double( 0.15 ),
      Noise_EB = cms.double( 0.025 ),
      Noise_HE = cms.double( 0.2 ),
      DR_Veto_E = cms.double( 0.07 ),
      NoiseTow_EB = cms.double( 0.04 ),
      Noise_EE = cms.double( 0.1 ),
      UseRecHitsFlag = cms.bool( False ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "Cal" ),
      Noise_HO = cms.double( 0.2 ),
      DR_Veto_HO = cms.double( 0.1 ),
      Threshold_H = cms.double( 0.5 ),
      PrintTimeReport = cms.untracked.bool( False ),
      Threshold_E = cms.double( 0.2 ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "CaloExtractorByAssociator" ),
      Threshold_HO = cms.double( 0.5 ),
      DepositInstanceLabels = cms.vstring( 'ecal',
        'hcal',
        'ho' ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 1.0 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForPF" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 1.0 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        dRHcal = cms.double( 1.0 ),
        dRHcalPreselection = cms.double( 1.0 ),
        HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
      ),
      Noise_HB = cms.double( 0.2 )
    ),
    runArbitrationCleaner = cms.bool( False ),
    fillEnergy = cms.bool( True ),
    TrackerKinkFinderParameters = cms.PSet( 
      usePosition = cms.bool( False ),
      diagonalOnly = cms.bool( False )
    ),
    TimingFillerParameters = cms.PSet( 
      DTTimingParameters = cms.PSet( 
        HitError = cms.double( 6.0 ),
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        DoWireCorr = cms.bool( False ),
        RequireBothProjections = cms.bool( False ),
        DTTimeOffset = cms.double( 2.7 ),
        PruneCut = cms.double( 10000.0 ),
        DTsegments = cms.InputTag( "hltDt4DSegments" ),
        UseSegmentT0 = cms.bool( False ),
        HitsMin = cms.int32( 5 ),
        DropTheta = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      UseCSC = cms.bool( True ),
      CSCTimingParameters = cms.PSet( 
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        CSCWireTimeOffset = cms.double( 0.0 ),
        CSCStripError = cms.double( 7.0 ),
        CSCTimeOffset = cms.double( 0.0 ),
        CSCWireError = cms.double( 8.6 ),
        PruneCut = cms.double( 100.0 ),
        CSCsegments = cms.InputTag( "hltCscSegments" ),
        UseStripTime = cms.bool( True ),
        CSCStripTimeOffset = cms.double( 0.0 ),
        UseWireTime = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      ErrorDT = cms.double( 6.0 ),
      EcalEnergyCut = cms.double( 0.4 ),
      UseECAL = cms.bool( True ),
      ErrorEB = cms.double( 2.085 ),
      UseDT = cms.bool( True ),
      ErrorEE = cms.double( 6.95 ),
      ErrorCSC = cms.double( 7.4 )
    ),
    inputCollectionTypes = cms.vstring( 'inner tracks',
      'links',
      'outer tracks' ),
    arbitrateTrackerMuons = cms.bool( False ),
    minCaloCompatibility = cms.double( 0.6 ),
    ecalDepositName = cms.string( "ecal" ),
    minP = cms.double( 10.0 ),
    fillIsolation = cms.bool( True ),
    jetDepositName = cms.string( "jets" ),
    hoDepositName = cms.string( "ho" ),
    writeIsoDeposits = cms.bool( False ),
    maxAbsPullX = cms.double( 4.0 ),
    maxAbsPullY = cms.double( 9999.0 ),
    minPt = cms.double( 10.0 ),
    TrackAssociatorParameters = cms.PSet( 
      useMuon = cms.bool( True ),
      truthMatch = cms.bool( False ),
      usePreshower = cms.bool( False ),
      dRPreshowerPreselection = cms.double( 0.2 ),
      muonMaxDistanceSigmaY = cms.double( 0.0 ),
      useEcal = cms.bool( True ),
      muonMaxDistanceSigmaX = cms.double( 0.0 ),
      dRMuon = cms.double( 9999.0 ),
      dREcal = cms.double( 9999.0 ),
      CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
      DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
      EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForPF" ),
      propagateAllDirections = cms.bool( True ),
      muonMaxDistanceY = cms.double( 5.0 ),
      useHO = cms.bool( True ),
      muonMaxDistanceX = cms.double( 5.0 ),
      trajectoryUncertaintyTolerance = cms.double( -1.0 ),
      useHcal = cms.bool( True ),
      HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
      accountForTrajectoryChangeCalo = cms.bool( False ),
      dREcalPreselection = cms.double( 0.05 ),
      useCalo = cms.bool( False ),
      dRMuonPreselection = cms.double( 0.2 ),
      EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      dRHcal = cms.double( 9999.0 ),
      dRHcalPreselection = cms.double( 0.2 ),
      HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
    ),
    JetExtractorPSet = cms.PSet( 
      JetCollectionLabel = cms.InputTag( "hltAK4CaloJetsPFEt5" ),
      DR_Veto = cms.double( 0.1 ),
      DR_Max = cms.double( 1.0 ),
      ExcludeMuonVeto = cms.bool( True ),
      PrintTimeReport = cms.untracked.bool( False ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "JetExtractor" ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 0.5 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForPF" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 0.5 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        dRHcal = cms.double( 0.5 ),
        dRHcalPreselection = cms.double( 0.5 ),
        HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
      ),
      Threshold = cms.double( 5.0 )
    ),
    fillGlobalTrackQuality = cms.bool( False ),
    minPCaloMuon = cms.double( 1.0E9 ),
    maxAbsDy = cms.double( 9999.0 ),
    fillCaloCompatibility = cms.bool( True ),
    fillMatching = cms.bool( True ),
    MuonCaloCompatibility = cms.PSet( 
      delta_eta = cms.double( 0.02 ),
      delta_phi = cms.double( 0.02 ),
      allSiPMHO = cms.bool( False ),
      MuonTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root" ),
      PionTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root" )
    ),
    fillTrackerKink = cms.bool( False ),
    hcalDepositName = cms.string( "hcal" ),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double( 2.0 ),
    inputCollectionLabels = cms.VInputTag( 'hltPFMuonMerging','hltMuonLinks','hltL2Muons' ),
    trackDepositName = cms.string( "tracker" ),
    maxAbsDx = cms.double( 3.0 ),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double( 200.0 ),
    minNumberOfMatches = cms.int32( 1 )
)
process.hltParticleFlowRecHitHBHE = cms.EDProducer( "PFRecHitProducer",
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( "hltHbhereco" ),
        name = cms.string( "PFHBHERecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  threshold = cms.double( 0.8 ),
            name = cms.string( "PFRecHitQTestThreshold" )
          ),
          cms.PSet(  flags = cms.vstring( 'Standard' ),
            cleaningThresholds = cms.vdouble( 0.0 ),
            name = cms.string( "PFRecHitQTestHCALChannel" ),
            maxSeverities = cms.vint32( 11 )
          )
        )
      )
    ),
    navigator = cms.PSet( 
      name = cms.string( "PFRecHitHCALNavigator" ),
      sigmaCut = cms.double( 4.0 ),
      timeResolutionCalc = cms.PSet( 
        corrTermLowE = cms.double( 0.0 ),
        threshLowE = cms.double( 2.0 ),
        noiseTerm = cms.double( 8.64 ),
        constantTermLowE = cms.double( 6.0 ),
        noiseTermLowE = cms.double( 0.0 ),
        threshHighE = cms.double( 8.0 ),
        constantTerm = cms.double( 1.92 )
      )
    )
)
process.hltParticleFlowRecHitHF = cms.EDProducer( "PFRecHitProducer",
    producers = cms.VPSet( 
      cms.PSet(  thresh_HF = cms.double( 0.4 ),
        LongFibre_Fraction = cms.double( 0.1 ),
        src = cms.InputTag( "hltHfreco" ),
        EMDepthCorrection = cms.double( 22.0 ),
        ShortFibre_Fraction = cms.double( 0.01 ),
        HADDepthCorrection = cms.double( 25.0 ),
        HFCalib29 = cms.double( 1.07 ),
        LongFibre_Cut = cms.double( 120.0 ),
        name = cms.string( "PFHFRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  flags = cms.vstring( 'Standard',
  'HFLong',
  'HFShort' ),
            cleaningThresholds = cms.vdouble( 0.0, 120.0, 60.0 ),
            name = cms.string( "PFRecHitQTestHCALChannel" ),
            maxSeverities = cms.vint32( 11, 9, 9 )
          ),
          cms.PSet(  name = cms.string( "PFRecHitQTestHCALThresholdVsDepth" ),
            cuts = cms.VPSet( 
              cms.PSet(  threshold = cms.double( 1.2 ),
                depth = cms.int32( 1 )
              ),
              cms.PSet(  threshold = cms.double( 1.8 ),
                depth = cms.int32( 2 )
              )
            )
          )
        ),
        ShortFibre_Cut = cms.double( 60.0 )
      )
    ),
    navigator = cms.PSet( 
      barrel = cms.PSet(  ),
      endcap = cms.PSet(  ),
      name = cms.string( "PFRecHitHCALNavigator" )
    )
)
process.hltParticleFlowClusterHBHE = cms.EDProducer( "PFClusterProducer",
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 5 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.8 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      minChi2Prob = cms.double( 0.0 ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.8 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.8 ),
          detector = cms.string( "HCAL_BARREL1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.8 ),
          detector = cms.string( "HCAL_ENDCAP" )
        )
      ),
      maxNSigmaTime = cms.double( 10.0 ),
      showerSigma = cms.double( 10.0 ),
      timeSigmaEE = cms.double( 10.0 ),
      clusterTimeResFromSeed = cms.bool( False ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True ),
      timeResolutionCalcBarrel = cms.PSet( 
        corrTermLowE = cms.double( 0.0 ),
        threshLowE = cms.double( 6.0 ),
        noiseTerm = cms.double( 21.86 ),
        constantTermLowE = cms.double( 4.24 ),
        noiseTermLowE = cms.double( 8.0 ),
        threshHighE = cms.double( 15.0 ),
        constantTerm = cms.double( 2.82 )
      ),
      timeResolutionCalcEndcap = cms.PSet( 
        corrTermLowE = cms.double( 0.0 ),
        threshLowE = cms.double( 6.0 ),
        noiseTerm = cms.double( 21.86 ),
        constantTermLowE = cms.double( 4.24 ),
        noiseTermLowE = cms.double( 8.0 ),
        threshHighE = cms.double( 15.0 ),
        constantTerm = cms.double( 2.82 )
      ),
      timeSigmaEB = cms.double( 10.0 )
    ),
    positionReCalc = cms.PSet(  ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.8 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "HCAL_BARREL1" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.8 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "HCAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( True )
    ),
    energyCorrector = cms.PSet(  ),
    recHitCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.0 ),
          detector = cms.string( "HCAL_BARREL1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.1 ),
          detector = cms.string( "HCAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 4 )
    ),
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitHBHE" )
)
process.hltParticleFlowClusterHCAL = cms.EDProducer( "PFMultiDepthClusterProducer",
    pfClusterBuilder = cms.PSet( 
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.8 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      algoName = cms.string( "PFMultiDepthClusterizer" ),
      nSigmaPhi = cms.double( 2.0 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      nSigmaEta = cms.double( 2.0 )
    ),
    energyCorrector = cms.PSet(  ),
    positionReCalc = cms.PSet(  ),
    clustersSource = cms.InputTag( "hltParticleFlowClusterHBHE" )
)
process.hltParticleFlowClusterHF = cms.EDProducer( "PFClusterProducer",
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 5 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.8 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.8 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.8 ),
          detector = cms.string( "HF_EM" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.8 ),
          detector = cms.string( "HF_HAD" )
        )
      ),
      showerSigma = cms.double( 0.0 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet(  ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.8 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "HF_EM" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.8 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "HF_HAD" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( False )
    ),
    energyCorrector = cms.PSet(  ),
    recHitCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.4 ),
          detector = cms.string( "HF_EM" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.4 ),
          detector = cms.string( "HF_HAD" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 0 )
    ),
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitHF" )
)
process.hltLightPFTracks = cms.EDProducer( "LightPFTrackProducer",
    TrackQuality = cms.string( "none" ),
    UseQuality = cms.bool( False ),
    TkColList = cms.VInputTag( 'hltPFMuonMerging' )
)
process.hltParticleFlowBlock = cms.EDProducer( "PFBlockProducer",
    debug = cms.untracked.bool( False ),
    linkDefinitions = cms.VPSet( 
      cms.PSet(  linkType = cms.string( "PS1:ECAL" ),
        useKDTree = cms.bool( True ),
        linkerName = cms.string( "PreshowerAndECALLinker" )
      ),
      cms.PSet(  linkType = cms.string( "PS2:ECAL" ),
        useKDTree = cms.bool( True ),
        linkerName = cms.string( "PreshowerAndECALLinker" )
      ),
      cms.PSet(  linkType = cms.string( "TRACK:ECAL" ),
        useKDTree = cms.bool( True ),
        linkerName = cms.string( "TrackAndECALLinker" )
      ),
      cms.PSet(  linkType = cms.string( "TRACK:HCAL" ),
        useKDTree = cms.bool( True ),
        linkerName = cms.string( "TrackAndHCALLinker" )
      ),
      cms.PSet(  linkType = cms.string( "ECAL:HCAL" ),
        useKDTree = cms.bool( False ),
        linkerName = cms.string( "ECALAndHCALLinker" )
      ),
      cms.PSet(  linkType = cms.string( "HFEM:HFHAD" ),
        useKDTree = cms.bool( False ),
        linkerName = cms.string( "HFEMAndHFHADLinker" )
      )
    ),
    elementImporters = cms.VPSet( 
      cms.PSet(  muonSrc = cms.InputTag( "hltMuons" ),
        source = cms.InputTag( "hltLightPFTracks" ),
        NHitCuts_byTrackAlgo = cms.vuint32( 3, 3, 3, 3, 3, 3 ),
        useIterativeTracking = cms.bool( False ),
        importerName = cms.string( "GeneralTracksImporter" ),
        DPtOverPtCuts_byTrackAlgo = cms.vdouble( 0.5, 0.5, 0.5, 0.5, 0.5, 0.5 )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
        importerName = cms.string( "ECALClusterImporter" ),
        BCtoPFCMap = cms.InputTag( "" )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterHCAL" ),
        importerName = cms.string( "GenericClusterImporter" )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterHF" ),
        importerName = cms.string( "GenericClusterImporter" )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterPSUnseeded" ),
        importerName = cms.string( "GenericClusterImporter" )
      )
    ),
    verbose = cms.untracked.bool( False )
)
process.hltParticleFlow = cms.EDProducer( "PFProducer",
    photon_SigmaiEtaiEta_endcap = cms.double( 0.034 ),
    minPtForPostCleaning = cms.double( 20.0 ),
    pf_nsigma_ECAL = cms.double( 0.0 ),
    GedPhotonValueMap = cms.InputTag( 'tmpGedPhotons','valMapPFEgammaCandToPhoton' ),
    sumPtTrackIsoForPhoton = cms.double( -1.0 ),
    calibrationsLabel = cms.string( "HLT" ),
    metFactorForFakes = cms.double( 4.0 ),
    muon_HO = cms.vdouble( 0.9, 0.9 ),
    electron_missinghits = cms.uint32( 1 ),
    metSignificanceForCleaning = cms.double( 3.0 ),
    usePFPhotons = cms.bool( False ),
    dptRel_DispVtx = cms.double( 10.0 ),
    nTrackIsoForEgammaSC = cms.uint32( 2 ),
    pf_nsigma_HCAL = cms.double( 1.0 ),
    cosmicRejectionDistance = cms.double( 1.0 ),
    useEGammaFilters = cms.bool( False ),
    useEGammaElectrons = cms.bool( False ),
    nsigma_TRACK = cms.double( 1.0 ),
    useEGammaSupercluster = cms.bool( False ),
    sumPtTrackIsoForEgammaSC_barrel = cms.double( 4.0 ),
    eventFractionForCleaning = cms.double( 0.5 ),
    usePFDecays = cms.bool( False ),
    rejectTracks_Step45 = cms.bool( False ),
    eventFractionForRejection = cms.double( 0.8 ),
    photon_MinEt = cms.double( 10.0 ),
    usePFNuclearInteractions = cms.bool( False ),
    maxSignificance = cms.double( 2.5 ),
    electron_iso_mva_endcap = cms.double( -0.1075 ),
    debug = cms.untracked.bool( False ),
    pf_convID_mvaWeightFile = cms.string( "RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_pfConversionAug0411.txt" ),
    calibHF_eta_step = cms.vdouble( 0.0, 2.9, 3.0, 3.2, 4.2, 4.4, 4.6, 4.8, 5.2, 5.4 ),
    ptErrorScale = cms.double( 8.0 ),
    minSignificance = cms.double( 2.5 ),
    minMomentumForPunchThrough = cms.double( 100.0 ),
    pf_conv_mvaCut = cms.double( 0.0 ),
    useCalibrationsFromDB = cms.bool( True ),
    usePFElectrons = cms.bool( False ),
    electron_iso_combIso_endcap = cms.double( 10.0 ),
    photon_combIso = cms.double( 10.0 ),
    electron_iso_mva_barrel = cms.double( -0.1875 ),
    postHFCleaning = cms.bool( False ),
    factors_45 = cms.vdouble( 10.0, 100.0 ),
    cleanedHF = cms.VInputTag( 'hltParticleFlowRecHitHF:Cleaned','hltParticleFlowClusterHF:Cleaned' ),
    coneEcalIsoForEgammaSC = cms.double( 0.3 ),
    egammaElectrons = cms.InputTag( "" ),
    photon_SigmaiEtaiEta_barrel = cms.double( 0.0125 ),
    calibHF_b_HADonly = cms.vdouble( 1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 0.94348, 0.9437, 1.0034, 1.0444, 1.0444 ),
    minPixelHits = cms.int32( 1 ),
    maxDPtOPt = cms.double( 1.0 ),
    useHO = cms.bool( False ),
    pf_electron_output_col = cms.string( "electrons" ),
    electron_noniso_mvaCut = cms.double( -0.1 ),
    GedElectronValueMap = cms.InputTag( "gedGsfElectronsTmp" ),
    useVerticesForNeutral = cms.bool( True ),
    trackQuality = cms.string( "highPurity" ),
    PFEGammaCandidates = cms.InputTag( "particleFlowEGamma" ),
    sumPtTrackIsoSlopeForPhoton = cms.double( -1.0 ),
    coneTrackIsoForEgammaSC = cms.double( 0.3 ),
    minDeltaMet = cms.double( 0.4 ),
    punchThroughMETFactor = cms.double( 4.0 ),
    useProtectionsForJetMET = cms.bool( True ),
    metFactorForRejection = cms.double( 4.0 ),
    sumPtTrackIsoForEgammaSC_endcap = cms.double( 4.0 ),
    calibHF_use = cms.bool( False ),
    verbose = cms.untracked.bool( False ),
    usePFConversions = cms.bool( False ),
    calibPFSCEle_endcap = cms.vdouble( 1.153, -16.5975, 5.668, -0.1772, 16.22, 7.326, 0.0483, -4.068, 9.406 ),
    metFactorForCleaning = cms.double( 4.0 ),
    eventFactorForCosmics = cms.double( 10.0 ),
    minSignificanceReduction = cms.double( 1.4 ),
    minEnergyForPunchThrough = cms.double( 100.0 ),
    minTrackerHits = cms.int32( 8 ),
    iCfgCandConnector = cms.PSet( 
      nuclCalibFactors = cms.vdouble( 0.8, 0.15, 0.5, 0.5, 0.05 ),
      bCalibSecondary = cms.bool( False ),
      bCorrect = cms.bool( False ),
      bCalibPrimary = cms.bool( False )
    ),
    rejectTracks_Bad = cms.bool( False ),
    pf_electronID_crackCorrection = cms.bool( False ),
    pf_locC_mvaWeightFile = cms.string( "RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFClusterLCorr_14Dec2011.root" ),
    calibHF_a_EMonly = cms.vdouble( 0.96945, 0.96701, 0.76309, 0.82268, 0.87583, 0.89718, 0.98674, 1.4681, 1.458, 1.458 ),
    pf_Res_mvaWeightFile = cms.string( "RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFRes_14Dec2011.root" ),
    metFactorForHighEta = cms.double( 25.0 ),
    minHFCleaningPt = cms.double( 5.0 ),
    muon_HCAL = cms.vdouble( 3.0, 3.0 ),
    pf_electron_mvaCut = cms.double( -0.1 ),
    ptFactorForHighEta = cms.double( 2.0 ),
    maxDeltaPhiPt = cms.double( 7.0 ),
    pf_electronID_mvaWeightFile = cms.string( "RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_PfElectrons23Jan_IntToFloat.txt" ),
    sumEtEcalIsoForEgammaSC_endcap = cms.double( 2.0 ),
    calibHF_b_EMHAD = cms.vdouble( 1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 0.94348, 0.9437, 1.0034, 1.0444, 1.0444 ),
    pf_GlobC_mvaWeightFile = cms.string( "RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFGlobalCorr_14Dec2011.root" ),
    photon_HoE = cms.double( 0.05 ),
    sumEtEcalIsoForEgammaSC_barrel = cms.double( 1.0 ),
    calibPFSCEle_Fbrem_endcap = cms.vdouble( 0.9, 6.5, -0.0692932, 0.101776, 0.995338, -0.00236548, 0.874998, 1.653, -0.0750184, 0.147, 0.923165, 4.74665E-4, 1.10782 ),
    punchThroughFactor = cms.double( 3.0 ),
    algoType = cms.uint32( 0 ),
    electron_iso_combIso_barrel = cms.double( 10.0 ),
    muons = cms.InputTag( "hltMuons" ),
    postMuonCleaning = cms.bool( True ),
    calibPFSCEle_barrel = cms.vdouble( 1.004, -1.536, 22.88, -1.467, 0.3555, 0.6227, 14.65, 2051.0, 25.0, 0.9932, -0.5444, 0.0, 0.5438, 0.7109, 7.645, 0.2904, 0.0 ),
    electron_protectionsForJetMET = cms.PSet( 
      maxEeleOverPoutRes = cms.double( 0.5 ),
      maxEleHcalEOverEcalE = cms.double( 0.1 ),
      maxEcalEOverPRes = cms.double( 0.2 ),
      maxHcalEOverP = cms.double( 1.0 ),
      maxE = cms.double( 50.0 ),
      maxTrackPOverEele = cms.double( 1.0 ),
      maxDPhiIN = cms.double( 0.1 ),
      maxEcalEOverP_2 = cms.double( 0.2 ),
      maxEcalEOverP_1 = cms.double( 0.5 ),
      maxEeleOverPout = cms.double( 0.2 ),
      maxHcalEOverEcalE = cms.double( 0.1 ),
      maxHcalE = cms.double( 10.0 ),
      maxNtracks = cms.double( 3.0 )
    ),
    electron_iso_pt = cms.double( 10.0 ),
    isolatedElectronID_mvaWeightFile = cms.string( "RecoEgamma/ElectronIdentification/data/TMVA_BDTSimpleCat_17Feb2011.weights.xml" ),
    vertexCollection = cms.InputTag( "hltPixelVertices" ),
    X0_Map = cms.string( "RecoParticleFlow/PFProducer/data/allX0histos.root" ),
    calibPFSCEle_Fbrem_barrel = cms.vdouble( 0.6, 6.0, -0.0255975, 0.0576727, 0.975442, -5.46394E-4, 1.26147, 25.0, -0.02025, 0.04537, 0.9728, -8.962E-4, 1.172 ),
    blocks = cms.InputTag( "hltParticleFlowBlock" ),
    pt_Error = cms.double( 1.0 ),
    metSignificanceForRejection = cms.double( 4.0 ),
    photon_protectionsForJetMET = cms.PSet( 
      sumPtTrackIsoSlope = cms.double( 0.001 ),
      sumPtTrackIso = cms.double( 2.0 )
    ),
    usePhotonReg = cms.bool( False ),
    dzPV = cms.double( 0.2 ),
    calibHF_a_EMHAD = cms.vdouble( 1.42215, 1.00496, 0.68961, 0.81656, 0.98504, 0.98504, 1.00802, 1.0593, 1.4576, 1.4576 ),
    useRegressionFromDB = cms.bool( False ),
    muon_ECAL = cms.vdouble( 0.5, 0.5 ),
    usePFSCEleCalib = cms.bool( True )
)
process.hltAK4PFJets = cms.EDProducer( "FastjetJetProducer",
    Active_Area_Repeats = cms.int32( 5 ),
    useMassDropTagger = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    muMin = cms.double( -1.0 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    doAreaDiskApprox = cms.bool( True ),
    subtractorName = cms.string( "" ),
    dRMax = cms.double( -1.0 ),
    useExplicitGhosts = cms.bool( False ),
    puWidth = cms.double( 0.0 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    R0 = cms.double( -1.0 ),
    jetType = cms.string( "PFJet" ),
    muCut = cms.double( -1.0 ),
    subjetPtMin = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    MinVtxNdof = cms.int32( 0 ),
    minSeed = cms.uint32( 0 ),
    voronoiRfact = cms.double( -9.0 ),
    doRhoFastjet = cms.bool( False ),
    jetAlgorithm = cms.string( "AntiKt" ),
    writeCompound = cms.bool( False ),
    muMax = cms.double( -1.0 ),
    nSigmaPU = cms.double( 1.0 ),
    GhostArea = cms.double( 0.01 ),
    Rho_EtaMax = cms.double( 4.4 ),
    restrictInputs = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    nExclude = cms.uint32( 0 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    yMin = cms.double( -1.0 ),
    jetCollInstanceName = cms.string( "" ),
    useFiltering = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    rFiltFactor = cms.double( -1.0 ),
    useDeterministicSeed = cms.bool( True ),
    doPVCorrection = cms.bool( False ),
    rFilt = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    useTrimming = cms.bool( False ),
    puCenters = cms.vdouble(  ),
    MaxVtxZ = cms.double( 15.0 ),
    rParam = cms.double( 0.4 ),
    csRho_EtaMax = cms.double( -1.0 ),
    UseOnlyVertexTracks = cms.bool( False ),
    dRMin = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    doFastJetNonUniform = cms.bool( False ),
    usePruning = cms.bool( False ),
    maxDepth = cms.int32( -1 ),
    yCut = cms.double( -1.0 ),
    useSoftDrop = cms.bool( False ),
    DzTrVtxMax = cms.double( 0.0 ),
    UseOnlyOnePV = cms.bool( False ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    correctShape = cms.bool( False ),
    rcut_factor = cms.double( -1.0 ),
    src = cms.InputTag( "hltParticleFlow" ),
    gridMaxRapidity = cms.double( -1.0 ),
    sumRecHits = cms.bool( False ),
    jetPtMin = cms.double( 0.0 ),
    puPtMin = cms.double( 10.0 ),
    srcPVs = cms.InputTag( "hltPixelVertices" ),
    verbosity = cms.int32( 0 ),
    inputEtMin = cms.double( 0.0 ),
    useConstituentSubtraction = cms.bool( False ),
    beta = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    radiusPU = cms.double( 0.4 ),
    nFilt = cms.int32( -1 ),
    useKtPruning = cms.bool( False ),
    DxyTrVtxMax = cms.double( 0.0 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    inputEMin = cms.double( 0.0 )
)
process.hltAK4PFJetsLooseID = cms.EDProducer( "HLTPFJetIDProducer",
    CEF = cms.double( 0.99 ),
    NHF = cms.double( 0.99 ),
    minPt = cms.double( 20.0 ),
    CHF = cms.double( 0.0 ),
    jetsInput = cms.InputTag( "hltAK4PFJets" ),
    NEF = cms.double( 0.99 ),
    NTOT = cms.int32( 1 ),
    NCH = cms.int32( 0 ),
    maxEta = cms.double( 1.0E99 ),
    maxCF = cms.double( 99.0 )
)
process.hltAK4PFJetsTightID = cms.EDProducer( "HLTPFJetIDProducer",
    CEF = cms.double( 0.99 ),
    NHF = cms.double( 0.9 ),
    minPt = cms.double( 20.0 ),
    CHF = cms.double( 0.0 ),
    jetsInput = cms.InputTag( "hltAK4PFJets" ),
    NEF = cms.double( 0.99 ),
    NTOT = cms.int32( 1 ),
    NCH = cms.int32( 0 ),
    maxEta = cms.double( 1.0E99 ),
    maxCF = cms.double( 99.0 )
)
process.hltFixedGridRhoFastjetAll = cms.EDProducer( "FixedGridRhoProducerFastjet",
    gridSpacing = cms.double( 0.55 ),
    maxRapidity = cms.double( 5.0 ),
    pfCandidatesTag = cms.InputTag( "hltParticleFlow" )
)
process.hltAK4PFFastJetCorrector = cms.EDProducer( "L1FastjetCorrectorProducer",
    srcRho = cms.InputTag( "hltFixedGridRhoFastjetAll" ),
    algorithm = cms.string( "AK4PFHLT" ),
    level = cms.string( "L1FastJet" )
)
process.hltAK4PFRelativeCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    algorithm = cms.string( "AK4PFHLT" ),
    level = cms.string( "L2Relative" )
)
process.hltAK4PFAbsoluteCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    algorithm = cms.string( "AK4PFHLT" ),
    level = cms.string( "L3Absolute" )
)
process.hltAK4PFResidualCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    algorithm = cms.string( "AK4PFHLT" ),
    level = cms.string( "L2L3Residual" )
)
process.hltAK4PFCorrector = cms.EDProducer( "ChainedJetCorrectorProducer",
    correctors = cms.VInputTag( 'hltAK4PFFastJetCorrector','hltAK4PFRelativeCorrector','hltAK4PFAbsoluteCorrector','hltAK4PFResidualCorrector' )
)
process.hltAK4PFJetsCorrected = cms.EDProducer( "CorrectedPFJetProducer",
    src = cms.InputTag( "hltAK4PFJets" ),
    correctors = cms.VInputTag( 'hltAK4PFCorrector' )
)
process.hltAK4PFJetsLooseIDCorrected = cms.EDProducer( "CorrectedPFJetProducer",
    src = cms.InputTag( "hltAK4PFJetsLooseID" ),
    correctors = cms.VInputTag( 'hltAK4PFCorrector' )
)
process.hltAK4PFJetsTightIDCorrected = cms.EDProducer( "CorrectedPFJetProducer",
    src = cms.InputTag( "hltAK4PFJetsTightID" ),
    correctors = cms.VInputTag( 'hltAK4PFCorrector' )
)
process.hltVerticesPF = cms.EDProducer( "PrimaryVertexProducer",
    vertexCollections = cms.VPSet( 
      cms.PSet(  chi2cutoff = cms.double( 3.0 ),
        label = cms.string( "" ),
        useBeamConstraint = cms.bool( False ),
        minNdof = cms.double( 0.0 ),
        maxDistanceToBeam = cms.double( 1.0 ),
        algorithm = cms.string( "AdaptiveVertexFitter" )
      ),
      cms.PSet(  chi2cutoff = cms.double( 3.0 ),
        label = cms.string( "WithBS" ),
        useBeamConstraint = cms.bool( True ),
        minNdof = cms.double( 0.0 ),
        maxDistanceToBeam = cms.double( 1.0 ),
        algorithm = cms.string( "AdaptiveVertexFitter" )
      )
    ),
    verbose = cms.untracked.bool( False ),
    TkFilterParameters = cms.PSet( 
      maxEta = cms.double( 100.0 ),
      minPt = cms.double( 0.0 ),
      minSiliconLayersWithHits = cms.int32( 5 ),
      minPixelLayersWithHits = cms.int32( 2 ),
      maxNormalizedChi2 = cms.double( 20.0 ),
      trackQuality = cms.string( "any" ),
      algorithm = cms.string( "filter" ),
      maxD0Significance = cms.double( 999.0 )
    ),
    beamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
    TrackLabel = cms.InputTag( "hltPFMuonMerging" ),
    TkClusParameters = cms.PSet( 
      TkDAClusParameters = cms.PSet( 
        zmerge = cms.double( 0.01 ),
        Tstop = cms.double( 0.5 ),
        d0CutOff = cms.double( 999.0 ),
        dzCutOff = cms.double( 4.0 ),
        vertexSize = cms.double( 0.15 ),
        coolingFactor = cms.double( 0.6 ),
        Tpurge = cms.double( 2.0 ),
        Tmin = cms.double( 2.4 ),
        uniquetrkweight = cms.double( 0.9 ),
        use_vdt = cms.untracked.bool( True )
      ),
      algorithm = cms.string( "DA_vect" )
    )
)
process.hltVerticesPFSelector = cms.EDFilter( "PrimaryVertexObjectFilter",
    src = cms.InputTag( "hltVerticesPF" ),
    filterParams = cms.PSet( 
      maxZ = cms.double( 24.0 ),
      minNdof = cms.double( 4.0 ),
      maxRho = cms.double( 2.0 ),
      pvSrc = cms.InputTag( "hltVerticesPF" )
    )
)
process.hltVerticesPFFilter = cms.EDFilter( "VertexSelector",
    filter = cms.bool( True ),
    src = cms.InputTag( "hltVerticesPFSelector" ),
    cut = cms.string( "!isFake" )
)
process.hltPFJetForBtagSelector = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    MaxMass = cms.double( -1.0 ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.6 ),
    MinEta = cms.double( -1.0 ),
    MinMass = cms.double( -1.0 ),
    inputTag = cms.InputTag( "hltAK4PFJetsCorrected" ),
    MinE = cms.double( -1.0 ),
    triggerType = cms.int32( 86 ),
    MinPt = cms.double( 30.0 )
)
process.hltPFJetForBtag = cms.EDProducer( "HLTPFJetCollectionProducer",
    TriggerTypes = cms.vint32( 86 ),
    HLTObject = cms.InputTag( "hltPFJetForBtagSelector" )
)
process.hltDeepBLifetimeTagInfosPF = cms.EDProducer( "CandIPProducer",
    maximumTransverseImpactParameter = cms.double( 0.2 ),
    minimumNumberOfHits = cms.int32( 3 ),
    minimumTransverseMomentum = cms.double( 1.0 ),
    primaryVertex = cms.InputTag( "hltVerticesPFFilter" ),
    maximumLongitudinalImpactParameter = cms.double( 17.0 ),
    computeGhostTrack = cms.bool( True ),
    maxDeltaR = cms.double( 0.4 ),
    candidates = cms.InputTag( "hltParticleFlow" ),
    jetDirectionUsingGhostTrack = cms.bool( False ),
    minimumNumberOfPixelHits = cms.int32( 2 ),
    jetDirectionUsingTracks = cms.bool( False ),
    jets = cms.InputTag( "hltPFJetForBtag" ),
    useTrackQuality = cms.bool( False ),
    ghostTrackPriorDeltaR = cms.double( 0.03 ),
    maximumChiSquared = cms.double( 5.0 ),
    computeProbabilities = cms.bool( True )
)
process.hltDeepInclusiveVertexFinderPF = cms.EDProducer( "InclusiveCandidateVertexFinder",
    fitterSigmacut = cms.double( 3.0 ),
    vertexReco = cms.PSet( 
      primcut = cms.double( 1.0 ),
      seccut = cms.double( 3.0 ),
      finder = cms.string( "avr" ),
      smoothing = cms.bool( True )
    ),
    fitterTini = cms.double( 256.0 ),
    fitterRatio = cms.double( 0.25 ),
    vertexMinDLen2DSig = cms.double( 2.5 ),
    maximumLongitudinalImpactParameter = cms.double( 0.3 ),
    vertexMinAngleCosine = cms.double( 0.95 ),
    primaryVertices = cms.InputTag( "hltVerticesPFFilter" ),
    tracks = cms.InputTag( "hltParticleFlow" ),
    maxNTracks = cms.uint32( 30 ),
    clusterizer = cms.PSet( 
      distanceRatio = cms.double( 20.0 ),
      clusterMaxDistance = cms.double( 0.05 ),
      seedMax3DIPSignificance = cms.double( 9999.0 ),
      clusterMaxSignificance = cms.double( 4.5 ),
      seedMin3DIPSignificance = cms.double( 1.2 ),
      clusterMinAngleCosine = cms.double( 0.5 ),
      seedMin3DIPValue = cms.double( 0.005 ),
      seedMax3DIPValue = cms.double( 9999.0 )
    ),
    useVertexReco = cms.bool( True ),
    vertexMinDLenSig = cms.double( 0.5 ),
    useDirectVertexFitter = cms.bool( True ),
    minHits = cms.uint32( 8 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    minPt = cms.double( 0.8 )
)
process.hltDeepInclusiveSecondaryVerticesPF = cms.EDProducer( "CandidateVertexMerger",
    minSignificance = cms.double( 2.0 ),
    secondaryVertices = cms.InputTag( "hltDeepInclusiveVertexFinderPF" ),
    maxFraction = cms.double( 0.7 )
)
process.hltDeepTrackVertexArbitratorPF = cms.EDProducer( "CandidateVertexArbitrator",
    fitterSigmacut = cms.double( 3.0 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    fitterTini = cms.double( 256.0 ),
    trackMinLayers = cms.int32( 4 ),
    fitterRatio = cms.double( 0.25 ),
    secondaryVertices = cms.InputTag( "hltDeepInclusiveSecondaryVerticesPF" ),
    sigCut = cms.double( 5.0 ),
    distCut = cms.double( 0.04 ),
    trackMinPt = cms.double( 0.4 ),
    primaryVertices = cms.InputTag( "hltVerticesPFFilter" ),
    tracks = cms.InputTag( "hltParticleFlow" ),
    dLenFraction = cms.double( 0.333 ),
    trackMinPixels = cms.int32( 1 ),
    dRCut = cms.double( 0.4 )
)
process.hltDeepInclusiveMergedVerticesPF = cms.EDProducer( "CandidateVertexMerger",
    minSignificance = cms.double( 10.0 ),
    secondaryVertices = cms.InputTag( "hltDeepTrackVertexArbitratorPF" ),
    maxFraction = cms.double( 0.2 )
)
process.hltDeepSecondaryVertexTagInfosPF = cms.EDProducer( "CandSecondaryVertexProducer",
    extSVDeltaRToJet = cms.double( 0.3 ),
    beamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    vertexReco = cms.PSet( 
      primcut = cms.double( 1.8 ),
      seccut = cms.double( 6.0 ),
      finder = cms.string( "avr" ),
      weightthreshold = cms.double( 0.001 ),
      minweight = cms.double( 0.5 ),
      smoothing = cms.bool( False )
    ),
    vertexSelection = cms.PSet(  sortCriterium = cms.string( "dist3dError" ) ),
    constraint = cms.string( "BeamSpot" ),
    trackIPTagInfos = cms.InputTag( "hltDeepBLifetimeTagInfosPF" ),
    vertexCuts = cms.PSet( 
      distSig2dMin = cms.double( 2.0 ),
      useTrackWeights = cms.bool( True ),
      distVal3dMax = cms.double( 99999.9 ),
      massMax = cms.double( 6.5 ),
      distSig3dMax = cms.double( 99999.9 ),
      distVal2dMin = cms.double( 0.01 ),
      minimumTrackWeight = cms.double( 0.5 ),
      v0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      distSig2dMax = cms.double( 99999.9 ),
      distSig3dMin = cms.double( -99999.9 ),
      fracPV = cms.double( 0.79 ),
      maxDeltaRToJetAxis = cms.double( 0.4 ),
      distVal2dMax = cms.double( 2.5 ),
      distVal3dMin = cms.double( -99999.9 ),
      multiplicityMin = cms.uint32( 2 )
    ),
    useExternalSV = cms.bool( True ),
    minimumTrackWeight = cms.double( 0.5 ),
    usePVError = cms.bool( True ),
    trackSelection = cms.PSet( 
      max_pT_dRcut = cms.double( 0.1 ),
      b_dR = cms.double( 0.6263 ),
      min_pT = cms.double( 120.0 ),
      b_pT = cms.double( 0.3684 ),
      ptMin = cms.double( 1.0 ),
      max_pT_trackPTcut = cms.double( 3.0 ),
      max_pT = cms.double( 500.0 ),
      useVariableJTA = cms.bool( False ),
      maxDecayLen = cms.double( 99999.9 ),
      qualityClass = cms.string( "any" ),
      normChi2Max = cms.double( 99999.9 ),
      sip2dValMin = cms.double( -99999.9 ),
      sip3dValMin = cms.double( -99999.9 ),
      a_dR = cms.double( -0.001053 ),
      maxDistToAxis = cms.double( 0.2 ),
      totalHitsMin = cms.uint32( 3 ),
      a_pT = cms.double( 0.005263 ),
      sip2dSigMax = cms.double( 99999.9 ),
      sip2dValMax = cms.double( 99999.9 ),
      sip3dSigMax = cms.double( 99999.9 ),
      sip3dValMax = cms.double( 99999.9 ),
      min_pT_dRcut = cms.double( 0.5 ),
      jetDeltaRMax = cms.double( 0.3 ),
      pixelHitsMin = cms.uint32( 2 ),
      sip3dSigMin = cms.double( -99999.9 ),
      sip2dSigMin = cms.double( -99999.9 )
    ),
    trackSort = cms.string( "sip3dSig" ),
    extSVCollection = cms.InputTag( "hltDeepInclusiveMergedVerticesPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsInfos = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32( 2 ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPF = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfos" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)
process.hltPreNoFilterCaloBTagDeepCSVP1 = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltAK4CaloJets = cms.EDProducer( "FastjetJetProducer",
    Active_Area_Repeats = cms.int32( 5 ),
    useMassDropTagger = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    muMin = cms.double( -1.0 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    doAreaDiskApprox = cms.bool( True ),
    subtractorName = cms.string( "" ),
    dRMax = cms.double( -1.0 ),
    useExplicitGhosts = cms.bool( False ),
    puWidth = cms.double( 0.0 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    R0 = cms.double( -1.0 ),
    jetType = cms.string( "CaloJet" ),
    muCut = cms.double( -1.0 ),
    subjetPtMin = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    MinVtxNdof = cms.int32( 5 ),
    minSeed = cms.uint32( 14327 ),
    voronoiRfact = cms.double( 0.9 ),
    doRhoFastjet = cms.bool( False ),
    jetAlgorithm = cms.string( "AntiKt" ),
    writeCompound = cms.bool( False ),
    muMax = cms.double( -1.0 ),
    nSigmaPU = cms.double( 1.0 ),
    GhostArea = cms.double( 0.01 ),
    Rho_EtaMax = cms.double( 4.4 ),
    restrictInputs = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    nExclude = cms.uint32( 0 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    yMin = cms.double( -1.0 ),
    jetCollInstanceName = cms.string( "" ),
    useFiltering = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    rFiltFactor = cms.double( -1.0 ),
    useDeterministicSeed = cms.bool( True ),
    doPVCorrection = cms.bool( False ),
    rFilt = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    useTrimming = cms.bool( False ),
    puCenters = cms.vdouble(  ),
    MaxVtxZ = cms.double( 15.0 ),
    rParam = cms.double( 0.4 ),
    csRho_EtaMax = cms.double( -1.0 ),
    UseOnlyVertexTracks = cms.bool( False ),
    dRMin = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    doFastJetNonUniform = cms.bool( False ),
    usePruning = cms.bool( False ),
    maxDepth = cms.int32( -1 ),
    yCut = cms.double( -1.0 ),
    useSoftDrop = cms.bool( False ),
    DzTrVtxMax = cms.double( 0.0 ),
    UseOnlyOnePV = cms.bool( False ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    correctShape = cms.bool( False ),
    rcut_factor = cms.double( -1.0 ),
    src = cms.InputTag( "hltTowerMakerForAll" ),
    gridMaxRapidity = cms.double( -1.0 ),
    sumRecHits = cms.bool( False ),
    jetPtMin = cms.double( 1.0 ),
    puPtMin = cms.double( 10.0 ),
    srcPVs = cms.InputTag( "NotUsed" ),
    verbosity = cms.int32( 0 ),
    inputEtMin = cms.double( 0.3 ),
    useConstituentSubtraction = cms.bool( False ),
    beta = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    radiusPU = cms.double( 0.4 ),
    nFilt = cms.int32( -1 ),
    useKtPruning = cms.bool( False ),
    DxyTrVtxMax = cms.double( 0.0 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    inputEMin = cms.double( 0.0 )
)
process.hltAK4CaloJetsIDPassed = cms.EDProducer( "HLTCaloJetIDProducer",
    min_N90 = cms.int32( -2 ),
    min_N90hits = cms.int32( 2 ),
    min_EMF = cms.double( 1.0E-6 ),
    jetsInput = cms.InputTag( "hltAK4CaloJets" ),
    JetIDParams = cms.PSet( 
      hfRecHitsColl = cms.InputTag( "hltHfreco" ),
      hoRecHitsColl = cms.InputTag( "hltHoreco" ),
      ebRecHitsColl = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      hbheRecHitsColl = cms.InputTag( "hltHbhereco" ),
      useRecHits = cms.bool( True ),
      eeRecHitsColl = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' )
    ),
    max_EMF = cms.double( 999.0 )
)
process.hltFixedGridRhoFastjetAllCalo = cms.EDProducer( "FixedGridRhoProducerFastjet",
    gridSpacing = cms.double( 0.55 ),
    maxRapidity = cms.double( 5.0 ),
    pfCandidatesTag = cms.InputTag( "hltTowerMakerForAll" )
)
process.hltAK4CaloFastJetCorrector = cms.EDProducer( "L1FastjetCorrectorProducer",
    srcRho = cms.InputTag( "hltFixedGridRhoFastjetAllCalo" ),
    algorithm = cms.string( "AK4CaloHLT" ),
    level = cms.string( "L1FastJet" )
)
process.hltAK4CaloRelativeCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    algorithm = cms.string( "AK4CaloHLT" ),
    level = cms.string( "L2Relative" )
)
process.hltAK4CaloAbsoluteCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    algorithm = cms.string( "AK4CaloHLT" ),
    level = cms.string( "L3Absolute" )
)
process.hltAK4CaloResidualCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    algorithm = cms.string( "AK4CaloHLT" ),
    level = cms.string( "L2L3Residual" )
)
process.hltAK4CaloCorrector = cms.EDProducer( "ChainedJetCorrectorProducer",
    correctors = cms.VInputTag( 'hltAK4CaloFastJetCorrector','hltAK4CaloRelativeCorrector','hltAK4CaloAbsoluteCorrector','hltAK4CaloResidualCorrector' )
)
process.hltAK4CaloJetsCorrected = cms.EDProducer( "CorrectedCaloJetProducer",
    src = cms.InputTag( "hltAK4CaloJets" ),
    correctors = cms.VInputTag( 'hltAK4CaloCorrector' )
)
process.hltAK4CaloJetsCorrectedIDPassed = cms.EDProducer( "CorrectedCaloJetProducer",
    src = cms.InputTag( "hltAK4CaloJetsIDPassed" ),
    correctors = cms.VInputTag( 'hltAK4CaloCorrector' )
)
process.hltSelectorJets30L1FastJet = cms.EDFilter( "EtMinCaloJetSelector",
    filter = cms.bool( False ),
    src = cms.InputTag( "hltAK4CaloJetsCorrectedIDPassed" ),
    etMin = cms.double( 30.0 )
)
process.hltSelectorCentralJets30L1FastJeta = cms.EDFilter( "EtaRangeCaloJetSelector",
    src = cms.InputTag( "hltSelectorJets30L1FastJet" ),
    etaMin = cms.double( -2.4 ),
    etaMax = cms.double( 2.4 )
)
process.hltSelector8CentralJetsL1FastJet = cms.EDFilter( "LargestEtCaloJetSelector",
    maxNumber = cms.uint32( 8 ),
    filter = cms.bool( False ),
    src = cms.InputTag( "hltSelectorCentralJets30L1FastJeta" )
)
process.hltSelectorJets20L1FastJet = cms.EDFilter( "EtMinCaloJetSelector",
    filter = cms.bool( False ),
    src = cms.InputTag( "hltAK4CaloJetsCorrected" ),
    etMin = cms.double( 20.0 )
)
process.hltSelectorCentralJets20L1FastJeta = cms.EDFilter( "EtaRangeCaloJetSelector",
    src = cms.InputTag( "hltSelectorJets20L1FastJet" ),
    etaMin = cms.double( -2.4 ),
    etaMax = cms.double( 2.4 )
)
process.hltSiPixelDigisRegForBTag = cms.EDProducer( "SiPixelRawToDigi",
    UseQualityInfo = cms.bool( False ),
    UsePilotBlade = cms.bool( False ),
    UsePhase1 = cms.bool( True ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    IncludeErrors = cms.bool( False ),
    ErrorList = cms.vint32(  ),
    Regions = cms.PSet( 
      maxZ = cms.vdouble( 24.0 ),
      inputs = cms.VInputTag( 'hltSelectorCentralJets20L1FastJeta' ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      deltaPhi = cms.vdouble( 0.5 )
    ),
    Timing = cms.untracked.bool( False ),
    CablingMapLabel = cms.string( "" ),
    UserErrorList = cms.vint32(  )
)
process.hltSiPixelClustersRegForBTag = cms.EDProducer( "SiPixelClusterProducer",
    src = cms.InputTag( "hltSiPixelDigisRegForBTag" ),
    ChannelThreshold = cms.int32( 1000 ),
    maxNumberOfClusters = cms.int32( 40000 ),
    ClusterThreshold_L1 = cms.int32( 2000 ),
    MissCalibrate = cms.untracked.bool( True ),
    VCaltoElectronGain = cms.int32( 47 ),
    VCaltoElectronGain_L1 = cms.int32( 50 ),
    VCaltoElectronOffset = cms.int32( -60 ),
    SplitClusters = cms.bool( False ),
    payloadType = cms.string( "HLT" ),
    SeedThreshold = cms.int32( 1000 ),
    VCaltoElectronOffset_L1 = cms.int32( -670 ),
    ClusterThreshold = cms.int32( 4000 )
)
process.hltSiPixelClustersRegForBTagCache = cms.EDProducer( "SiPixelClusterShapeCacheProducer",
    src = cms.InputTag( "hltSiPixelClustersRegForBTag" ),
    onDemand = cms.bool( False )
)
process.hltSiPixelRecHitsRegForBTag = cms.EDProducer( "SiPixelRecHitConverter",
    VerboseLevel = cms.untracked.int32( 0 ),
    src = cms.InputTag( "hltSiPixelClustersRegForBTag" ),
    CPE = cms.string( "hltESPPixelCPEGeneric" )
)
process.hltPixelLayerQuadrupletsRegForBTag = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3+BPix4',
      'BPix1+BPix2+BPix3+FPix1_pos',
      'BPix1+BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos+FPix2_pos',
      'BPix1+BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_neg+FPix2_neg+FPix3_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHitsRegForBTag" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHitsRegForBTag" )
    ),
    TIB = cms.PSet(  )
)
process.hltSelector4CentralJetsL1FastJet = cms.EDFilter( "LargestEtCaloJetSelector",
    maxNumber = cms.uint32( 4 ),
    filter = cms.bool( False ),
    src = cms.InputTag( "hltSelectorCentralJets20L1FastJeta" )
)
process.hltFastPrimaryVertex = cms.EDProducer( "FastPrimaryVertexWithWeightsProducer",
    maxJetEta_EC = cms.double( 2.6 ),
    peakSizeY_q = cms.double( 1.0 ),
    PixelCellHeightOverWidth = cms.double( 1.8 ),
    weight_dPhi_EC = cms.double( 0.064516129 ),
    zClusterWidth_step1 = cms.double( 2.0 ),
    zClusterWidth_step2 = cms.double( 0.65 ),
    zClusterWidth_step3 = cms.double( 0.3 ),
    weight_dPhi = cms.double( 0.13888888 ),
    minJetEta_EC = cms.double( 1.3 ),
    ptWeighting = cms.bool( True ),
    maxZ = cms.double( 19.0 ),
    njets = cms.int32( 999 ),
    maxSizeX = cms.double( 2.1 ),
    ptWeighting_slope = cms.double( 0.05 ),
    weight_SizeX1 = cms.double( 0.88 ),
    clusters = cms.InputTag( "hltSiPixelClustersRegForBTag" ),
    weightCut_step2 = cms.double( 0.05 ),
    weightCut_step3 = cms.double( 0.1 ),
    maxSizeY_q = cms.double( 2.0 ),
    endCap = cms.bool( True ),
    weight_rho_up = cms.double( 22.0 ),
    jets = cms.InputTag( "hltSelector4CentralJetsL1FastJet" ),
    minSizeY_q = cms.double( -0.6 ),
    EC_weight = cms.double( 0.008 ),
    weight_charge_up = cms.double( 190000.0 ),
    maxDeltaPhi = cms.double( 0.21 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    weight_charge_down = cms.double( 11000.0 ),
    ptWeighting_offset = cms.double( -1.0 ),
    weight_charge_peak = cms.double( 22000.0 ),
    minJetPt = cms.double( 0.0 ),
    maxDeltaPhi_EC = cms.double( 0.14 ),
    zClusterSearchArea_step3 = cms.double( 0.55 ),
    barrel = cms.bool( True ),
    maxJetEta = cms.double( 2.6 ),
    pixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
    zClusterSearchArea_step2 = cms.double( 3.0 )
)
process.hltFastPVPixelVertexFilter = cms.EDFilter( "VertexSelector",
    filter = cms.bool( True ),
    src = cms.InputTag( "hltFastPrimaryVertex" ),
    cut = cms.string( "!isFake && ndof > 0 && abs(z) <= 25 && position.Rho <= 2" )
)
process.hltFastPVPixelTracksFilter = cms.EDProducer( "PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double( 1000.0 ),
    nSigmaTipMaxTolerance = cms.double( 0.0 ),
    ptMin = cms.double( 0.0 ),
    nSigmaInvPtTolerance = cms.double( 0.0 ),
    tipMax = cms.double( 999.0 )
)
process.hltFastPVPixelTracksFitter = cms.EDProducer( "PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool( False ),
    scaleFactor = cms.double( 0.65 )
)
process.hltFastPVPixelTracksTrackingRegions = cms.EDProducer( "TauRegionalPixelSeedTrackingRegionEDProducer",
    RegionPSet = cms.PSet( 
      JetSrc = cms.InputTag( "hltSelector4CentralJetsL1FastJet" ),
      vertexSrc = cms.InputTag( "hltFastPrimaryVertex" ),
      ptMin = cms.double( 0.9 ),
      howToUseMeasurementTracker = cms.string( "Never" ),
      deltaEtaRegion = cms.double( 0.5 ),
      originHalfLength = cms.double( 1.5 ),
      searchOpt = cms.bool( False ),
      originRadius = cms.double( 0.2 ),
      measurementTrackerName = cms.InputTag( "MeasurementTrackerEvent" ),
      deltaPhiRegion = cms.double( 0.3 )
    )
)
process.hltFastPVPixelTracksHitDoublets = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltFastPVPixelTracksTrackingRegions" ),
    layerPairs = cms.vuint32( 0, 1, 2 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltPixelLayerQuadrupletsRegForBTag" )
)
process.hltFastPVPixelTracksHitQuadruplets = cms.EDProducer( "CAHitQuadrupletEDProducer",
    CAThetaCut = cms.double( 0.002 ),
    SeedComparitorPSet = cms.PSet( 
      clusterShapeHitFilter = cms.string( "ClusterShapeHitFilter" ),
      ComponentName = cms.string( "LowPtClusterShapeSeedComparitor" ),
      clusterShapeCacheSrc = cms.InputTag( "hltSiPixelClustersRegForBTagCache" )
    ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltFastPVPixelTracksHitDoublets" ),
    fitFastCircle = cms.bool( True ),
    CAHardPtCut = cms.double( 0.0 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 50.0 ),
      value1 = cms.double( 200.0 ),
      pt1 = cms.double( 0.7 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 2.0 )
    ),
    CAOnlyOneLastHitPerLayerFilter = cms.bool( False ),
    CAPhiCut = cms.double( 0.2 ),
    useBendingCorrection = cms.bool( True ),
    fitFastCircleChi2Cut = cms.bool( True )
)
process.hltFastPVPixelTracks = cms.EDProducer( "PixelTrackProducer",
    Filter = cms.InputTag( "hltFastPVPixelTracksFilter" ),
    Cleaner = cms.string( "hltPixelTracksCleanerBySharedHits" ),
    passLabel = cms.string( "" ),
    Fitter = cms.InputTag( "hltFastPVPixelTracksFitter" ),
    SeedingHitSets = cms.InputTag( "hltFastPVPixelTracksHitQuadruplets" )
)
process.hltFastPVJetTracksAssociator = cms.EDProducer( "JetTracksAssociatorAtVertex",
    jets = cms.InputTag( "hltSelector4CentralJetsL1FastJet" ),
    tracks = cms.InputTag( "hltFastPVPixelTracks" ),
    useAssigned = cms.bool( False ),
    coneSize = cms.double( 0.4 ),
    pvSrc = cms.InputTag( "" )
)
process.hltFastPVJetVertexChecker = cms.EDFilter( "JetVertexChecker",
    minPt = cms.double( 0.0 ),
    pvErr_x = cms.double( 0.0015 ),
    maxETA = cms.double( 2.4 ),
    maxTrackPt = cms.double( 20.0 ),
    maxNJetsToCheck = cms.int32( 2 ),
    minPtRatio = cms.double( 0.1 ),
    pvErr_y = cms.double( 0.0015 ),
    doFilter = cms.bool( False ),
    pvErr_z = cms.double( 1.5 ),
    jetTracks = cms.InputTag( "hltFastPVJetTracksAssociator" ),
    maxChi2 = cms.double( 20.0 ),
    newMethod = cms.bool( True ),
    maxNjetsOutput = cms.int32( 2 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" )
)
process.hltFastPVPixelTracksRecoverFilter = cms.EDProducer( "PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double( 1000.0 ),
    nSigmaTipMaxTolerance = cms.double( 0.0 ),
    ptMin = cms.double( 0.0 ),
    nSigmaInvPtTolerance = cms.double( 0.0 ),
    tipMax = cms.double( 999.0 )
)
process.hltFastPVPixelTracksRecoverFitter = cms.EDProducer( "PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool( False ),
    scaleFactor = cms.double( 0.65 )
)
process.hltFastPVPixelTracksTrackingRegionsRecover = cms.EDProducer( "TauRegionalPixelSeedTrackingRegionEDProducer",
    RegionPSet = cms.PSet( 
      JetSrc = cms.InputTag( "hltFastPVJetVertexChecker" ),
      vertexSrc = cms.InputTag( "hltFastPVJetVertexChecker" ),
      ptMin = cms.double( 0.9 ),
      howToUseMeasurementTracker = cms.string( "Never" ),
      deltaEtaRegion = cms.double( 0.5 ),
      originHalfLength = cms.double( 20.0 ),
      searchOpt = cms.bool( False ),
      originRadius = cms.double( 0.2 ),
      measurementTrackerName = cms.InputTag( "MeasurementTrackerEvent" ),
      deltaPhiRegion = cms.double( 0.5 )
    )
)
process.hltFastPVPixelTracksHitDoubletsRecover = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltFastPVPixelTracksTrackingRegionsRecover" ),
    layerPairs = cms.vuint32( 0, 1, 2 ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltPixelLayerQuadrupletsRegForBTag" )
)
process.hltFastPVPixelTracksHitQuadrupletsRecover = cms.EDProducer( "CAHitQuadrupletEDProducer",
    CAThetaCut = cms.double( 0.002 ),
    SeedComparitorPSet = cms.PSet( 
      clusterShapeHitFilter = cms.string( "ClusterShapeHitFilter" ),
      ComponentName = cms.string( "LowPtClusterShapeSeedComparitor" ),
      clusterShapeCacheSrc = cms.InputTag( "hltSiPixelClustersRegForBTagCache" )
    ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltFastPVPixelTracksHitDoubletsRecover" ),
    fitFastCircle = cms.bool( False ),
    CAHardPtCut = cms.double( 0.0 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 50.0 ),
      value1 = cms.double( 200.0 ),
      pt1 = cms.double( 0.7 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 2.0 )
    ),
    CAOnlyOneLastHitPerLayerFilter = cms.bool( False ),
    CAPhiCut = cms.double( 0.2 ),
    useBendingCorrection = cms.bool( True ),
    fitFastCircleChi2Cut = cms.bool( True )
)
process.hltFastPVPixelTracksRecover = cms.EDProducer( "PixelTrackProducer",
    Filter = cms.InputTag( "hltFastPVPixelTracksRecoverFilter" ),
    Cleaner = cms.string( "hltPixelTracksCleanerBySharedHits" ),
    passLabel = cms.string( "" ),
    Fitter = cms.InputTag( "hltFastPVPixelTracksRecoverFitter" ),
    SeedingHitSets = cms.InputTag( "hltFastPVPixelTracksHitQuadrupletsRecover" )
)
process.hltFastPVPixelTracksMerger = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( False ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltFastPVPixelTracks','hltFastPVPixelTracksRecover' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltFastPVPixelTracks','hltFastPVPixelTracksRecover' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltFastPVPixelVertices = cms.EDProducer( "PixelVertexProducer",
    WtAverage = cms.bool( True ),
    Method2 = cms.bool( True ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparerForBTag" ) ),
    Verbosity = cms.int32( 0 ),
    UseError = cms.bool( True ),
    TrackCollection = cms.InputTag( "hltFastPVPixelTracksMerger" ),
    PtMin = cms.double( 1.0 ),
    NTrkMin = cms.int32( 2 ),
    ZOffset = cms.double( 10.0 ),
    Finder = cms.string( "DivisiveVertexFinder" ),
    ZSeparation = cms.double( 0.07 )
)
process.hltFastPVPixelVerticesFilter = cms.EDFilter( "VertexSelector",
    filter = cms.bool( True ),
    src = cms.InputTag( "hltFastPVPixelVertices" ),
    cut = cms.string( "!isFake && ndof > 0 && abs(z) <= 25 && position.Rho <= 2" )
)
process.hltSiStripClustersRegForBTag = cms.EDProducer( "MeasurementTrackerEventProducer",
    inactivePixelDetectorLabels = cms.VInputTag(  ),
    stripClusterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
    pixelClusterProducer = cms.string( "hltSiPixelClustersRegForBTag" ),
    switchOffPixelsIfEmpty = cms.bool( True ),
    inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
    skipClusters = cms.InputTag( "" ),
    measurementTracker = cms.string( "hltESPMeasurementTracker" )
)
process.hltIter0PFLowPixelSeedsFromPixelTracksForBTag = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    useEventsWithNoVertex = cms.bool( True ),
    originHalfLength = cms.double( 0.3 ),
    useProtoTrackKinematics = cms.bool( False ),
    usePV = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) ),
    InputVertexCollection = cms.InputTag( "hltFastPVPixelVertices" ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    InputCollection = cms.InputTag( "hltFastPVPixelTracksMerger" ),
    originRadius = cms.double( 0.1 )
)
process.hltIter0PFlowCkfTrackCandidatesForBTag = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter0PFLowPixelSeedsFromPixelTracksForBTag" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClustersRegForBTag" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0GroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter0PFlowCtfWithMaterialTracksForBTag = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter0PFlowCkfTrackCandidatesForBTag" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltSiStripClustersRegForBTag" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIter0" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter0PFlowTrackCutClassifierForBTag = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0PFlowCtfWithMaterialTracksForBTag" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltFastPVPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 3, 4 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 3, 4 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter0PFlowTrackSelectionHighPurityForBTag = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter0PFlowCtfWithMaterialTracksForBTag" ),
    originalQualVals = cms.InputTag( 'hltIter0PFlowTrackCutClassifierForBTag','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter0PFlowTrackCutClassifierForBTag','MVAValues' )
)
process.hltIter1ClustersRefRemovalForBTag = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 9.0 ),
    trajectories = cms.InputTag( "hltIter0PFlowTrackSelectionHighPurityForBTag" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClustersRegForBTag" ),
    TrackQuality = cms.string( "highPurity" )
)
process.hltIter1MaskedMeasurementTrackerEventForBTag = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    clustersToSkip = cms.InputTag( "hltIter1ClustersRefRemovalForBTag" ),
    OnDemand = cms.bool( False ),
    src = cms.InputTag( "hltSiStripClustersRegForBTag" )
)
process.hltIter1PixelLayerQuadrupletsForBTag = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3+BPix4',
      'BPix1+BPix2+BPix3+FPix1_pos',
      'BPix1+BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos+FPix2_pos',
      'BPix1+BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_neg+FPix2_neg+FPix3_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter1ClustersRefRemovalForBTag" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHitsRegForBTag" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter1ClustersRefRemovalForBTag" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHitsRegForBTag" )
    ),
    TIB = cms.PSet(  )
)
process.hltIter1PFlowPixelTrackingRegionsForBTag = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltFastPVPixelVertices" ),
      zErrorVetex = cms.double( 0.1 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      maxNVertices = cms.int32( 10 ),
      maxNRegions = cms.int32( 100 ),
      nSigmaZVertex = cms.double( 4.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 0.3 ),
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltSelector8CentralJetsL1FastJet" ),
      searchOpt = cms.bool( True ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.05 ),
      measurementTrackerName = cms.InputTag( "hltIter1MaskedMeasurementTrackerEventForBTag" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 1.0 ),
      deltaPhi = cms.double( 1.0 )
    )
)
process.hltIter1PFlowPixelClusterCheckForBTag = cms.EDProducer( "ClusterCheckerEDProducer",
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False ),
    MaxNumberOfCosmicClusters = cms.uint32( 800000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClustersRegForBTag" ),
    doClusterCheck = cms.bool( False ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    ClusterCollectionLabel = cms.InputTag( "hltSiStripClustersRegForBTag" )
)
process.hltIter1PFlowPixelHitDoubletsForBTag = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltIter1PFlowPixelTrackingRegionsForBTag" ),
    layerPairs = cms.vuint32( 0, 1, 2 ),
    clusterCheck = cms.InputTag( "hltIter1PFlowPixelClusterCheckForBTag" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltIter1PixelLayerQuadrupletsForBTag" )
)
process.hltIter1PFlowPixelHitQuadrupletsForBTag = cms.EDProducer( "CAHitQuadrupletEDProducer",
    CAThetaCut = cms.double( 0.004 ),
    SeedComparitorPSet = cms.PSet( 
      clusterShapeHitFilter = cms.string( "ClusterShapeHitFilter" ),
      ComponentName = cms.string( "none" ),
      clusterShapeCacheSrc = cms.InputTag( "hltSiPixelClustersRegForBTagCache" )
    ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltIter1PFlowPixelHitDoubletsForBTag" ),
    fitFastCircle = cms.bool( True ),
    CAHardPtCut = cms.double( 0.0 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 150.0 ),
      value1 = cms.double( 2000.0 ),
      pt1 = cms.double( 0.7 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 2.0 )
    ),
    CAOnlyOneLastHitPerLayerFilter = cms.bool( False ),
    CAPhiCut = cms.double( 0.3 ),
    useBendingCorrection = cms.bool( True ),
    fitFastCircleChi2Cut = cms.bool( True )
)
process.hltIter1PFlowPixelSeedsForBTag = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltIter1PFlowPixelHitQuadrupletsForBTag" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltIter1PFlowCkfTrackCandidatesForBTag = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter1PFlowPixelSeedsForBTag" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter1MaskedMeasurementTrackerEventForBTag" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter1GroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter1PFlowCtfWithMaterialTracksForBTag = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter1PFlowCkfTrackCandidatesForBTag" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter1MaskedMeasurementTrackerEventForBTag" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIter1" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter1PFlowTrackCutClassifierPromptForBTag = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter1PFlowCtfWithMaterialTracksForBTag" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltFastPVPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 2 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 1.0, 0.85 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 1.0, 0.9 ),
        dr_exp = cms.vint32( 3, 3, 3 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 1.0, 0.9 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 1.0, 0.8 ),
        dz_exp = cms.vint32( 3, 3, 3 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 3.40282346639E38, 1.0, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 3.40282346639E38, 1.0, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter1PFlowTrackCutClassifierDetachedForBTag = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter1PFlowCtfWithMaterialTracksForBTag" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltFastPVPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 1 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 1.0, 1.0, 1.0 ),
        dr_par1 = cms.vdouble( 1.0, 1.0, 1.0 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 99, 3, 3 ),
      min3DLayers = cms.vint32( 1, 2, 3 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 1.0, 1.0, 1.0 ),
        dz_par2 = cms.vdouble( 1.0, 1.0, 1.0 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 2 ),
      maxDz = cms.vdouble( 3.40282346639E38, 1.0, 3.40282346639E38 ),
      minNdof = cms.vdouble( -1.0, -1.0, -1.0 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.0, 0.7, 0.4 ),
      maxDr = cms.vdouble( 3.40282346639E38, 1.0, 3.40282346639E38 ),
      minLayers = cms.vint32( 5, 5, 5 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter1PFlowTrackCutClassifierMergedForBTag = cms.EDProducer( "ClassifierMerger",
    inputClassifiers = cms.vstring( 'hltIter1PFlowTrackCutClassifierPromptForBTag',
      'hltIter1PFlowTrackCutClassifierDetachedForBTag' )
)
process.hltIter1PFlowTrackSelectionHighPurityForBTag = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter1PFlowCtfWithMaterialTracksForBTag" ),
    originalQualVals = cms.InputTag( 'hltIter1PFlowTrackCutClassifierMergedForBTag','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter1PFlowTrackCutClassifierMergedForBTag','MVAValues' )
)
process.hltIter1MergedForBTag = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0PFlowTrackSelectionHighPurityForBTag','hltIter1PFlowTrackSelectionHighPurityForBTag' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIter0PFlowTrackSelectionHighPurityForBTag','hltIter1PFlowTrackSelectionHighPurityForBTag' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltIter2ClustersRefRemovalForBTag = cms.EDProducer( "TrackClusterRemover",
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    maxChi2 = cms.double( 16.0 ),
    trajectories = cms.InputTag( "hltIter1PFlowTrackSelectionHighPurityForBTag" ),
    oldClusterRemovalInfo = cms.InputTag( "hltIter1ClustersRefRemovalForBTag" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    overrideTrkQuals = cms.InputTag( "" ),
    pixelClusters = cms.InputTag( "hltSiPixelClustersRegForBTag" ),
    TrackQuality = cms.string( "highPurity" )
)
process.hltIter2MaskedMeasurementTrackerEventForBTag = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    clustersToSkip = cms.InputTag( "hltIter2ClustersRefRemovalForBTag" ),
    OnDemand = cms.bool( False ),
    src = cms.InputTag( "hltSiStripClustersRegForBTag" )
)
process.hltIter2PixelLayerTripletsForBTag = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3',
      'BPix2+BPix3+BPix4',
      'BPix1+BPix3+BPix4',
      'BPix1+BPix2+BPix4',
      'BPix2+BPix3+FPix1_pos',
      'BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos',
      'BPix1+BPix2+FPix1_neg',
      'BPix2+FPix1_pos+FPix2_pos',
      'BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos',
      'BPix1+FPix1_neg+FPix2_neg',
      'FPix1_pos+FPix2_pos+FPix3_pos',
      'FPix1_neg+FPix2_neg+FPix3_neg' ),
    MTOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTID = cms.PSet(  ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter2ClustersRefRemovalForBTag" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHitsRegForBTag" )
    ),
    MTEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter2ClustersRefRemovalForBTag" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHitsRegForBTag" )
    ),
    TIB = cms.PSet(  )
)
process.hltIter2PFlowPixelTrackingRegionsForBTag = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltFastPVPixelVertices" ),
      zErrorVetex = cms.double( 0.05 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      maxNVertices = cms.int32( 10 ),
      maxNRegions = cms.int32( 100 ),
      nSigmaZVertex = cms.double( 4.0 ),
      nSigmaZBeamSpot = cms.double( 3.0 ),
      ptMin = cms.double( 0.8 ),
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltSelector8CentralJetsL1FastJet" ),
      searchOpt = cms.bool( True ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.025 ),
      measurementTrackerName = cms.InputTag( "hltIter2MaskedMeasurementTrackerEventForBTag" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.8 ),
      deltaPhi = cms.double( 0.8 )
    )
)
process.hltIter2PFlowPixelClusterCheckForBTag = cms.EDProducer( "ClusterCheckerEDProducer",
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False ),
    MaxNumberOfCosmicClusters = cms.uint32( 800000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClustersRegForBTag" ),
    doClusterCheck = cms.bool( False ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    ClusterCollectionLabel = cms.InputTag( "hltSiStripClustersRegForBTag" )
)
process.hltIter2PFlowPixelHitDoubletsForBTag = cms.EDProducer( "HitPairEDProducer",
    trackingRegions = cms.InputTag( "hltIter2PFlowPixelTrackingRegionsForBTag" ),
    layerPairs = cms.vuint32( 0, 1 ),
    clusterCheck = cms.InputTag( "hltIter2PFlowPixelClusterCheckForBTag" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    seedingLayers = cms.InputTag( "hltIter2PixelLayerTripletsForBTag" )
)
process.hltIter2PFlowPixelHitTripletsForBTag = cms.EDProducer( "CAHitTripletEDProducer",
    CAHardPtCut = cms.double( 0.3 ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    doublets = cms.InputTag( "hltIter2PFlowPixelHitDoubletsForBTag" ),
    CAThetaCut = cms.double( 0.004 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 6.0 ),
      value1 = cms.double( 100.0 ),
      pt1 = cms.double( 0.8 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 8.0 )
    ),
    CAPhiCut = cms.double( 0.1 ),
    useBendingCorrection = cms.bool( True )
)
process.hltIter2PFlowPixelSeedsForBTag = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    magneticField = cms.string( "ParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    MinOneOverPtError = cms.double( 1.0 ),
    seedingHitSets = cms.InputTag( "hltIter2PFlowPixelHitTripletsForBTag" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltIter2PFlowCkfTrackCandidatesForBTag = cms.EDProducer( "CkfTrackCandidateMaker",
    src = cms.InputTag( "hltIter2PFlowPixelSeedsForBTag" ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter2MaskedMeasurementTrackerEventForBTag" ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    doSeedingRegionRebuilding = cms.bool( False ),
    maxNSeeds = cms.uint32( 100000 ),
    produceSeedStopReasons = cms.bool( False ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2GroupedCkfTrajectoryBuilderIT" ) ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    TrajectoryBuilder = cms.string( "" )
)
process.hltIter2PFlowCtfWithMaterialTracksForBTag = cms.EDProducer( "TrackProducer",
    src = cms.InputTag( "hltIter2PFlowCkfTrackCandidatesForBTag" ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter2MaskedMeasurementTrackerEventForBTag" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTracker = cms.string( "" ),
    AlgorithmName = cms.string( "hltIter2" ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    NavigationSchool = cms.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    GeometricInnerState = cms.bool( True ),
    useSimpleMF = cms.bool( True ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" )
)
process.hltIter2PFlowTrackCutClassifierForBTag = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter2PFlowCtfWithMaterialTracksForBTag" ),
    GBRForestLabel = cms.string( "" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltFastPVPixelVertices" ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    ),
    ignoreVertices = cms.bool( False ),
    GBRForestFileName = cms.string( "" )
)
process.hltIter2PFlowTrackSelectionHighPurityForBTag = cms.EDProducer( "TrackCollectionFilterCloner",
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False ),
    originalSource = cms.InputTag( "hltIter2PFlowCtfWithMaterialTracksForBTag" ),
    originalQualVals = cms.InputTag( 'hltIter2PFlowTrackCutClassifierForBTag','QualityMasks' ),
    originalMVAVals = cms.InputTag( 'hltIter2PFlowTrackCutClassifierForBTag','MVAValues' )
)
process.hltIter2MergedForBTag = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    writeOnlyTrkQuals = cms.bool( False ),
    MinPT = cms.double( 0.05 ),
    allowFirstHitShare = cms.bool( True ),
    copyExtras = cms.untracked.bool( True ),
    Epsilon = cms.double( -0.001 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter1MergedForBTag','hltIter2PFlowTrackSelectionHighPurityForBTag' ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    copyMVA = cms.bool( False ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    MinFound = cms.int32( 3 ),
    hasSelector = cms.vint32( 0, 0 ),
    TrackProducers = cms.VInputTag( 'hltIter1MergedForBTag','hltIter2PFlowTrackSelectionHighPurityForBTag' ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    newQuality = cms.string( "confirmed" )
)
process.hltVerticesL3 = cms.EDProducer( "PrimaryVertexProducer",
    vertexCollections = cms.VPSet( 
      cms.PSet(  chi2cutoff = cms.double( 3.0 ),
        label = cms.string( "" ),
        useBeamConstraint = cms.bool( False ),
        minNdof = cms.double( 0.0 ),
        maxDistanceToBeam = cms.double( 1.0 ),
        algorithm = cms.string( "AdaptiveVertexFitter" )
      ),
      cms.PSet(  chi2cutoff = cms.double( 3.0 ),
        label = cms.string( "WithBS" ),
        useBeamConstraint = cms.bool( True ),
        minNdof = cms.double( 0.0 ),
        maxDistanceToBeam = cms.double( 1.0 ),
        algorithm = cms.string( "AdaptiveVertexFitter" )
      )
    ),
    verbose = cms.untracked.bool( False ),
    TkFilterParameters = cms.PSet( 
      maxEta = cms.double( 100.0 ),
      minPt = cms.double( 0.0 ),
      minSiliconLayersWithHits = cms.int32( 5 ),
      minPixelLayersWithHits = cms.int32( 2 ),
      maxNormalizedChi2 = cms.double( 20.0 ),
      trackQuality = cms.string( "any" ),
      algorithm = cms.string( "filter" ),
      maxD0Significance = cms.double( 999.0 )
    ),
    beamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
    TrackLabel = cms.InputTag( "hltIter2MergedForBTag" ),
    TkClusParameters = cms.PSet( 
      TkDAClusParameters = cms.PSet( 
        zmerge = cms.double( 0.01 ),
        Tstop = cms.double( 0.5 ),
        d0CutOff = cms.double( 999.0 ),
        dzCutOff = cms.double( 4.0 ),
        vertexSize = cms.double( 0.15 ),
        coolingFactor = cms.double( 0.6 ),
        Tpurge = cms.double( 2.0 ),
        Tmin = cms.double( 2.4 ),
        uniquetrkweight = cms.double( 0.9 ),
        use_vdt = cms.untracked.bool( True )
      ),
      algorithm = cms.string( "DA_vect" )
    )
)
process.hltFastPixelBLifetimeL3Associator = cms.EDProducer( "JetTracksAssociatorAtVertex",
    jets = cms.InputTag( "hltSelector8CentralJetsL1FastJet" ),
    tracks = cms.InputTag( "hltIter2MergedForBTag" ),
    useAssigned = cms.bool( False ),
    coneSize = cms.double( 0.4 ),
    pvSrc = cms.InputTag( "" )
)
process.hltImpactParameterTagInfos = cms.EDProducer( "TrackIPProducer",
    maximumTransverseImpactParameter = cms.double( 0.2 ),
    minimumNumberOfHits = cms.int32( 3 ),
    minimumTransverseMomentum = cms.double( 1.0 ),
    primaryVertex = cms.InputTag( 'hltVerticesL3','WithBS' ),
    maximumLongitudinalImpactParameter = cms.double( 17.0 ),
    computeGhostTrack = cms.bool( True ),
    ghostTrackPriorDeltaR = cms.double( 0.03 ),
    jetTracks = cms.InputTag( "hltFastPixelBLifetimeL3Associator" ),
    jetDirectionUsingGhostTrack = cms.bool( False ),
    minimumNumberOfPixelHits = cms.int32( 2 ),
    jetDirectionUsingTracks = cms.bool( False ),
    computeProbabilities = cms.bool( True ),
    useTrackQuality = cms.bool( False ),
    maximumChiSquared = cms.double( 5.0 )
)
process.hltInclusiveVertexFinder = cms.EDProducer( "InclusiveVertexFinder",
    fitterSigmacut = cms.double( 3.0 ),
    vertexReco = cms.PSet( 
      primcut = cms.double( 1.0 ),
      seccut = cms.double( 3.0 ),
      finder = cms.string( "avr" ),
      smoothing = cms.bool( True )
    ),
    fitterTini = cms.double( 256.0 ),
    fitterRatio = cms.double( 0.25 ),
    vertexMinDLen2DSig = cms.double( 2.5 ),
    maximumLongitudinalImpactParameter = cms.double( 0.3 ),
    vertexMinAngleCosine = cms.double( 0.95 ),
    primaryVertices = cms.InputTag( "hltVerticesL3" ),
    tracks = cms.InputTag( "hltIter2MergedForBTag" ),
    maxNTracks = cms.uint32( 30 ),
    clusterizer = cms.PSet( 
      distanceRatio = cms.double( 20.0 ),
      clusterMaxDistance = cms.double( 0.05 ),
      seedMax3DIPSignificance = cms.double( 9999.0 ),
      clusterMaxSignificance = cms.double( 4.5 ),
      seedMin3DIPSignificance = cms.double( 1.2 ),
      clusterMinAngleCosine = cms.double( 0.5 ),
      seedMin3DIPValue = cms.double( 0.005 ),
      seedMax3DIPValue = cms.double( 9999.0 )
    ),
    useVertexReco = cms.bool( True ),
    vertexMinDLenSig = cms.double( 0.5 ),
    useDirectVertexFitter = cms.bool( True ),
    minHits = cms.uint32( 8 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    minPt = cms.double( 0.8 )
)
process.hltInclusiveSecondaryVertices = cms.EDProducer( "VertexMerger",
    minSignificance = cms.double( 2.0 ),
    secondaryVertices = cms.InputTag( "hltInclusiveVertexFinder" ),
    maxFraction = cms.double( 0.7 )
)
process.hltTrackVertexArbitrator = cms.EDProducer( "TrackVertexArbitrator",
    fitterSigmacut = cms.double( 3.0 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    fitterTini = cms.double( 256.0 ),
    trackMinLayers = cms.int32( 4 ),
    fitterRatio = cms.double( 0.25 ),
    secondaryVertices = cms.InputTag( "hltInclusiveSecondaryVertices" ),
    sigCut = cms.double( 5.0 ),
    distCut = cms.double( 0.04 ),
    trackMinPt = cms.double( 0.4 ),
    primaryVertices = cms.InputTag( "hltVerticesL3" ),
    tracks = cms.InputTag( "hltIter2MergedForBTag" ),
    dLenFraction = cms.double( 0.333 ),
    trackMinPixels = cms.int32( 1 ),
    dRCut = cms.double( 0.4 )
)
process.hltInclusiveMergedVertices = cms.EDProducer( "VertexMerger",
    minSignificance = cms.double( 10.0 ),
    secondaryVertices = cms.InputTag( "hltTrackVertexArbitrator" ),
    maxFraction = cms.double( 0.2 )
)
process.hltInclusiveSecondaryVertexFinderTagInfos = cms.EDProducer( "SecondaryVertexProducer",
    extSVDeltaRToJet = cms.double( 0.3 ),
    beamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    vertexReco = cms.PSet( 
      primcut = cms.double( 1.8 ),
      seccut = cms.double( 6.0 ),
      finder = cms.string( "avr" ),
      weightthreshold = cms.double( 0.001 ),
      minweight = cms.double( 0.5 ),
      smoothing = cms.bool( False )
    ),
    vertexSelection = cms.PSet(  sortCriterium = cms.string( "dist3dError" ) ),
    constraint = cms.string( "BeamSpot" ),
    trackIPTagInfos = cms.InputTag( "hltImpactParameterTagInfos" ),
    vertexCuts = cms.PSet( 
      distSig2dMin = cms.double( 2.0 ),
      useTrackWeights = cms.bool( True ),
      distVal3dMax = cms.double( 99999.9 ),
      massMax = cms.double( 6.5 ),
      distSig3dMax = cms.double( 99999.9 ),
      distVal2dMin = cms.double( 0.01 ),
      minimumTrackWeight = cms.double( 0.5 ),
      v0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      distSig2dMax = cms.double( 99999.9 ),
      distSig3dMin = cms.double( -99999.9 ),
      fracPV = cms.double( 0.79 ),
      maxDeltaRToJetAxis = cms.double( 0.5 ),
      distVal2dMax = cms.double( 2.5 ),
      distVal3dMin = cms.double( -99999.9 ),
      multiplicityMin = cms.uint32( 2 )
    ),
    useExternalSV = cms.bool( True ),
    minimumTrackWeight = cms.double( 0.5 ),
    usePVError = cms.bool( True ),
    trackSelection = cms.PSet( 
      max_pT_dRcut = cms.double( 0.1 ),
      b_dR = cms.double( 0.6263 ),
      min_pT = cms.double( 120.0 ),
      b_pT = cms.double( 0.3684 ),
      ptMin = cms.double( 1.0 ),
      max_pT_trackPTcut = cms.double( 3.0 ),
      max_pT = cms.double( 500.0 ),
      useVariableJTA = cms.bool( False ),
      maxDecayLen = cms.double( 99999.9 ),
      qualityClass = cms.string( "any" ),
      normChi2Max = cms.double( 99999.9 ),
      sip2dValMin = cms.double( -99999.9 ),
      sip3dValMin = cms.double( -99999.9 ),
      a_dR = cms.double( -0.001053 ),
      maxDistToAxis = cms.double( 0.2 ),
      totalHitsMin = cms.uint32( 2 ),
      a_pT = cms.double( 0.005263 ),
      sip2dSigMax = cms.double( 99999.9 ),
      sip2dValMax = cms.double( 99999.9 ),
      sip3dSigMax = cms.double( 99999.9 ),
      sip3dValMax = cms.double( 99999.9 ),
      min_pT_dRcut = cms.double( 0.5 ),
      jetDeltaRMax = cms.double( 0.3 ),
      pixelHitsMin = cms.uint32( 2 ),
      sip3dSigMin = cms.double( -99999.9 ),
      sip2dSigMin = cms.double( -99999.9 )
    ),
    trackSort = cms.string( "sip3dSig" ),
    extSVCollection = cms.InputTag( "hltInclusiveMergedVertices" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsInfosCalo = cms.EDProducer( "TrackDeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 0 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 0 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32( 2 ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltInclusiveSecondaryVertexFinderTagInfos" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsCalo = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosCalo" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)
process.hltCaloJetCollection20Filter = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    MaxMass = cms.double( -1.0 ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MinMass = cms.double( -1.0 ),
    inputTag = cms.InputTag( "hltAK4CaloJetsCorrectedIDPassed" ),
    MinE = cms.double( -1.0 ),
    triggerType = cms.int32( 0 ),
    MinPt = cms.double( 20.0 )
)
process.hltPreNoFilterPFBTagCSV = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltBLifetimeAssociatorPF = cms.EDProducer( "JetTracksAssociatorAtVertex",
    jets = cms.InputTag( "hltPFJetForBtag" ),
    tracks = cms.InputTag( "hltPFMuonMerging" ),
    useAssigned = cms.bool( False ),
    coneSize = cms.double( 0.4 ),
    pvSrc = cms.InputTag( "" )
)
process.hltBLifetimeTagInfosPF = cms.EDProducer( "TrackIPProducer",
    maximumTransverseImpactParameter = cms.double( 0.2 ),
    minimumNumberOfHits = cms.int32( 3 ),
    minimumTransverseMomentum = cms.double( 1.0 ),
    primaryVertex = cms.InputTag( "hltVerticesPFFilter" ),
    maximumLongitudinalImpactParameter = cms.double( 17.0 ),
    computeGhostTrack = cms.bool( True ),
    ghostTrackPriorDeltaR = cms.double( 0.03 ),
    jetTracks = cms.InputTag( "hltBLifetimeAssociatorPF" ),
    jetDirectionUsingGhostTrack = cms.bool( False ),
    minimumNumberOfPixelHits = cms.int32( 2 ),
    jetDirectionUsingTracks = cms.bool( False ),
    computeProbabilities = cms.bool( True ),
    useTrackQuality = cms.bool( False ),
    maximumChiSquared = cms.double( 5.0 )
)
process.hltInclusiveVertexFinderPF = cms.EDProducer( "InclusiveVertexFinder",
    fitterSigmacut = cms.double( 3.0 ),
    vertexReco = cms.PSet( 
      primcut = cms.double( 1.0 ),
      seccut = cms.double( 3.0 ),
      finder = cms.string( "avr" ),
      smoothing = cms.bool( True )
    ),
    fitterTini = cms.double( 256.0 ),
    fitterRatio = cms.double( 0.25 ),
    vertexMinDLen2DSig = cms.double( 2.5 ),
    maximumLongitudinalImpactParameter = cms.double( 0.3 ),
    vertexMinAngleCosine = cms.double( 0.95 ),
    primaryVertices = cms.InputTag( "hltVerticesPFFilter" ),
    tracks = cms.InputTag( "hltPFMuonMerging" ),
    maxNTracks = cms.uint32( 30 ),
    clusterizer = cms.PSet( 
      distanceRatio = cms.double( 20.0 ),
      clusterMaxDistance = cms.double( 0.05 ),
      seedMax3DIPSignificance = cms.double( 9999.0 ),
      clusterMaxSignificance = cms.double( 4.5 ),
      seedMin3DIPSignificance = cms.double( 1.2 ),
      clusterMinAngleCosine = cms.double( 0.5 ),
      seedMin3DIPValue = cms.double( 0.005 ),
      seedMax3DIPValue = cms.double( 9999.0 )
    ),
    useVertexReco = cms.bool( True ),
    vertexMinDLenSig = cms.double( 0.5 ),
    useDirectVertexFitter = cms.bool( True ),
    minHits = cms.uint32( 8 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    minPt = cms.double( 0.8 )
)
process.hltInclusiveSecondaryVerticesPF = cms.EDProducer( "VertexMerger",
    minSignificance = cms.double( 2.0 ),
    secondaryVertices = cms.InputTag( "hltInclusiveVertexFinderPF" ),
    maxFraction = cms.double( 0.7 )
)
process.hltTrackVertexArbitratorPF = cms.EDProducer( "TrackVertexArbitrator",
    fitterSigmacut = cms.double( 3.0 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    fitterTini = cms.double( 256.0 ),
    trackMinLayers = cms.int32( 4 ),
    fitterRatio = cms.double( 0.25 ),
    secondaryVertices = cms.InputTag( "hltInclusiveSecondaryVerticesPF" ),
    sigCut = cms.double( 5.0 ),
    distCut = cms.double( 0.04 ),
    trackMinPt = cms.double( 0.4 ),
    primaryVertices = cms.InputTag( "hltVerticesPFFilter" ),
    tracks = cms.InputTag( "hltPFMuonMerging" ),
    dLenFraction = cms.double( 0.333 ),
    trackMinPixels = cms.int32( 1 ),
    dRCut = cms.double( 0.4 )
)
process.hltInclusiveMergedVerticesPF = cms.EDProducer( "VertexMerger",
    minSignificance = cms.double( 10.0 ),
    secondaryVertices = cms.InputTag( "hltTrackVertexArbitratorPF" ),
    maxFraction = cms.double( 0.2 )
)
process.hltSecondaryVertexTagInfosPF = cms.EDProducer( "SecondaryVertexProducer",
    extSVDeltaRToJet = cms.double( 0.3 ),
    beamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    vertexReco = cms.PSet( 
      primcut = cms.double( 1.8 ),
      seccut = cms.double( 6.0 ),
      finder = cms.string( "avr" ),
      weightthreshold = cms.double( 0.001 ),
      minweight = cms.double( 0.5 ),
      smoothing = cms.bool( False )
    ),
    vertexSelection = cms.PSet(  sortCriterium = cms.string( "dist3dError" ) ),
    constraint = cms.string( "BeamSpot" ),
    trackIPTagInfos = cms.InputTag( "hltBLifetimeTagInfosPF" ),
    vertexCuts = cms.PSet( 
      distSig2dMin = cms.double( 2.0 ),
      useTrackWeights = cms.bool( True ),
      distVal3dMax = cms.double( 99999.9 ),
      massMax = cms.double( 6.5 ),
      distSig3dMax = cms.double( 99999.9 ),
      distVal2dMin = cms.double( 0.01 ),
      minimumTrackWeight = cms.double( 0.5 ),
      v0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      distSig2dMax = cms.double( 99999.9 ),
      distSig3dMin = cms.double( -99999.9 ),
      fracPV = cms.double( 0.79 ),
      maxDeltaRToJetAxis = cms.double( 0.5 ),
      distVal2dMax = cms.double( 2.5 ),
      distVal3dMin = cms.double( -99999.9 ),
      multiplicityMin = cms.uint32( 2 )
    ),
    useExternalSV = cms.bool( True ),
    minimumTrackWeight = cms.double( 0.5 ),
    usePVError = cms.bool( True ),
    trackSelection = cms.PSet( 
      maxDistToAxis = cms.double( 0.2 ),
      totalHitsMin = cms.uint32( 2 ),
      ptMin = cms.double( 1.0 ),
      sip2dSigMax = cms.double( 99999.9 ),
      sip2dValMax = cms.double( 99999.9 ),
      sip3dSigMax = cms.double( 99999.9 ),
      sip3dValMax = cms.double( 99999.9 ),
      maxDecayLen = cms.double( 99999.9 ),
      qualityClass = cms.string( "any" ),
      jetDeltaRMax = cms.double( 0.3 ),
      normChi2Max = cms.double( 99999.9 ),
      pixelHitsMin = cms.uint32( 2 ),
      sip2dSigMin = cms.double( -99999.9 ),
      sip2dValMin = cms.double( -99999.9 ),
      sip3dSigMin = cms.double( -99999.9 ),
      sip3dValMin = cms.double( -99999.9 )
    ),
    trackSort = cms.string( "sip3dSig" ),
    extSVCollection = cms.InputTag( "hltInclusiveMergedVerticesPF" )
)
process.hltCombinedSecondaryVertexBJetTagsPF = cms.EDProducer( "JetTagProducer",
    jetTagComputer = cms.string( "hltCombinedSecondaryVertexV2" ),
    tagInfos = cms.VInputTag( 'hltBLifetimeTagInfosPF','hltSecondaryVertexTagInfosPF' )
)
process.hltPreNoFilterCaloBTagCSV = cms.EDFilter( "HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" ),
    offset = cms.uint32( 0 )
)
process.hltCombinedSecondaryVertexBJetTagsCalo = cms.EDProducer( "JetTagProducer",
    jetTagComputer = cms.string( "hltCombinedSecondaryVertexV2" ),
    tagInfos = cms.VInputTag( 'hltImpactParameterTagInfos','hltInclusiveSecondaryVertexFinderTagInfos' )
)
process.hltFEDSelector = cms.EDProducer( "EvFFEDSelector",
    inputTag = cms.InputTag( "rawDataCollector" ),
    fedList = cms.vuint32( 1023, 1024 )
)
process.hltTriggerSummaryAOD = cms.EDProducer( "TriggerSummaryProducerAOD",
    moduleLabelPatternsToSkip = cms.vstring(  ),
    processName = cms.string( "@" ),
    moduleLabelPatternsToMatch = cms.vstring( 'hlt*' ),
    throw = cms.bool( False )
)
process.hltTriggerSummaryRAW = cms.EDProducer( "TriggerSummaryProducerRAW",
    processName = cms.string( "@" )
)






process.HLTL1UnpackerSequence = cms.Sequence( process.hltGtStage2Digis + process.hltGtStage2ObjectMap )
process.HLTBeamSpot = cms.Sequence( process.hltScalersRawToDigi + process.hltOnlineBeamSpot )
process.HLTBeginSequence = cms.Sequence( process.hltTriggerType + process.HLTL1UnpackerSequence + process.HLTBeamSpot )
process.HLTMuonLocalRecoSequence = cms.Sequence( process.hltMuonDTDigis + process.hltDt1DRecHits + process.hltDt4DSegments + process.hltMuonCSCDigis + process.hltCsc2DRecHits + process.hltCscSegments + process.hltMuonRPCDigis + process.hltRpcRecHits )
process.HLTL2muonrecoNocandSequence = cms.Sequence( process.HLTMuonLocalRecoSequence + process.hltL2OfflineMuonSeeds + process.hltL2MuonSeeds + process.hltL2Muons )
process.HLTL2muonrecoSequence = cms.Sequence( process.HLTL2muonrecoNocandSequence + process.hltL2MuonCandidates )
process.HLTDoLocalPixelSequence = cms.Sequence( process.hltSiPixelDigis + process.hltSiPixelClusters + process.hltSiPixelClustersCache + process.hltSiPixelRecHits )
process.HLTDoLocalStripSequence = cms.Sequence( process.hltSiStripExcludedFEDListProducer + process.hltSiStripRawToClustersFacility + process.hltSiStripClusters )
process.HLTIterL3OImuonTkCandidateSequence = cms.Sequence( process.hltIterL3OISeedsFromL2Muons + process.hltIterL3OITrackCandidates + process.hltIterL3OIMuCtfWithMaterialTracks + process.hltIterL3OIMuonTrackCutClassifier + process.hltIterL3OIMuonTrackSelectionHighPurity + process.hltL3MuonsIterL3OI )
process.HLTIterL3MuonRecoPixelTracksSequence = cms.Sequence( process.hltIterL3MuonPixelTracksFilter + process.hltIterL3MuonPixelTracksFitter + process.hltIterL3MuonPixelTracksTrackingRegions + process.hltIterL3MuonPixelLayerQuadruplets + process.hltIterL3MuonPixelTracksHitDoublets + process.hltIterL3MuonPixelTracksHitQuadruplets + process.hltIterL3MuonPixelTracks )
process.HLTIterL3MuonRecopixelvertexingSequence = cms.Sequence( process.HLTIterL3MuonRecoPixelTracksSequence + process.hltIterL3MuonPixelVertices + process.hltIterL3MuonTrimmedPixelVertices )
process.HLTIterativeTrackingIteration0ForIterL3Muon = cms.Sequence( process.hltIter0IterL3MuonPixelSeedsFromPixelTracks + process.hltIter0IterL3MuonCkfTrackCandidates + process.hltIter0IterL3MuonCtfWithMaterialTracks + process.hltIter0IterL3MuonTrackCutClassifier + process.hltIter0IterL3MuonTrackSelectionHighPurity )
process.HLTIterativeTrackingIteration2ForIterL3Muon = cms.Sequence( process.hltIter2IterL3MuonClustersRefRemoval + process.hltIter2IterL3MuonMaskedMeasurementTrackerEvent + process.hltIter2IterL3MuonPixelLayerTriplets + process.hltIter2IterL3MuonPixelClusterCheck + process.hltIter2IterL3MuonPixelHitDoublets + process.hltIter2IterL3MuonPixelHitTriplets + process.hltIter2IterL3MuonPixelSeeds + process.hltIter2IterL3MuonCkfTrackCandidates + process.hltIter2IterL3MuonCtfWithMaterialTracks + process.hltIter2IterL3MuonTrackCutClassifier + process.hltIter2IterL3MuonTrackSelectionHighPurity )
process.HLTIterativeTrackingIter02ForIterL3Muon = cms.Sequence( process.HLTIterativeTrackingIteration0ForIterL3Muon + process.HLTIterativeTrackingIteration2ForIterL3Muon + process.hltIter2IterL3MuonMerged )
process.HLTIterL3IOmuonTkCandidateSequence = cms.Sequence( process.HLTIterL3MuonRecopixelvertexingSequence + process.HLTIterativeTrackingIter02ForIterL3Muon + process.hltL3MuonsIterL3IO )
process.HLTIterL3OIAndIOFromL2muonTkCandidateSequence = cms.Sequence( process.HLTIterL3OImuonTkCandidateSequence + process.hltIterL3OIL3MuonsLinksCombination + process.hltIterL3OIL3Muons + process.hltIterL3OIL3MuonCandidates + process.hltL2SelectorForL3IO + process.HLTIterL3IOmuonTkCandidateSequence + process.hltIterL3MuonsFromL2LinksCombination + process.hltIterL3MuonsFromL2 )
process.HLTRecoPixelTracksSequenceForIterL3FromL1Muon = cms.Sequence( process.hltIterL3FromL1MuonPixelTracksTrackingRegions + process.hltIterL3FromL1MuonPixelLayerQuadruplets + process.hltIterL3FromL1MuonPixelTracksHitDoublets + process.hltIterL3FromL1MuonPixelTracksHitQuadruplets + process.hltIterL3FromL1MuonPixelTracks )
process.HLTRecopixelvertexingSequenceForIterL3FromL1Muon = cms.Sequence( process.HLTRecoPixelTracksSequenceForIterL3FromL1Muon + process.hltIterL3FromL1MuonPixelVertices + process.hltIterL3FromL1MuonTrimmedPixelVertices )
process.HLTIterativeTrackingIteration0ForIterL3FromL1Muon = cms.Sequence( process.hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracks + process.hltIter0IterL3FromL1MuonCkfTrackCandidates + process.hltIter0IterL3FromL1MuonCtfWithMaterialTracks + process.hltIter0IterL3FromL1MuonTrackCutClassifier + process.hltIter0IterL3FromL1MuonTrackSelectionHighPurity )
process.HLTIterativeTrackingIteration2ForIterL3FromL1Muon = cms.Sequence( process.hltIter2IterL3FromL1MuonClustersRefRemoval + process.hltIter2IterL3FromL1MuonMaskedMeasurementTrackerEvent + process.hltIter2IterL3FromL1MuonPixelLayerTriplets + process.hltIter2IterL3FromL1MuonPixelClusterCheck + process.hltIter2IterL3FromL1MuonPixelHitDoublets + process.hltIter2IterL3FromL1MuonPixelHitTriplets + process.hltIter2IterL3FromL1MuonPixelSeeds + process.hltIter2IterL3FromL1MuonCkfTrackCandidates + process.hltIter2IterL3FromL1MuonCtfWithMaterialTracks + process.hltIter2IterL3FromL1MuonTrackCutClassifier + process.hltIter2IterL3FromL1MuonTrackSelectionHighPurity )
process.HLTIterativeTrackingIter02ForIterL3FromL1Muon = cms.Sequence( process.HLTIterativeTrackingIteration0ForIterL3FromL1Muon + process.HLTIterativeTrackingIteration2ForIterL3FromL1Muon + process.hltIter2IterL3FromL1MuonMerged )
process.HLTIterL3IOmuonFromL1TkCandidateSequence = cms.Sequence( process.HLTRecopixelvertexingSequenceForIterL3FromL1Muon + process.HLTIterativeTrackingIter02ForIterL3FromL1Muon )
process.HLTIterL3muonTkCandidateSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.HLTIterL3OIAndIOFromL2muonTkCandidateSequence + process.hltIterL3MuonL1MuonNoL2Selector + process.HLTIterL3IOmuonFromL1TkCandidateSequence )
process.HLTL3muonrecoNocandSequence = cms.Sequence( process.HLTIterL3muonTkCandidateSequence + process.hltIterL3MuonMerged + process.hltIterL3MuonAndMuonFromL1Merged + process.hltL3MuonsIterL3Links + process.hltIterL3Muons )
process.HLTL3muonrecoSequence = cms.Sequence( process.HLTL3muonrecoNocandSequence + process.hltIterL3MuonCandidates )
process.HLTPixelTrackingL3Muon = cms.Sequence( process.hltL3MuonVertex + process.HLTDoLocalPixelSequence + process.hltPixelLayerQuadruplets + process.hltPixelTracksL3MuonFilter + process.hltPixelTracksL3MuonFitter + process.hltPixelTracksTrackingRegionsL3Muon + process.hltPixelTracksHitDoubletsL3Muon + process.hltPixelTracksHitQuadrupletsL3Muon + process.hltPixelTracksL3Muon + process.hltPixelVerticesL3Muon )
process.HLTIterativeTrackingL3MuonIteration0 = cms.Sequence( process.hltPixelTracksForSeedsL3MuonFilter + process.hltPixelTracksForSeedsL3MuonFitter + process.hltPixelTracksTrackingRegionsForSeedsL3Muon + process.hltPixelTracksHitDoubletsForSeedsL3Muon + process.hltPixelTracksHitQuadrupletsForSeedsL3Muon + process.hltPixelTracksForSeedsL3Muon + process.hltIter0L3MuonPixelSeedsFromPixelTracks + process.hltIter0L3MuonCkfTrackCandidates + process.hltIter0L3MuonCtfWithMaterialTracks + process.hltIter0L3MuonTrackCutClassifier + process.hltIter0L3MuonTrackSelectionHighPurity )
process.HLTIterativeTrackingL3MuonIteration1 = cms.Sequence( process.hltIter1L3MuonClustersRefRemoval + process.hltIter1L3MuonMaskedMeasurementTrackerEvent + process.hltIter1L3MuonPixelLayerQuadruplets + process.hltIter1L3MuonPixelTrackingRegions + process.hltIter1L3MuonPixelClusterCheck + process.hltIter1L3MuonPixelHitDoublets + process.hltIter1L3MuonPixelHitQuadruplets + process.hltIter1L3MuonPixelSeeds + process.hltIter1L3MuonCkfTrackCandidates + process.hltIter1L3MuonCtfWithMaterialTracks + process.hltIter1L3MuonTrackCutClassifierPrompt + process.hltIter1L3MuonTrackCutClassifierDetached + process.hltIter1L3MuonTrackCutClassifierMerged + process.hltIter1L3MuonTrackSelectionHighPurity )
process.HLTIterativeTrackingL3MuonIteration2 = cms.Sequence( process.hltIter2L3MuonClustersRefRemoval + process.hltIter2L3MuonMaskedMeasurementTrackerEvent + process.hltIter2L3MuonPixelLayerTriplets + process.hltIter2L3MuonPixelTrackingRegions + process.hltIter2L3MuonPixelClusterCheck + process.hltIter2L3MuonPixelHitDoublets + process.hltIter2L3MuonPixelHitTriplets + process.hltIter2L3MuonPixelSeeds + process.hltIter2L3MuonCkfTrackCandidates + process.hltIter2L3MuonCtfWithMaterialTracks + process.hltIter2L3MuonTrackCutClassifier + process.hltIter2L3MuonTrackSelectionHighPurity )
process.HLTIterativeTrackingL3MuonIter02 = cms.Sequence( process.HLTIterativeTrackingL3MuonIteration0 + process.HLTIterativeTrackingL3MuonIteration1 + process.hltIter1L3MuonMerged + process.HLTIterativeTrackingL3MuonIteration2 + process.hltIter2L3MuonMerged )
process.HLTL3muontrkisorecoSequence = cms.Sequence( process.HLTPixelTrackingL3Muon + process.HLTDoLocalStripSequence + process.HLTIterativeTrackingL3MuonIter02 )
process.HLTL3muontrkisovvlSequence = cms.Sequence( process.HLTL3muontrkisorecoSequence + process.hltL3MuonRelTrkIsolationVVL )
process.HLTMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegSequence = cms.Sequence( process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL2Filtered10) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3Mu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL1Filtered0) + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL3Filtered23 + process.HLTL3muontrkisovvlSequence + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegL3IsoFiltered23 )
process.HLTDoFullUnpackingEgammaEcalSequence = cms.Sequence( process.hltEcalDigis + process.hltEcalPreshowerDigis + process.hltEcalUncalibRecHit + process.hltEcalDetIdToBeRecovered + process.hltEcalRecHit + process.hltEcalPreshowerRecHit )
process.HLTPFClusteringForEgamma = cms.Sequence( process.hltRechitInRegionsECAL + process.hltRechitInRegionsES + process.hltParticleFlowRecHitECALL1Seeded + process.hltParticleFlowRecHitPSL1Seeded + process.hltParticleFlowClusterPSL1Seeded + process.hltParticleFlowClusterECALUncorrectedL1Seeded + process.hltParticleFlowClusterECALL1Seeded + process.hltParticleFlowSuperClusterECALL1Seeded )
process.HLTDoLocalHcalWithTowerL1EGSeededSequence = cms.Sequence( process.hltHcalDigis + process.hltHbhePhase1Reco + process.hltHbhereco + process.hltHfprereco + process.hltHfreco + process.hltHoreco + process.hltTowerMakerForAll + process.hltHcalDigisL1EGSeeded + process.hltHbhePhase1RecoMethod2L1EGSeeded + process.hltHbherecoMethod2L1EGSeeded + process.hltTowerMakerMethod2L1EGSeeded )
process.HLTFastJetForEgamma = cms.Sequence( process.hltFixedGridRhoFastjetAllCaloForMuons )
process.HLTPFHcalClusteringForEgamma = cms.Sequence( process.hltRegionalTowerForEgamma + process.hltParticleFlowRecHitHBHEForEgamma + process.hltParticleFlowClusterHBHEForEgamma + process.hltParticleFlowClusterHCALForEgamma )
process.HLTElePixelMatchSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.hltPixelLayerPairs + process.hltPixelLayerTriplets + process.hltEgammaHoverE + process.hltEgammaSuperClustersToPixelMatch + process.hltEleSeedsTrackingRegions + process.hltElePixelHitDoublets + process.hltElePixelHitDoubletsForTriplets + process.hltElePixelHitTriplets + process.hltElePixelSeedsDoublets + process.hltElePixelSeedsTriplets + process.hltElePixelSeedsCombined + process.hltEgammaElectronPixelSeeds + process.hltEgammaPixelMatchVars )
process.HLTGsfElectronSequence = cms.Sequence( process.hltEgammaCkfTrackCandidatesForGSF + process.hltEgammaGsfTracks + process.hltEgammaGsfElectrons + process.hltEgammaGsfTrackVars )
process.HLTRecoPixelVertexingForElectronSequence = cms.Sequence( process.hltPixelLayerTriplets + process.hltPixelTracksElectronsFilter + process.hltPixelTracksElectronsFitter + process.hltPixelTracksTrackingRegionsElectrons + process.hltPixelTracksHitDoubletsElectrons + process.hltPixelTracksHitTripletsElectrons + process.hltPixelTracksElectrons + process.hltPixelVerticesElectrons )
process.HLTPixelTrackingForElectron = cms.Sequence( process.hltElectronsVertex + process.HLTDoLocalPixelSequence + process.HLTRecoPixelVertexingForElectronSequence )
process.HLTIterativeTrackingForElectronsIteration0 = cms.Sequence( process.hltIter0ElectronsPixelSeedsFromPixelTracks + process.hltIter0ElectronsCkfTrackCandidates + process.hltIter0ElectronsCtfWithMaterialTracks + process.hltIter0ElectronsTrackSelectionHighPurity )
process.HLTIterativeTrackingForElectronsIteration1 = cms.Sequence( process.hltIter1ElectronsClustersRefRemoval + process.hltIter1ElectronsMaskedMeasurementTrackerEvent + process.hltIter1ElectronsPixelLayerTriplets + process.hltIter1ElectronsPixelTrackingRegions + process.hltIter1ElectronsPixelClusterCheck + process.hltIter1ElectronsPixelHitDoublets + process.hltIter1ElectronsPixelHitTriplets + process.hltIter1ElectronsPixelSeeds + process.hltIter1ElectronsCkfTrackCandidates + process.hltIter1ElectronsCtfWithMaterialTracks + process.hltIter1ElectronsTrackSelectionHighPurityLoose + process.hltIter1ElectronsTrackSelectionHighPurityTight + process.hltIter1ElectronsTrackSelectionHighPurity )
process.HLTIterativeTrackingForElectronsIteration2 = cms.Sequence( process.hltIter2ElectronsClustersRefRemoval + process.hltIter2ElectronsMaskedMeasurementTrackerEvent + process.hltIter2ElectronsPixelLayerPairs + process.hltIter2ElectronsPixelTrackingRegions + process.hltIter2ElectronsPixelClusterCheck + process.hltIter2ElectronsPixelHitDoublets + process.hltIter2ElectronsPixelSeeds + process.hltIter2ElectronsCkfTrackCandidates + process.hltIter2ElectronsCtfWithMaterialTracks + process.hltIter2ElectronsTrackSelectionHighPurity )
process.HLTIterativeTrackingForElectronIter02 = cms.Sequence( process.HLTIterativeTrackingForElectronsIteration0 + process.HLTIterativeTrackingForElectronsIteration1 + process.hltIter1MergedForElectrons + process.HLTIterativeTrackingForElectronsIteration2 + process.hltIter2MergedForElectrons )
process.HLTTrackReconstructionForIsoElectronIter02 = cms.Sequence( process.HLTPixelTrackingForElectron + process.HLTDoLocalStripSequence + process.HLTIterativeTrackingForElectronIter02 )
process.HLTMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegL1MatchFilter + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegEtFilter + process.hltEgammaClusterShape + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegClusterShapeFilter + process.HLTDoLocalHcalWithTowerL1EGSeededSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegHEFilter + process.hltEgammaEcalPFClusterIso + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegEcalIsoFilter + process.HLTPFHcalClusteringForEgamma + process.hltEgammaHcalPFClusterIso + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegHcalIsoFilter + process.HLTElePixelMatchSequence + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegPixelMatchFilter + process.HLTGsfElectronSequence + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegOneOEMinusOneOPFilter + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegDetaFilter + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegDphiFilter + process.HLTTrackReconstructionForIsoElectronIter02 + process.hltEgammaEleGsfTrackIso + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegTrackIsoFilter )
process.HLTEndSequence = cms.Sequence( process.hltBoolEnd )
process.HLTMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegSequence = cms.Sequence( process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL2Filtered5) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3Mu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL1Filtered0) + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL3Filtered12 + process.HLTL3muontrkisovvlSequence + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegL3IsoFiltered12 )
process.HLTMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegL1MatchFilter + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegEtFilter + process.hltEgammaClusterShape + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegClusterShapeFilter + process.HLTDoLocalHcalWithTowerL1EGSeededSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegHEFilter + process.hltEgammaEcalPFClusterIso + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegEcalIsoFilter + process.HLTPFHcalClusteringForEgamma + process.hltEgammaHcalPFClusterIso + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegHcalIsoFilter + process.HLTElePixelMatchSequence + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegPixelMatchFilter + process.HLTGsfElectronSequence + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegOneOEMinusOneOPFilter + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegDetaFilter + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegDphiFilter + process.HLTTrackReconstructionForIsoElectronIter02 + process.hltEgammaEleGsfTrackIso + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegTrackIsoFilter )
process.HLTPFClusteringForEgammaUnseeded = cms.Sequence( process.hltParticleFlowRecHitECALUnseeded + process.hltParticleFlowRecHitPSUnseeded + process.hltParticleFlowClusterPSUnseeded + process.hltParticleFlowClusterECALUncorrectedUnseeded + process.hltParticleFlowClusterECALUnseeded + process.hltParticleFlowSuperClusterECALUnseeded )
process.HLTDoLocalHcalWithTowerL1EGUnseededSequence = cms.Sequence( process.hltHcalDigis + process.hltHbhePhase1Reco + process.hltHbhereco + process.hltHfprereco + process.hltHfreco + process.hltHoreco + process.hltTowerMakerForAll + process.hltHcalDigisL1EGUnseeded + process.hltHbhePhase1RecoMethod2L1EGUnseeded + process.hltHbherecoMethod2L1EGUnseeded + process.hltTowerMakerMethod2L1EGUnseeded )
process.HLTElePixelMatchUnseededSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.hltPixelLayerPairs + process.hltPixelLayerTriplets + process.hltEgammaHoverEUnseeded + process.hltEgammaSuperClustersToPixelMatchUnseeded + process.hltEleSeedsTrackingRegionsUnseeded + process.hltElePixelHitDoubletsUnseeded + process.hltElePixelHitDoubletsForTripletsUnseeded + process.hltElePixelHitTripletsUnseeded + process.hltElePixelSeedsDoubletsUnseeded + process.hltElePixelSeedsTripletsUnseeded + process.hltElePixelSeedsCombinedUnseeded + process.hltEgammaElectronPixelSeedsUnseeded + process.hltEgammaPixelMatchVarsUnseeded )
process.HLTEle27CaloIdLUnseededSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgammaUnseeded + process.hltEgammaCandidatesUnseeded + process.hltEgammaCandidatesWrapperUnseeded + process.hltEG27EtUnseededFilter + process.HLTDoLocalHcalWithTowerL1EGUnseededSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverEUnseeded + process.hltEG27HEUnseededFilter + process.hltEgammaClusterShapeUnseeded + process.hltEG27CaloIdLClusterShapeUnseededFilter + process.HLTElePixelMatchUnseededSequence + process.hltEle27CaloIdLPixelMatchUnseededFilter )
process.HLTEle27CaloIdLMWUnseededSequence = cms.Sequence( process.HLTEle27CaloIdLUnseededSequence + process.hltEle27CaloIdLMWPMS2UnseededFilter )
process.HLTEle23Ele12CaloIdLTrackIdLIsoVLSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltEGL1SingleAndDoubleEGOrPairFilter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLEtLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLEtLeg2Filter + process.hltEgammaClusterShape + process.hltEle23Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLClusterShapeLeg2Filter + process.HLTDoLocalHcalWithTowerL1EGSeededSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltEle23Ele12CaloIdLTrackIdLIsoVLHELeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLHELeg2Filter + process.hltEgammaEcalPFClusterIso + process.hltEle23Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLEcalIsoLeg2Filter + process.HLTPFHcalClusteringForEgamma + process.hltEgammaHcalPFClusterIso + process.hltEle23Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLHcalIsoLeg2Filter + process.HLTElePixelMatchSequence + process.hltEle23Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLPixelMatchLeg2Filter + process.HLTGsfElectronSequence + process.hltEle23Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLOneOEMinusOneOPLeg2Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLDetaLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLDetaLeg2Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLDphiLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLDphiLeg2Filter + process.HLTTrackReconstructionForIsoElectronIter02 + process.hltEgammaEleGsfTrackIso + process.hltEle23Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg1Filter + process.hltEle23Ele12CaloIdLTrackIdLIsoVLTrackIsoLeg2Filter )
process.HLTEle37CaloIdLUnseededSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgammaUnseeded + process.hltEgammaCandidatesUnseeded + process.hltEgammaCandidatesWrapperUnseeded + process.hltEG37EtUnseededFilter + process.HLTDoLocalHcalWithTowerL1EGUnseededSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverEUnseeded + process.hltEG37HEUnseededFilter + process.hltEgammaClusterShapeUnseeded + process.hltEG37CaloIdLClusterShapeUnseededFilter + process.HLTElePixelMatchUnseededSequence + process.hltEle37CaloIdLPixelMatchUnseededFilter )
process.HLTEle37CaloIdLMWUnseededSequence = cms.Sequence( process.HLTEle37CaloIdLUnseededSequence + process.hltEle37CaloIdLMWPMS2UnseededFilter )
process.HLTEle37CaloIdLSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltEGL1SingleAndDoubleEGNonIsoOrWithEG26WithJetAndTauFilter + process.hltEG37EtFilter + process.HLTDoLocalHcalWithTowerL1EGSeededSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltEG37HEFilter + process.hltEgammaClusterShape + process.hltEG37CaloIdLClusterShapeFilter + process.HLTElePixelMatchSequence + process.hltEle37CaloIdLPixelMatchFilter )
process.HLTEle37CaloIdLMWSequence = cms.Sequence( process.HLTEle37CaloIdLSequence + process.hltEle37CaloIdLMWPMS2Filter )
process.HLTDoubleEle37Ele27CaloIdLUnseededSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgammaUnseeded + process.hltEgammaCandidatesUnseeded + process.hltEgammaCandidatesWrapperUnseeded + process.hltEG37EtUnseededFilter + process.hltDiEG27EtUnseededFilter + process.HLTDoLocalHcalWithTowerL1EGUnseededSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverEUnseeded + process.hltDiEG27HEUnseededFilter + process.hltEG37HEUnseededFilter + process.hltEgammaClusterShapeUnseeded + process.hltDiEG27CaloIdLClusterShapeUnseededFilter + process.hltEG37CaloIdLClusterShapeUnseededFilter + process.HLTElePixelMatchUnseededSequence + process.hltDiEle27CaloIdLPixelMatchUnseededFilter + process.hltEle37CaloIdLPixelMatchUnseededFilter )
process.HLTDoubleEle37Ele27CaloIdLMWSequence = cms.Sequence( process.HLTDoubleEle37Ele27CaloIdLUnseededSequence + process.hltDiEle27CaloIdLMWPMS2UnseededFilter + process.hltEle37CaloIdLMWPMS2UnseededFilter )
process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence = cms.Sequence( process.hltEcalDigis + process.hltEcalUncalibRecHit + process.hltEcalDetIdToBeRecovered + process.hltEcalRecHit )
process.HLTDoLocalHcalSequence = cms.Sequence( process.hltHcalDigis + process.hltHbhePhase1Reco + process.hltHbhereco + process.hltHfprereco + process.hltHfreco + process.hltHoreco )
process.HLTDoCaloSequencePF = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence + process.HLTDoLocalHcalSequence + process.hltTowerMakerForPF )
process.HLTAK4CaloJetsPrePFRecoSequence = cms.Sequence( process.HLTDoCaloSequencePF + process.hltAK4CaloJetsPF )
process.HLTPreAK4PFJetsRecoSequence = cms.Sequence( process.HLTAK4CaloJetsPrePFRecoSequence + process.hltAK4CaloJetsPFEt5 )
process.HLTRecoPixelTracksSequence = cms.Sequence( process.hltPixelTracksFilter + process.hltPixelTracksFitter + process.hltPixelTracksTrackingRegions + process.hltPixelLayerQuadruplets + process.hltPixelTracksHitDoublets + process.hltPixelTracksHitQuadruplets + process.hltPixelTracks + process.hltPixelTripletsClustersRefRemoval + process.hltPixelTracksTrackingRegionsForTriplets + process.hltPixelLayerTripletsWithClustersRemoval + process.hltPixelTracksHitDoubletsForTriplets + process.hltPixelTracksHitTriplets + process.hltPixelTracksFromTriplets + process.hltPixelTracksMerged )
process.HLTRecopixelvertexingSequence = cms.Sequence( process.HLTRecoPixelTracksSequence + process.hltPixelVertices + process.hltTrimmedPixelVertices )
process.HLTIterativeTrackingIteration0 = cms.Sequence( process.hltIter0PFLowPixelSeedsFromPixelTracks + process.hltIter0PFlowCkfTrackCandidates + process.hltIter0PFlowCtfWithMaterialTracks + process.hltIter0PFlowTrackCutClassifier + process.hltIter0PFlowTrackSelectionHighPurity )
process.HLTIterativeTrackingIteration1 = cms.Sequence( process.hltIter1ClustersRefRemoval + process.hltIter1MaskedMeasurementTrackerEvent + process.hltIter1PixelLayerQuadruplets + process.hltIter1PFlowPixelTrackingRegions + process.hltIter1PFlowPixelClusterCheck + process.hltIter1PFlowPixelHitDoublets + process.hltIter1PFlowPixelHitQuadruplets + process.hltIter1PixelTracks + process.hltIter1PFLowPixelSeedsFromPixelTracks + process.hltIter1PFlowCkfTrackCandidates + process.hltIter1PFlowCtfWithMaterialTracks + process.hltIter1PFlowTrackCutClassifierPrompt + process.hltIter1PFlowTrackCutClassifierDetached + process.hltIter1PFlowTrackCutClassifierMerged + process.hltIter1PFlowTrackSelectionHighPurity )
process.HLTIter1TrackAndTauJets4Iter2Sequence = cms.Sequence( process.hltIter1TrackRefsForJets4Iter2 + process.hltAK4Iter1TrackJets4Iter2 + process.hltIter1TrackAndTauJets4Iter2 )
process.HLTIterativeTrackingIteration2 = cms.Sequence( process.hltIter2ClustersRefRemoval + process.hltIter2MaskedMeasurementTrackerEvent + process.hltIter2PixelLayerTriplets + process.hltIter2PFlowPixelTrackingRegions + process.hltIter2PFlowPixelClusterCheck + process.hltIter2PFlowPixelHitDoublets + process.hltIter2PFlowPixelHitTriplets + process.hltIter2PFlowPixelSeeds + process.hltIter2PFlowCkfTrackCandidates + process.hltIter2PFlowCtfWithMaterialTracks + process.hltIter2PFlowTrackCutClassifier + process.hltIter2PFlowTrackSelectionHighPurity )
process.HLTIterativeTrackingTripletRecovery = cms.Sequence( process.hltTripletRecoveryClustersRefRemoval + process.hltTripletRecoveryMaskedMeasurementTrackerEvent + process.hltTripletRecoveryPixelLayerTriplets + process.hltTripletRecoveryPFlowPixelTrackingRegions + process.hltTripletRecoveryPFlowPixelClusterCheck + process.hltTripletRecoveryPFlowPixelHitDoublets + process.hltTripletRecoveryPFlowPixelHitTriplets + process.hltTripletRecoveryPFlowPixelSeeds + process.hltTripletRecoveryPFlowCkfTrackCandidates + process.hltTripletRecoveryPFlowCtfWithMaterialTracks + process.hltTripletRecoveryPFlowTrackCutClassifier + process.hltTripletRecoveryPFlowTrackSelectionHighPurity )
process.HLTIterativeTrackingDoubletRecovery = cms.Sequence( process.hltDoubletRecoveryClustersRefRemoval + process.hltDoubletRecoveryMaskedMeasurementTrackerEvent + process.hltDoubletRecoveryPixelLayerPairs + process.hltDoubletRecoveryPFlowPixelTrackingRegions + process.hltDoubletRecoveryPFlowPixelClusterCheck + process.hltDoubletRecoveryPFlowPixelHitDoublets + process.hltDoubletRecoveryPFlowPixelSeeds + process.hltDoubletRecoveryPFlowCkfTrackCandidates + process.hltDoubletRecoveryPFlowCtfWithMaterialTracks + process.hltDoubletRecoveryPFlowTrackCutClassifier + process.hltDoubletRecoveryPFlowTrackSelectionHighPurity )
process.HLTIterativeTrackingIter02 = cms.Sequence( process.HLTIterativeTrackingIteration0 + process.HLTIterativeTrackingIteration1 + process.hltIter1Merged + process.HLTIter1TrackAndTauJets4Iter2Sequence + process.HLTIterativeTrackingIteration2 + process.hltIter2Merged + process.HLTIterativeTrackingTripletRecovery + process.hltTripletRecoveryMerged + process.HLTIterativeTrackingDoubletRecovery + process.hltMergedTracks )
process.HLTTrackReconstructionForPF = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTRecopixelvertexingSequence + process.HLTDoLocalStripSequence + process.HLTIterativeTrackingIter02 + process.hltPFMuonMerging + process.hltMuonLinks + process.hltMuons )
process.HLTPreshowerSequence = cms.Sequence( process.hltEcalPreshowerDigis + process.hltEcalPreshowerRecHit )
process.HLTParticleFlowSequence = cms.Sequence( process.HLTPreshowerSequence + process.hltParticleFlowRecHitECALUnseeded + process.hltParticleFlowRecHitHBHE + process.hltParticleFlowRecHitHF + process.hltParticleFlowRecHitPSUnseeded + process.hltParticleFlowClusterECALUncorrectedUnseeded + process.hltParticleFlowClusterPSUnseeded + process.hltParticleFlowClusterECALUnseeded + process.hltParticleFlowClusterHBHE + process.hltParticleFlowClusterHCAL + process.hltParticleFlowClusterHF + process.hltLightPFTracks + process.hltParticleFlowBlock + process.hltParticleFlow )
process.HLTAK4PFJetsReconstructionSequence = cms.Sequence( process.HLTL2muonrecoSequence + process.HLTL3muonrecoSequence + process.HLTTrackReconstructionForPF + process.HLTParticleFlowSequence + process.hltAK4PFJets + process.hltAK4PFJetsLooseID + process.hltAK4PFJetsTightID )
process.HLTAK4PFCorrectorProducersSequence = cms.Sequence( process.hltAK4PFFastJetCorrector + process.hltAK4PFRelativeCorrector + process.hltAK4PFAbsoluteCorrector + process.hltAK4PFResidualCorrector + process.hltAK4PFCorrector )
process.HLTAK4PFJetsCorrectionSequence = cms.Sequence( process.hltFixedGridRhoFastjetAll + process.HLTAK4PFCorrectorProducersSequence + process.hltAK4PFJetsCorrected + process.hltAK4PFJetsLooseIDCorrected + process.hltAK4PFJetsTightIDCorrected )
process.HLTAK4PFJetsSequence = cms.Sequence( process.HLTPreAK4PFJetsRecoSequence + process.HLTAK4PFJetsReconstructionSequence + process.HLTAK4PFJetsCorrectionSequence )
process.HLTBtagDeepCSVSequencePF = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfos + process.hltDeepCombinedSecondaryVertexBJetTagsPF )
process.HLTDoCaloSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence + process.HLTDoLocalHcalSequence + process.hltTowerMakerForAll )
process.HLTAK4CaloJetsReconstructionSequence = cms.Sequence( process.HLTDoCaloSequence + process.hltAK4CaloJets + process.hltAK4CaloJetsIDPassed )
process.HLTAK4CaloCorrectorProducersSequence = cms.Sequence( process.hltAK4CaloFastJetCorrector + process.hltAK4CaloRelativeCorrector + process.hltAK4CaloAbsoluteCorrector + process.hltAK4CaloResidualCorrector + process.hltAK4CaloCorrector )
process.HLTAK4CaloJetsCorrectionSequence = cms.Sequence( process.hltFixedGridRhoFastjetAllCalo + process.HLTAK4CaloCorrectorProducersSequence + process.hltAK4CaloJetsCorrected + process.hltAK4CaloJetsCorrectedIDPassed )
process.HLTAK4CaloJetsSequence = cms.Sequence( process.HLTAK4CaloJetsReconstructionSequence + process.HLTAK4CaloJetsCorrectionSequence )
process.HLTDoLocalPixelSequenceRegForBTag = cms.Sequence( process.hltSelectorJets20L1FastJet + process.hltSelectorCentralJets20L1FastJeta + process.hltSiPixelDigisRegForBTag + process.hltSiPixelClustersRegForBTag + process.hltSiPixelClustersRegForBTagCache + process.hltSiPixelRecHitsRegForBTag + process.hltPixelLayerQuadrupletsRegForBTag )
process.HLTFastRecopixelvertexingSequence = cms.Sequence( process.hltSelector4CentralJetsL1FastJet + process.hltFastPrimaryVertex + process.hltFastPVPixelVertexFilter + process.hltFastPVPixelTracksFilter + process.hltFastPVPixelTracksFitter + process.hltFastPVPixelTracksTrackingRegions + process.hltFastPVPixelTracksHitDoublets + process.hltFastPVPixelTracksHitQuadruplets + process.hltFastPVPixelTracks + process.hltFastPVJetTracksAssociator + process.hltFastPVJetVertexChecker + process.hltFastPVPixelTracksRecoverFilter + process.hltFastPVPixelTracksRecoverFitter + process.hltFastPVPixelTracksTrackingRegionsRecover + process.hltFastPVPixelTracksHitDoubletsRecover + process.hltFastPVPixelTracksHitQuadrupletsRecover + process.hltFastPVPixelTracksRecover + process.hltFastPVPixelTracksMerger + process.hltFastPVPixelVertices + process.hltFastPVPixelVerticesFilter )
process.HLTDoLocalStripSequenceRegForBTag = cms.Sequence( process.hltSiStripExcludedFEDListProducer + process.hltSiStripRawToClustersFacility + process.hltSiStripClustersRegForBTag )
process.HLTIterativeTrackingIteration0ForBTag = cms.Sequence( process.hltIter0PFLowPixelSeedsFromPixelTracksForBTag + process.hltIter0PFlowCkfTrackCandidatesForBTag + process.hltIter0PFlowCtfWithMaterialTracksForBTag + process.hltIter0PFlowTrackCutClassifierForBTag + process.hltIter0PFlowTrackSelectionHighPurityForBTag )
process.HLTIterativeTrackingIteration1ForBTag = cms.Sequence( process.hltIter1ClustersRefRemovalForBTag + process.hltIter1MaskedMeasurementTrackerEventForBTag + process.hltIter1PixelLayerQuadrupletsForBTag + process.hltIter1PFlowPixelTrackingRegionsForBTag + process.hltIter1PFlowPixelClusterCheckForBTag + process.hltIter1PFlowPixelHitDoubletsForBTag + process.hltIter1PFlowPixelHitQuadrupletsForBTag + process.hltIter1PFlowPixelSeedsForBTag + process.hltIter1PFlowCkfTrackCandidatesForBTag + process.hltIter1PFlowCtfWithMaterialTracksForBTag + process.hltIter1PFlowTrackCutClassifierPromptForBTag + process.hltIter1PFlowTrackCutClassifierDetachedForBTag + process.hltIter1PFlowTrackCutClassifierMergedForBTag + process.hltIter1PFlowTrackSelectionHighPurityForBTag )
process.HLTIterativeTrackingIteration2ForBTag = cms.Sequence( process.hltIter2ClustersRefRemovalForBTag + process.hltIter2MaskedMeasurementTrackerEventForBTag + process.hltIter2PixelLayerTripletsForBTag + process.hltIter2PFlowPixelTrackingRegionsForBTag + process.hltIter2PFlowPixelClusterCheckForBTag + process.hltIter2PFlowPixelHitDoubletsForBTag + process.hltIter2PFlowPixelHitTripletsForBTag + process.hltIter2PFlowPixelSeedsForBTag + process.hltIter2PFlowCkfTrackCandidatesForBTag + process.hltIter2PFlowCtfWithMaterialTracksForBTag + process.hltIter2PFlowTrackCutClassifierForBTag + process.hltIter2PFlowTrackSelectionHighPurityForBTag )
process.HLTIterativeTrackingIter02ForBTag = cms.Sequence( process.HLTIterativeTrackingIteration0ForBTag + process.HLTIterativeTrackingIteration1ForBTag + process.hltIter1MergedForBTag + process.HLTIterativeTrackingIteration2ForBTag + process.hltIter2MergedForBTag )
process.HLTTrackReconstructionForBTag = cms.Sequence( process.HLTDoLocalPixelSequenceRegForBTag + process.HLTFastRecopixelvertexingSequence + process.HLTDoLocalStripSequenceRegForBTag + process.HLTIterativeTrackingIter02ForBTag )
process.HLTBtagDeepCSVSequenceL3 = cms.Sequence( process.hltSelectorJets30L1FastJet + process.hltSelectorCentralJets30L1FastJeta + process.hltSelector8CentralJetsL1FastJet + process.HLTTrackReconstructionForBTag + process.hltVerticesL3 + process.hltFastPixelBLifetimeL3Associator + process.hltImpactParameterTagInfos + process.hltInclusiveVertexFinder + process.hltInclusiveSecondaryVertices + process.hltTrackVertexArbitrator + process.hltInclusiveMergedVertices + process.hltInclusiveSecondaryVertexFinderTagInfos + process.hltDeepCombinedSecondaryVertexBJetTagsInfosCalo + process.hltDeepCombinedSecondaryVertexBJetTagsCalo )
process.HLTBtagCSVSequencePF = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltBLifetimeAssociatorPF + process.hltBLifetimeTagInfosPF + process.hltInclusiveVertexFinderPF + process.hltInclusiveSecondaryVerticesPF + process.hltTrackVertexArbitratorPF + process.hltInclusiveMergedVerticesPF + process.hltSecondaryVertexTagInfosPF + process.hltCombinedSecondaryVertexBJetTagsPF )
process.HLTBtagCSVSequenceL3 = cms.Sequence( process.hltSelectorJets30L1FastJet + process.hltSelectorCentralJets30L1FastJeta + process.hltSelector8CentralJetsL1FastJet + process.HLTTrackReconstructionForBTag + process.hltVerticesL3 + process.hltFastPixelBLifetimeL3Associator + process.hltImpactParameterTagInfos + process.hltInclusiveVertexFinder + process.hltInclusiveSecondaryVertices + process.hltTrackVertexArbitrator + process.hltInclusiveMergedVertices + process.hltInclusiveSecondaryVertexFinderTagInfos + process.hltCombinedSecondaryVertexBJetTagsCalo )





process.HLTriggerFirstPath = cms.Path( process.hltGetConditions + process.hltGetRaw + process.hltBoolFalse )
process.HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v4 = cms.Path( process.HLTBeginSequence + process.hltL1sMu23EG10IorMu20EG17 + process.hltPreMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVL + process.HLTMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegSequence + process.HLTMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegSequence + process.HLTEndSequence )
process.HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v4 = cms.Path( process.HLTBeginSequence + process.hltL1sMu5EG23IorMu5IsoEG20IorMu7EG23IorMu7IsoEG20IorMuIso7EG23 + process.hltPreMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVL + process.HLTMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegSequence + process.HLTMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegSequence + process.HLTEndSequence )
process.HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v12 = cms.Path( process.HLTBeginSequence + process.hltL1sMu5EG23IorMu5IsoEG20IorMu7EG23IorMu7IsoEG20IorMuIso7EG23 + process.hltPreMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLDZ + process.HLTMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLMuonlegSequence + process.HLTMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLElectronlegSequence + process.hltMu12TrkIsoVVLEle23CaloIdLTrackIdLIsoVLDZFilter + process.HLTEndSequence )
process.HLT_Mu37_Ele27_CaloIdL_MW_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu16IorSingleMu25 + process.hltPreMu37Ele27CaloIdLMW + process.hltL1fL1sMu16orMu25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu16orMu25L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + process.hltL3fL1sMu16orMu25L1f0L2f10QL3Filtered37Q + process.HLTEle27CaloIdLMWUnseededSequence + process.HLTEndSequence )
process.HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v17 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleAndDoubleEG + process.hltPreEle23Ele12CaloIdLTrackIdLIsoVLDZ + process.HLTEle23Ele12CaloIdLTrackIdLIsoVLSequence + process.hltEle23Ele12CaloIdLTrackIdLIsoVLDZFilter + process.HLTEndSequence )
process.HLT_Mu27_Ele37_CaloIdL_MW_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu16IorSingleMu25 + process.hltPreMu27Ele37CaloIdLMW + process.hltL1fL1sMu16orMu25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu16orMu25L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + process.hltL3fL1sMu16orMu25L1f0L2f10QL3Filtered27Q + process.HLTEle37CaloIdLMWUnseededSequence + process.HLTEndSequence )
process.HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v12 = cms.Path( process.HLTBeginSequence + process.hltL1sMu23EG10IorMu20EG17 + process.hltPreMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLDZ + process.HLTMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLMuonlegSequence + process.HLTMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLElectronlegSequence + process.hltMu23TrkIsoVVLEle12CaloIdLTrackIdLIsoVLDZFilter + process.HLTEndSequence )
process.HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v17 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleAndDoubleEG + process.hltPreEle23Ele12CaloIdLTrackIdLIsoVL + process.HLTEle23Ele12CaloIdLTrackIdLIsoVLSequence + process.HLTEndSequence )
process.HLT_Mu23_Mu12_SameSign_DZ_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu23Mu12SameSignDZ + process.hltL1fL1sDoubleMu157L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu157L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu157L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu157L1Filtered0) + process.hltL3fL1DoubleMu157fFiltered12 + process.hltL3fL1DoubleMu157fFiltered23 + process.hltDiMuon2312SameSignFiltered + process.hltDiMuon2312SameSignDzFiltered0p2 + process.HLTEndSequence )
process.HLT_Mu23_Mu12_SameSign_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu23Mu12SameSign + process.hltL1fL1sDoubleMu157L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu157L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu157L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu157L1Filtered0) + process.hltL3fL1DoubleMu157fFiltered12 + process.hltL3fL1DoubleMu157fFiltered23 + process.hltDiMuon2312SameSignFiltered + process.HLTEndSequence )
process.HLT_Ele27_Ele37_CaloIdL_MW_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleAndDoubleEGNonIsoOrWithEG26WithJetAndTau + process.hltPreEle27Ele37CaloIdLMW + process.HLTEle37CaloIdLMWSequence + process.HLTDoubleEle37Ele27CaloIdLMWSequence + process.HLTEndSequence )
process.HLT_Mu23_Mu12_DZ_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu23Mu12DZ + process.hltL1fL1sDoubleMu157L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu157L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu157L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu157L1Filtered0) + process.hltL3fL1DoubleMu157fFiltered12 + process.hltL3fL1DoubleMu157fFiltered23 + process.hltDiMuon2312DzFiltered0p2 + process.HLTEndSequence )
process.NoFilter_PFBTagDeepCSV_v1 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePF + process.HLTEndSequence )
process.NoFilter_CaloBTagDeepCSV_v1 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterCaloBTagDeepCSVP1 + process.HLTAK4CaloJetsSequence + process.HLTBtagDeepCSVSequenceL3 + process.hltCaloJetCollection20Filter + process.HLTEndSequence )
process.NoFilter_PFBTagCSV_v1 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagCSV + process.HLTAK4PFJetsSequence + process.HLTBtagCSVSequencePF + process.HLTEndSequence )
process.NoFilter_CaloBTagCSV_v1 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterCaloBTagCSV + process.HLTAK4CaloJetsSequence + process.HLTBtagCSVSequenceL3 + process.hltCaloJetCollection20Filter + process.HLTEndSequence )
process.HLTriggerFinalPath = cms.Path( process.hltGtStage2Digis + process.hltScalersRawToDigi + process.hltFEDSelector + process.hltTriggerSummaryAOD + process.hltTriggerSummaryRAW + process.hltBoolFalse )



###############NEWDEV#########################

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar1 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( True ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar1 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar1" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar1 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar1 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar1 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var1 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar1 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar2 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( False ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar2 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar2" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar2 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar2 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar2 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var2 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar2 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar3 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.45 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar3 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar3" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar3 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar3 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar3 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var3 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar3 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar4 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.15 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar4 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar4" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar4 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar4 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar4 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var4 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar4 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar5 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( True ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar5 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar5" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar5 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar5 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar5 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var5 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar5 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar6 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 3 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar6 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar6" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar6 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar6 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar6 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var6 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar6 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar7 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 1 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar7 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar7" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar7 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar7 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar7 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var7 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar7 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar8 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( False ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar8 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar8" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar8 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar8 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar8 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var8 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar8 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar9 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.75 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar9 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar9" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar9 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar9 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar9 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var9 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar9 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar10 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.25 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar10 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar10" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar10 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar10 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar10 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var10 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar10 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar11 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 2.25 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar11 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar11" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar11 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar11 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar11 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var11 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar11 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar12 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 0.75 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar12 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar12" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar12 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar12 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar12 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var12 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar12 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar13 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.15 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.15 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar13 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar13" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar13 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar13 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar13 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var13 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar13 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar14 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.05 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.05 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar14 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar14" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar14 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar14 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar14 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var14 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar14 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar15 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.9394 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.9394 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar15 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar15" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar15 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar15 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar15 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var15 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar15 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar16 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.3132 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.3132 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar16 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar16" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar16 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar16 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar16 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var16 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar16 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar17 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 180.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 180.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar17 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar17" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar17 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar17 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar17 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var17 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar17 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar18 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 60.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 60.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar18 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar18" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar18 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar18 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar18 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var18 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar18 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar19 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.5526 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.5526 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar19 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar19" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar19 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar19 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar19 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var19 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar19 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar20 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.1842 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.1842 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar20 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar20" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar20 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar20 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar20 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var20 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar20 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar21 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.5),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.5 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar21 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar21" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar21 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar21 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar21 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var21 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar21 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar22 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 4.5 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 4.5 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar22 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar22" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar22 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar22 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar22 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var22 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar22 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar23 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 1.5 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 1.5 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar23 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar23" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar23 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar23 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar23 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var23 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar23 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar24 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 750.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 750.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar24 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar24" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar24 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar24 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar24 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var24 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar24 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar25 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 250.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 250.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar25 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar25" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar25 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar25 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar25 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var25 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar25 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar26 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( True ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( True ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar26 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar26" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar26 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar26 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar26 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var26 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar26 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar27 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 7.5 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 7.5 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar27 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar27" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar27 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar27 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar27 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var27 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar27 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar28 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 2.5 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 2.5 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar28 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar28" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar28 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar28 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar28 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var28 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar28 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar29 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.00157949 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.00157949),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar29 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar29" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar29 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar29 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar29 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var29 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar29 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar30 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.0005265 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.0005265),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar30 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar30" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar30 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar30 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar30 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var30 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar30 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar31 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.105 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.105 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar31 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar31" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar31 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar31 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar31 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var31 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar31 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar32 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.035 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.035 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar32 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar32" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar32 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar32 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar32 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var32 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar32 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar33 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 5 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 5 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar33 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar33" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar33 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar33 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar33 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var33 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar33 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar34 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 1 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 1 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar34 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar34" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar34 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar34 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar34 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var34 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar34 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar35 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.0078945 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.0078945 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar35 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar35" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar35 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar35 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar35 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var35 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar35 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar36 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.0026315 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.0026315 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar36 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar36" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar36 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar36 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar36 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var36 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar36 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar37 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.75 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.75 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar37 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar37" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar37 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar37 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar37 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var37 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar37 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar38 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.25 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.25 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar38 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar38" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar38 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar38 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar38 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var38 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar38 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar39 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.45 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.45 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar39 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar39" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar39 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar39 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar39 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var39 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar39 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar40 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.15 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.15 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar40 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar40" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar40 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar40 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar40 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var40 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar40 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar41 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 1 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar41 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar41" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar41 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar41 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar41 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var41 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar41 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar42 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar42 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar42" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar42 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar42 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar42 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var42 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar42 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar43 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 1 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar43 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar43" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar43 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar43 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar43 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var43 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar43 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar44 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 3 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar44 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar44" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar44 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar44 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar44 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var44 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar44 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar45 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 3.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar45 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar45" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar45 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar45 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar45 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var45 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar45 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar46 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 1.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar46 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar46" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar46 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar46 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar46 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var46 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar46 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar47 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.075 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar47 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar47" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar47 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar47 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar47 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var47 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar47 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar48 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.025 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar48 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar48" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar48 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar48 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar48 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var48 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar48 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar49 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(3  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar49 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar49" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar49 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar49 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar49 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var49 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar49 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar50 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(1  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar50 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar50" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar50 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar50 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar50 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var50 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar50 + process.HLTEndSequence )

process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar51 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.3 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 2 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.5 ),
      charmCut = cms.double( 1.5 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053 ),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 0 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 2.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.1 ),
        b_dR = cms.double( 0.6263 ),
        min_pT = cms.double( 120.0 ),
        b_pT = cms.double( 0.3684 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 3.0 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 5.0 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.001053),
        maxDistToAxis = cms.double( 0.07 ),
        totalHitsMin = cms.uint32( 3 ),
        a_pT = cms.double( 0.005263 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.5 ),
        jetDeltaRMax = cms.double( 0.3 ),
        pixelHitsMin = cms.uint32( 2 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(2  ),
      vertexFlip = cms.bool( True )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar51 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar51" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar51 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar51 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar51 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var51 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar51 + process.HLTEndSequence )

##############################################
process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar52 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.45 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 3 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.75 ),
      charmCut = cms.double( 2.25 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.15 ),
        b_dR = cms.double( 0.9394 ),
        min_pT = cms.double( 180.0 ),
        b_pT = cms.double( 0.5526 ),
        ptMin = cms.double( 0.5),
        max_pT_trackPTcut = cms.double( 4.5 ),
        max_pT = cms.double( 750.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 7.5 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.00157949 ),
        maxDistToAxis = cms.double( 0.105 ),
        totalHitsMin = cms.uint32( 5 ),
        a_pT = cms.double( 0.0078945 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.75 ),
        jetDeltaRMax = cms.double( 0.45 ),
        pixelHitsMin = cms.uint32( 1 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 3.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.15 ),
        b_dR = cms.double( 0.9394 ),
        min_pT = cms.double( 180.0 ),
        b_pT = cms.double( 0.5526 ),
        ptMin = cms.double( 0.5 ),
        max_pT_trackPTcut = cms.double( 4.5 ),
        max_pT = cms.double( 500.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 7.5 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.00157949),
        maxDistToAxis = cms.double( 0.105 ),
        totalHitsMin = cms.uint32( 5 ),
        a_pT = cms.double( 0.0078945 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.75 ),
        jetDeltaRMax = cms.double( 0.45 ),
        pixelHitsMin = cms.uint32( 3 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.75 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(3  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar52 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar52" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar52 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar52 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar52 )
#######PATHUpdate###########
process.NoFilter_PFBTagDeepCSV_v1_var52 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar52 + process.HLTEndSequence )


process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar53 = cms.EDProducer( "DeepNNTagInfoProducer",
    computer = cms.PSet( 
      trackFlip = cms.bool( False ),
      useTrackWeights = cms.bool( True ),
      trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.15 ) ),
      SoftLeptonFlip = cms.bool( False ),
      pseudoMultiplicityMin = cms.uint32( 1 ),
      correctVertexMass = cms.bool( True ),
      minimumTrackWeight = cms.double( 0.25 ),
      charmCut = cms.double( 0.75 ),
      trackPseudoSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.05 ),
        b_dR = cms.double( 0.3132 ),
        min_pT = cms.double( 60.0 ),
        b_pT = cms.double( 0.1842 ),
        ptMin = cms.double( 0.0),
        max_pT_trackPTcut = cms.double( 1.5 ),
        max_pT = cms.double( 250.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 2.5 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.0005265 ),
        maxDistToAxis = cms.double( 0.035 ),
        totalHitsMin = cms.uint32( 1 ),
        a_pT = cms.double( 0.0026315 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.25 ),
        jetDeltaRMax = cms.double( 0.15 ),
        pixelHitsMin = cms.uint32( 1 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( 1.0 )
      ),
      trackSelection = cms.PSet( 
        max_pT_dRcut = cms.double( 0.05 ),
        b_dR = cms.double( 0.3132 ),
        min_pT = cms.double( 60.0 ),
        b_pT = cms.double( 0.1842 ),
        ptMin = cms.double( 0.0 ),
        max_pT_trackPTcut = cms.double( 1.5 ),
        max_pT = cms.double( 250.0 ),
        useVariableJTA = cms.bool( False ),
        maxDecayLen = cms.double( 2.5 ),
        qualityClass = cms.string( "any" ),
        normChi2Max = cms.double( 99999.9 ),
        sip2dValMin = cms.double( -99999.9 ),
        sip3dValMin = cms.double( -99999.9 ),
        a_dR = cms.double( -0.0005265),
        maxDistToAxis = cms.double( 0.035 ),
        totalHitsMin = cms.uint32( 1 ),
        a_pT = cms.double( 0.0026315 ),
        sip2dSigMax = cms.double( 99999.9 ),
        sip2dValMax = cms.double( 99999.9 ),
        sip3dSigMax = cms.double( 99999.9 ),
        sip3dValMax = cms.double( 99999.9 ),
        min_pT_dRcut = cms.double( 0.25 ),
        jetDeltaRMax = cms.double( 0.15 ),
        pixelHitsMin = cms.uint32( 1 ),
        sip3dSigMin = cms.double( -99999.9 ),
        sip2dSigMin = cms.double( -99999.9 )
      ),
      pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.25 ) ),
      trackSort = cms.string( "sip2dSig" ),
      trackMultiplicityMin = cms.uint32(1  ),
      vertexFlip = cms.bool( False )
    ),
    svTagInfos = cms.InputTag( "hltDeepSecondaryVertexTagInfosPF" )
)
process.hltDeepCombinedSecondaryVertexBJetTagsPFvar53 = cms.EDProducer( "DeepFlavourJetTagsProducer",
    src = cms.InputTag( "hltDeepCombinedSecondaryVertexBJetTagsInfosvar53" ),
    checkSVForDefaults = cms.bool( True ),
    toAdd = cms.PSet(  probbb = cms.string( "probb" ) ),
    NNConfig = cms.FileInPath( "RecoBTag/Combined/data/DeepCSV_PhaseI.json" ),
    meanPadding = cms.bool( True )
)

#######SeQUENCEUpdate#########
process.HLTBtagDeepCSVSequencePFvar53 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltDeepSecondaryVertexTagInfosPF + process.hltDeepCombinedSecondaryVertexBJetTagsInfosvar53 + process.hltDeepCombinedSecondaryVertexBJetTagsPFvar53 )
#######PATHUpdate#############
process.NoFilter_PFBTagDeepCSV_v1_var53 = cms.Path( process.HLTBeginSequence + process.hltPreNoFilterPFBTagDeepCSVP1 + process.HLTAK4PFJetsSequence + process.HLTBtagDeepCSVSequencePFvar53 + process.HLTEndSequence )




process.HLTSchedule = cms.Schedule( *(process.HLTriggerFirstPath, process.HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v4, process.HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v4, process.HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v12, process.HLT_Mu37_Ele27_CaloIdL_MW_v2, process.HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v17, process.HLT_Mu27_Ele37_CaloIdL_MW_v2, process.HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v12, process.HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v17, process.HLT_Mu23_Mu12_SameSign_DZ_v2, process.HLT_Mu23_Mu12_SameSign_v2, process.HLT_Ele27_Ele37_CaloIdL_MW_v2, process.HLT_Mu23_Mu12_DZ_v2, process.NoFilter_PFBTagDeepCSV_v1, process.NoFilter_CaloBTagDeepCSV_v1,  process.NoFilter_PFBTagCSV_v1, process.NoFilter_CaloBTagCSV_v1, process.NoFilter_PFBTagDeepCSV_v1_var1, process.NoFilter_PFBTagDeepCSV_v1_var2, process.NoFilter_PFBTagDeepCSV_v1_var3,process.NoFilter_PFBTagDeepCSV_v1_var4,process.NoFilter_PFBTagDeepCSV_v1_var5,process.NoFilter_PFBTagDeepCSV_v1_var6,process.NoFilter_PFBTagDeepCSV_v1_var7,process.NoFilter_PFBTagDeepCSV_v1_var8,process.NoFilter_PFBTagDeepCSV_v1_var9, process.NoFilter_PFBTagDeepCSV_v1_var10,process.NoFilter_PFBTagDeepCSV_v1_var11, process.NoFilter_PFBTagDeepCSV_v1_var12, process.NoFilter_PFBTagDeepCSV_v1_var13, process.NoFilter_PFBTagDeepCSV_v1_var14,process.NoFilter_PFBTagDeepCSV_v1_var15,process.NoFilter_PFBTagDeepCSV_v1_var16,process.NoFilter_PFBTagDeepCSV_v1_var17,process.NoFilter_PFBTagDeepCSV_v1_var18,process.NoFilter_PFBTagDeepCSV_v1_var19,process.NoFilter_PFBTagDeepCSV_v1_var20,process.NoFilter_PFBTagDeepCSV_v1_var21,process.NoFilter_PFBTagDeepCSV_v1_var22,process.NoFilter_PFBTagDeepCSV_v1_var23,process.NoFilter_PFBTagDeepCSV_v1_var24,process.NoFilter_PFBTagDeepCSV_v1_var25,process.NoFilter_PFBTagDeepCSV_v1_var26,process.NoFilter_PFBTagDeepCSV_v1_var27,process.NoFilter_PFBTagDeepCSV_v1_var28,process.NoFilter_PFBTagDeepCSV_v1_var29,process.NoFilter_PFBTagDeepCSV_v1_var30,process.NoFilter_PFBTagDeepCSV_v1_var31,process.NoFilter_PFBTagDeepCSV_v1_var32,process.NoFilter_PFBTagDeepCSV_v1_var33,process.NoFilter_PFBTagDeepCSV_v1_var34,process.NoFilter_PFBTagDeepCSV_v1_var35,process.NoFilter_PFBTagDeepCSV_v1_var36,process.NoFilter_PFBTagDeepCSV_v1_var37,process.NoFilter_PFBTagDeepCSV_v1_var38,process.NoFilter_PFBTagDeepCSV_v1_var39,process.NoFilter_PFBTagDeepCSV_v1_var40,process.NoFilter_PFBTagDeepCSV_v1_var41,process.NoFilter_PFBTagDeepCSV_v1_var42,process.NoFilter_PFBTagDeepCSV_v1_var43,process.NoFilter_PFBTagDeepCSV_v1_var44,process.NoFilter_PFBTagDeepCSV_v1_var45,process.NoFilter_PFBTagDeepCSV_v1_var46,process.NoFilter_PFBTagDeepCSV_v1_var47,process.NoFilter_PFBTagDeepCSV_v1_var48,process.NoFilter_PFBTagDeepCSV_v1_var49,process.NoFilter_PFBTagDeepCSV_v1_var50,process.NoFilter_PFBTagDeepCSV_v1_var51,process.NoFilter_PFBTagDeepCSV_v1_var52,process.NoFilter_PFBTagDeepCSV_v1_var53,process.HLTriggerFinalPath ))


process.source = cms.Source( "PoolSource",
    fileNames = cms.untracked.vstring(
        'root://cms-xrd-global.cern.ch//store/data/Run2017C/MuonEG/RAW/v1/000/299/368/00000/00E9C4F1-E76B-E711-8952-02163E01A27B.root',
    ),
    lumisToProcess = cms.untracked.VLuminosityBlockRange( ),  
    inputCommands = cms.untracked.vstring(
        'keep *'
    )
)

# avoid PrescaleService error due to missing HLT paths
if 'PrescaleService' in process.__dict__:
    for pset in reversed(process.PrescaleService.prescaleTable):
        if not hasattr(process,pset.pathName.value()):
            process.PrescaleService.prescaleTable.remove(pset)

# limit the number of events to be processed
process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32( 10 )
)

# enable TrigReport, TimeReport and MultiThreading
process.options = cms.untracked.PSet(
    wantSummary = cms.untracked.bool( True ),
    numberOfThreads = cms.untracked.uint32( 4 ),
    numberOfStreams = cms.untracked.uint32( 0 ),
    sizeOfStackForThreadsInKB = cms.untracked.uint32( 10*1024 )
)

# override the GlobalTag, connection string and pfnPrefix
if 'GlobalTag' in process.__dict__:
    from Configuration.AlCa.GlobalTag import GlobalTag as customiseGlobalTag
    process.GlobalTag = customiseGlobalTag(process.GlobalTag, globaltag = '94X_dataRun2_ReReco_EOY17_v1')

process.GlobalTag.toGet.append(
	cms.PSet(
		record = cms.string("SiPixelGainCalibrationForHLTRcd"),
		tag = cms.string("SiPixelGainCalibrationHLT_2009runs_hlt"),
		connect = cms.string("frontier://FrontierProd/CMS_CONDITIONS")
	)
)

if 'MessageLogger' in process.__dict__:
    process.MessageLogger.categories.append('TriggerSummaryProducerAOD')
    process.MessageLogger.categories.append('L1GtTrigReport')
    process.MessageLogger.categories.append('L1TGlobalSummary')
    process.MessageLogger.categories.append('HLTrigReport')
    process.MessageLogger.categories.append('FastReport')

# load the DQMStore and DQMRootOutputModule
process.load( "DQMServices.Core.DQMStore_cfi" )
process.DQMStore.enableMultiThread = True

process.dqmOutput = cms.OutputModule("DQMRootOutputModule",
    fileName = cms.untracked.string("DQMIO.root")
)

process.DQMOutput = cms.EndPath( process.dqmOutput )

# add specific customizations
_customInfo = {}
_customInfo['menuType'  ]= "GRun"
_customInfo['globalTags']= {}
_customInfo['globalTags'][True ] = "auto:run2_hlt_GRun"
_customInfo['globalTags'][False] = "auto:run2_mc_GRun"
_customInfo['inputFiles']={}
_customInfo['inputFiles'][True]  = "file:RelVal_Raw_GRun_DATA.root"
_customInfo['inputFiles'][False] = "file:RelVal_Raw_GRun_MC.root"
_customInfo['maxEvents' ]=  10
_customInfo['globalTag' ]= "94X_dataRun2_ReReco_EOY17_v1"
_customInfo['inputFile' ]=  ['root://cms-xrd-global.cern.ch//store/data/Run2017C/MuonEG/RAW/v1/000/299/368/00000/00E9C4F1-E76B-E711-8952-02163E01A27B.root']
_customInfo['realData'  ]=  True
from HLTrigger.Configuration.customizeHLTforALL import customizeHLTforAll
process = customizeHLTforAll(process,"GRun",_customInfo)

from HLTrigger.Configuration.customizeHLTforCMSSW import customizeHLTforCMSSW
process = customizeHLTforCMSSW(process,"GRun")

# Eras-based customisations
from HLTrigger.Configuration.Eras import modifyHLTforEras
modifyHLTforEras(process)

